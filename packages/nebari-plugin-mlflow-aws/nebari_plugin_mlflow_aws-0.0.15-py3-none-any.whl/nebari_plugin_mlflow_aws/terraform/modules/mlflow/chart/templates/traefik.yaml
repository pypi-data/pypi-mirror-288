{{- if and .Values.ingress.enabled (eq .Values.ingress.type "traefik") -}}

{{- $fullName := include "mlflow.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "mlflow.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  entryPoints:
  {{- range .Values.ingress.entryPoints }}
  - {{ . | quote }}
  {{- end }}
  routes:
  - kind: Rule
    match: Host(`{{ .Values.ingress.host }}`) && PathPrefix(`{{ .Values.ingress.path }}`)
    services:
    - name: {{ $fullName }}
      namespace: {{ .Release.Namespace }}
      passHostHeader: true
      port: {{ $svcPort }}
    {{- if .Values.auth.enabled }}
    middlewares:
    - name: {{ .Release.Name }}-traefik-forward-auth
      namespace: {{ .Release.Namespace }}
    {{- end }}

{{- if .Values.auth.enabled }}

---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: {{ .Release.Name }}-traefik-forward-auth
  labels:
    {{- include "mlflow.labels" . | nindent 4 }}
spec:
  forwardAuth:
    address: http://{{ .Release.Name }}-traefik-forward-auth.{{ .Release.Namespace }}:{{ .Values.auth.service.port }}/
    authResponseHeaders:
    - X-Forwarded-User

{{- end }}

{{- end }}
