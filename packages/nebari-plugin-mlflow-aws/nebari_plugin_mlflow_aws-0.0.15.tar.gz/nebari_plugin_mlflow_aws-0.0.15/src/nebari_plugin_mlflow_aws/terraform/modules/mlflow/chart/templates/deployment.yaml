---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mlflow.fullname" . }}
  labels:
    {{- include "mlflow.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mlflow.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mlflow.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mlflow.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if and .Values.storage.db.enabled .Values.storage.db.autoUpgrade }}
      initContainers:
        - name: db-upgrade
          command:
          - mlflow
          args:
          - db
          - upgrade
          - "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_SERVER):$(POSTGRES_PORT)/$(POSTGRES_DB)"
          {{- if .Values.env }}
          env:
          {{ toYaml .Values.env | nindent 10 }}
          {{- end }}
          envFrom:
          {{- if .Values.storage.db.existingSecret }}
          - secretRef:
              name: {{ .Values.storage.db.existingSecret }}
          {{- else }}
          - secretRef:
              name: {{ .Release.Name }}-postgres-env
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          command:
          - mlflow
          args:
          - server
          - --host
          - 0.0.0.0
          - --port
          - "5000"
          - --gunicorn-opts
          - "--log-level {{ .Values.logLevel }} --timeout {{ .Values.timeout }}"
          {{- if .Values.storage.backendStoreUri }}
          - --backend-store-uri
          - {{ .Values.storage.backendStoreUri }}
          {{- else if and .Values.storage.db.enabled .Values.storage.db.selfHosted }}
          - --backend-store-uri
          - "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_SERVER):$(POSTGRES_PORT)/$(POSTGRES_DB)"
          {{- end }}
          {{- if .Values.ingress.path }}
          - --static-prefix
          - {{ .Values.ingress.path }}
          {{- end }}
          {{- if .Values.storage.artifacts.dedicatedServer }}
          - --default-artifact-root
          - http://{{ include "mlflow.fullname" . }}-artifacts.{{ .Release.Namespace }}:{{ .Values.service.port }}/api/2.0/mlflow-artifacts/artifacts/experiments
          - --no-serve-artifacts
          {{- else }}
          {{- if .Values.storage.artifacts.artifactsDestination }}
          - --artifacts-destination
          - {{ .Values.storage.artifacts.artifactsDestination }}
          {{- else if .Values.storage.artifacts.minio }}
          - --artifacts-destination
          - "s3://{{ .Values.storage.artifacts.minio.bucketName }}"
          {{- end }}
          {{- if .Values.storage.artifacts.defaultArtifactRoot }}
          - --default-artifact-root
          - {{ .Values.storage.artifacts.defaultArtifactRoot }}
          {{- else }}
          - --default-artifact-root
          - "mlflow-artifacts:/"
          {{- end }}
          - --serve-artifacts
          {{- end }}
          {{- range $a := .Values.args }}
          - {{ $a }}
          {{- end }}
          {{- if .Values.env }}
          env:
          {{ toYaml .Values.env | nindent 10 }}
          {{- end }}
          {{- if or .Values.envFrom .Values.storage.artifacts.minio .Values.storage.db.enabled }}
          envFrom:
          {{- if .Values.storage.artifacts.minio }}
          - secretRef:
              name: {{ .Release.Name }}-minio-env
          {{- end }}
          {{- if .Values.storage.db.enabled }}
          {{- if .Values.storage.db.existingSecret }}
          - secretRef:
              name: {{ .Values.storage.db.existingSecret }}
          {{- else }}
          - secretRef:
              name: {{ .Release.Name }}-postgres-env
          {{- end }}
          {{- end }}
          {{- if .Values.envFrom }}
          {{ toYaml .Values.envFrom | nindent 10 }}
          {{- end }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - name: http
            containerPort: 5000
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- if .Values.storage.artifacts.dedicatedServer }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mlflow.fullname" . }}-artifacts
  labels:
    {{- include "mlflow.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: mlflow-artifacts
      app.kubernetes.io/name: mlflow-artifacts
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/instance: mlflow-artifacts
        app.kubernetes.io/name: mlflow-artifacts
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mlflow.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          command:
          - mlflow
          args:
          - server
          - --host
          - 0.0.0.0
          - --port
          - "5000"
          - --gunicorn-opts
          - "--log-level {{ .Values.logLevel }} --timeout {{ .Values.timeout }}"
          - --serve-artifacts
          - --artifacts-only
          {{- if .Values.storage.artifacts.artifactsDestination }}
          - --artifacts-destination
          - {{ .Values.storage.artifacts.artifactsDestination }}
          {{- else if .Values.storage.artifacts.minio }}
          - --artifacts-destination
          - "s3://{{ .Values.storage.artifacts.minio.bucketName }}"
          {{- end }}
          {{- range $a := .Values.args }}
          - {{ $a }}
          {{- end }}
          {{- if .Values.env }}
          env:
          {{ toYaml .Values.env | nindent 10 }}
          {{- end }}
          {{- if or .Values.envFrom .Values.storage.artifacts.minio .Values.storage.db.enabled }}
          envFrom:
          {{- if .Values.storage.artifacts.minio }}
          - secretRef:
              name: {{ .Release.Name }}-minio-env
          {{- end }}
          {{- if .Values.envFrom }}
          {{ toYaml .Values.envFrom | nindent 10 }}
          {{- end }}
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - name: http
            containerPort: 5000
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- end }}

{{- if .Values.auth.enabled }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-traefik-forward-auth
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-traefik-forward-auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-traefik-forward-auth
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-traefik-forward-auth
    spec:
      containers:
      - image: {{ .Values.auth.image }}:{{ .Values.auth.tag }}
        name: main
        ports:
        - containerPort: 4181
          protocol: TCP
          name: http
        env:
        - name: LOG_LEVEL
          value: {{ .Values.logLevel }}
        - name: INSECURE_COOKIE
          value: "false"
        - name: URL_PATH
          value: {{ .Values.ingress.path }}/_oauth
        - name: PROVIDERS_OIDC_ISSUER_URL
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-traefik-forward-auth
              key: issuer_url
        - name: PROVIDERS_OIDC_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-traefik-forward-auth
              key: client_id
        - name: PROVIDERS_OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-traefik-forward-auth
              key: client_secret
        - name: SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-traefik-forward-auth
              key: signing_key
        - name: DEFAULT_PROVIDER
          value: "oidc"
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-traefik-forward-auth
  namespace: {{ .Release.Namespace }}
type: Opaque
stringData: {{ toYaml .Values.auth.secret.data | nindent 2 }}

{{- end }}
