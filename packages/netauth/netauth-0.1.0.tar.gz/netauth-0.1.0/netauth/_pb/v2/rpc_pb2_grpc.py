# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import rpc_pb2 as v2_dot_rpc__pb2

GRPC_GENERATED_VERSION = '1.65.1'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.66.0'
SCHEDULED_RELEASE_DATE = 'August 6, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in v2/rpc_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class NetAuth2Stub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EntityCreate = channel.unary_unary(
                '/netauth.v2.NetAuth2/EntityCreate',
                request_serializer=v2_dot_rpc__pb2.EntityRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.EntityUpdate = channel.unary_unary(
                '/netauth.v2.NetAuth2/EntityUpdate',
                request_serializer=v2_dot_rpc__pb2.EntityRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.EntityInfo = channel.unary_unary(
                '/netauth.v2.NetAuth2/EntityInfo',
                request_serializer=v2_dot_rpc__pb2.EntityRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.ListOfEntities.FromString,
                _registered_method=True)
        self.EntitySearch = channel.unary_unary(
                '/netauth.v2.NetAuth2/EntitySearch',
                request_serializer=v2_dot_rpc__pb2.SearchRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.ListOfEntities.FromString,
                _registered_method=True)
        self.EntityUM = channel.unary_unary(
                '/netauth.v2.NetAuth2/EntityUM',
                request_serializer=v2_dot_rpc__pb2.KVRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.ListOfStrings.FromString,
                _registered_method=True)
        self.EntityKVAdd = channel.unary_unary(
                '/netauth.v2.NetAuth2/EntityKVAdd',
                request_serializer=v2_dot_rpc__pb2.KV2Request.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.EntityKVGet = channel.unary_unary(
                '/netauth.v2.NetAuth2/EntityKVGet',
                request_serializer=v2_dot_rpc__pb2.KV2Request.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.ListOfKVData.FromString,
                _registered_method=True)
        self.EntityKVDel = channel.unary_unary(
                '/netauth.v2.NetAuth2/EntityKVDel',
                request_serializer=v2_dot_rpc__pb2.KV2Request.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.EntityKVReplace = channel.unary_unary(
                '/netauth.v2.NetAuth2/EntityKVReplace',
                request_serializer=v2_dot_rpc__pb2.KV2Request.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.EntityKeys = channel.unary_unary(
                '/netauth.v2.NetAuth2/EntityKeys',
                request_serializer=v2_dot_rpc__pb2.KVRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.ListOfStrings.FromString,
                _registered_method=True)
        self.EntityDestroy = channel.unary_unary(
                '/netauth.v2.NetAuth2/EntityDestroy',
                request_serializer=v2_dot_rpc__pb2.EntityRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.EntityLock = channel.unary_unary(
                '/netauth.v2.NetAuth2/EntityLock',
                request_serializer=v2_dot_rpc__pb2.EntityRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.EntityUnlock = channel.unary_unary(
                '/netauth.v2.NetAuth2/EntityUnlock',
                request_serializer=v2_dot_rpc__pb2.EntityRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.EntityGroups = channel.unary_unary(
                '/netauth.v2.NetAuth2/EntityGroups',
                request_serializer=v2_dot_rpc__pb2.EntityRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.ListOfGroups.FromString,
                _registered_method=True)
        self.AuthEntity = channel.unary_unary(
                '/netauth.v2.NetAuth2/AuthEntity',
                request_serializer=v2_dot_rpc__pb2.AuthRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.AuthGetToken = channel.unary_unary(
                '/netauth.v2.NetAuth2/AuthGetToken',
                request_serializer=v2_dot_rpc__pb2.AuthRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.AuthResult.FromString,
                _registered_method=True)
        self.AuthValidateToken = channel.unary_unary(
                '/netauth.v2.NetAuth2/AuthValidateToken',
                request_serializer=v2_dot_rpc__pb2.AuthRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.AuthChangeSecret = channel.unary_unary(
                '/netauth.v2.NetAuth2/AuthChangeSecret',
                request_serializer=v2_dot_rpc__pb2.AuthRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.GroupCreate = channel.unary_unary(
                '/netauth.v2.NetAuth2/GroupCreate',
                request_serializer=v2_dot_rpc__pb2.GroupRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.GroupUpdate = channel.unary_unary(
                '/netauth.v2.NetAuth2/GroupUpdate',
                request_serializer=v2_dot_rpc__pb2.GroupRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.GroupInfo = channel.unary_unary(
                '/netauth.v2.NetAuth2/GroupInfo',
                request_serializer=v2_dot_rpc__pb2.GroupRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.ListOfGroups.FromString,
                _registered_method=True)
        self.GroupUM = channel.unary_unary(
                '/netauth.v2.NetAuth2/GroupUM',
                request_serializer=v2_dot_rpc__pb2.KVRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.ListOfStrings.FromString,
                _registered_method=True)
        self.GroupKVAdd = channel.unary_unary(
                '/netauth.v2.NetAuth2/GroupKVAdd',
                request_serializer=v2_dot_rpc__pb2.KV2Request.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.GroupKVGet = channel.unary_unary(
                '/netauth.v2.NetAuth2/GroupKVGet',
                request_serializer=v2_dot_rpc__pb2.KV2Request.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.ListOfKVData.FromString,
                _registered_method=True)
        self.GroupKVDel = channel.unary_unary(
                '/netauth.v2.NetAuth2/GroupKVDel',
                request_serializer=v2_dot_rpc__pb2.KV2Request.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.GroupKVReplace = channel.unary_unary(
                '/netauth.v2.NetAuth2/GroupKVReplace',
                request_serializer=v2_dot_rpc__pb2.KV2Request.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.GroupUpdateRules = channel.unary_unary(
                '/netauth.v2.NetAuth2/GroupUpdateRules',
                request_serializer=v2_dot_rpc__pb2.GroupRulesRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.GroupAddMember = channel.unary_unary(
                '/netauth.v2.NetAuth2/GroupAddMember',
                request_serializer=v2_dot_rpc__pb2.EntityRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.GroupDelMember = channel.unary_unary(
                '/netauth.v2.NetAuth2/GroupDelMember',
                request_serializer=v2_dot_rpc__pb2.EntityRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.GroupDestroy = channel.unary_unary(
                '/netauth.v2.NetAuth2/GroupDestroy',
                request_serializer=v2_dot_rpc__pb2.GroupRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.GroupMembers = channel.unary_unary(
                '/netauth.v2.NetAuth2/GroupMembers',
                request_serializer=v2_dot_rpc__pb2.GroupRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.ListOfEntities.FromString,
                _registered_method=True)
        self.GroupSearch = channel.unary_unary(
                '/netauth.v2.NetAuth2/GroupSearch',
                request_serializer=v2_dot_rpc__pb2.SearchRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.ListOfGroups.FromString,
                _registered_method=True)
        self.SystemCapabilities = channel.unary_unary(
                '/netauth.v2.NetAuth2/SystemCapabilities',
                request_serializer=v2_dot_rpc__pb2.CapabilityRequest.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.SystemPing = channel.unary_unary(
                '/netauth.v2.NetAuth2/SystemPing',
                request_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                _registered_method=True)
        self.SystemStatus = channel.unary_unary(
                '/netauth.v2.NetAuth2/SystemStatus',
                request_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
                response_deserializer=v2_dot_rpc__pb2.ServerStatus.FromString,
                _registered_method=True)


class NetAuth2Servicer(object):
    """Missing associated documentation comment in .proto file."""

    def EntityCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EntityUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EntityInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EntitySearch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EntityUM(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EntityKVAdd(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EntityKVGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EntityKVDel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EntityKVReplace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EntityKeys(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EntityDestroy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EntityLock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EntityUnlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EntityGroups(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthGetToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthValidateToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthChangeSecret(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupUM(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupKVAdd(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupKVGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupKVDel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupKVReplace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupUpdateRules(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupAddMember(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupDelMember(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupDestroy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupMembers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GroupSearch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SystemCapabilities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SystemPing(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SystemStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NetAuth2Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'EntityCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.EntityCreate,
                    request_deserializer=v2_dot_rpc__pb2.EntityRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'EntityUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.EntityUpdate,
                    request_deserializer=v2_dot_rpc__pb2.EntityRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'EntityInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.EntityInfo,
                    request_deserializer=v2_dot_rpc__pb2.EntityRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.ListOfEntities.SerializeToString,
            ),
            'EntitySearch': grpc.unary_unary_rpc_method_handler(
                    servicer.EntitySearch,
                    request_deserializer=v2_dot_rpc__pb2.SearchRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.ListOfEntities.SerializeToString,
            ),
            'EntityUM': grpc.unary_unary_rpc_method_handler(
                    servicer.EntityUM,
                    request_deserializer=v2_dot_rpc__pb2.KVRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.ListOfStrings.SerializeToString,
            ),
            'EntityKVAdd': grpc.unary_unary_rpc_method_handler(
                    servicer.EntityKVAdd,
                    request_deserializer=v2_dot_rpc__pb2.KV2Request.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'EntityKVGet': grpc.unary_unary_rpc_method_handler(
                    servicer.EntityKVGet,
                    request_deserializer=v2_dot_rpc__pb2.KV2Request.FromString,
                    response_serializer=v2_dot_rpc__pb2.ListOfKVData.SerializeToString,
            ),
            'EntityKVDel': grpc.unary_unary_rpc_method_handler(
                    servicer.EntityKVDel,
                    request_deserializer=v2_dot_rpc__pb2.KV2Request.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'EntityKVReplace': grpc.unary_unary_rpc_method_handler(
                    servicer.EntityKVReplace,
                    request_deserializer=v2_dot_rpc__pb2.KV2Request.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'EntityKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.EntityKeys,
                    request_deserializer=v2_dot_rpc__pb2.KVRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.ListOfStrings.SerializeToString,
            ),
            'EntityDestroy': grpc.unary_unary_rpc_method_handler(
                    servicer.EntityDestroy,
                    request_deserializer=v2_dot_rpc__pb2.EntityRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'EntityLock': grpc.unary_unary_rpc_method_handler(
                    servicer.EntityLock,
                    request_deserializer=v2_dot_rpc__pb2.EntityRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'EntityUnlock': grpc.unary_unary_rpc_method_handler(
                    servicer.EntityUnlock,
                    request_deserializer=v2_dot_rpc__pb2.EntityRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'EntityGroups': grpc.unary_unary_rpc_method_handler(
                    servicer.EntityGroups,
                    request_deserializer=v2_dot_rpc__pb2.EntityRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.ListOfGroups.SerializeToString,
            ),
            'AuthEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthEntity,
                    request_deserializer=v2_dot_rpc__pb2.AuthRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'AuthGetToken': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthGetToken,
                    request_deserializer=v2_dot_rpc__pb2.AuthRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.AuthResult.SerializeToString,
            ),
            'AuthValidateToken': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthValidateToken,
                    request_deserializer=v2_dot_rpc__pb2.AuthRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'AuthChangeSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthChangeSecret,
                    request_deserializer=v2_dot_rpc__pb2.AuthRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'GroupCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupCreate,
                    request_deserializer=v2_dot_rpc__pb2.GroupRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'GroupUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupUpdate,
                    request_deserializer=v2_dot_rpc__pb2.GroupRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'GroupInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupInfo,
                    request_deserializer=v2_dot_rpc__pb2.GroupRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.ListOfGroups.SerializeToString,
            ),
            'GroupUM': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupUM,
                    request_deserializer=v2_dot_rpc__pb2.KVRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.ListOfStrings.SerializeToString,
            ),
            'GroupKVAdd': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupKVAdd,
                    request_deserializer=v2_dot_rpc__pb2.KV2Request.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'GroupKVGet': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupKVGet,
                    request_deserializer=v2_dot_rpc__pb2.KV2Request.FromString,
                    response_serializer=v2_dot_rpc__pb2.ListOfKVData.SerializeToString,
            ),
            'GroupKVDel': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupKVDel,
                    request_deserializer=v2_dot_rpc__pb2.KV2Request.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'GroupKVReplace': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupKVReplace,
                    request_deserializer=v2_dot_rpc__pb2.KV2Request.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'GroupUpdateRules': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupUpdateRules,
                    request_deserializer=v2_dot_rpc__pb2.GroupRulesRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'GroupAddMember': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupAddMember,
                    request_deserializer=v2_dot_rpc__pb2.EntityRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'GroupDelMember': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupDelMember,
                    request_deserializer=v2_dot_rpc__pb2.EntityRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'GroupDestroy': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupDestroy,
                    request_deserializer=v2_dot_rpc__pb2.GroupRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'GroupMembers': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupMembers,
                    request_deserializer=v2_dot_rpc__pb2.GroupRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.ListOfEntities.SerializeToString,
            ),
            'GroupSearch': grpc.unary_unary_rpc_method_handler(
                    servicer.GroupSearch,
                    request_deserializer=v2_dot_rpc__pb2.SearchRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.ListOfGroups.SerializeToString,
            ),
            'SystemCapabilities': grpc.unary_unary_rpc_method_handler(
                    servicer.SystemCapabilities,
                    request_deserializer=v2_dot_rpc__pb2.CapabilityRequest.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'SystemPing': grpc.unary_unary_rpc_method_handler(
                    servicer.SystemPing,
                    request_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                    response_serializer=v2_dot_rpc__pb2.Empty.SerializeToString,
            ),
            'SystemStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SystemStatus,
                    request_deserializer=v2_dot_rpc__pb2.Empty.FromString,
                    response_serializer=v2_dot_rpc__pb2.ServerStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'netauth.v2.NetAuth2', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('netauth.v2.NetAuth2', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class NetAuth2(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def EntityCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/EntityCreate',
            v2_dot_rpc__pb2.EntityRequest.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EntityUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/EntityUpdate',
            v2_dot_rpc__pb2.EntityRequest.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EntityInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/EntityInfo',
            v2_dot_rpc__pb2.EntityRequest.SerializeToString,
            v2_dot_rpc__pb2.ListOfEntities.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EntitySearch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/EntitySearch',
            v2_dot_rpc__pb2.SearchRequest.SerializeToString,
            v2_dot_rpc__pb2.ListOfEntities.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EntityUM(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/EntityUM',
            v2_dot_rpc__pb2.KVRequest.SerializeToString,
            v2_dot_rpc__pb2.ListOfStrings.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EntityKVAdd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/EntityKVAdd',
            v2_dot_rpc__pb2.KV2Request.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EntityKVGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/EntityKVGet',
            v2_dot_rpc__pb2.KV2Request.SerializeToString,
            v2_dot_rpc__pb2.ListOfKVData.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EntityKVDel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/EntityKVDel',
            v2_dot_rpc__pb2.KV2Request.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EntityKVReplace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/EntityKVReplace',
            v2_dot_rpc__pb2.KV2Request.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EntityKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/EntityKeys',
            v2_dot_rpc__pb2.KVRequest.SerializeToString,
            v2_dot_rpc__pb2.ListOfStrings.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EntityDestroy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/EntityDestroy',
            v2_dot_rpc__pb2.EntityRequest.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EntityLock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/EntityLock',
            v2_dot_rpc__pb2.EntityRequest.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EntityUnlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/EntityUnlock',
            v2_dot_rpc__pb2.EntityRequest.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EntityGroups(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/EntityGroups',
            v2_dot_rpc__pb2.EntityRequest.SerializeToString,
            v2_dot_rpc__pb2.ListOfGroups.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AuthEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/AuthEntity',
            v2_dot_rpc__pb2.AuthRequest.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AuthGetToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/AuthGetToken',
            v2_dot_rpc__pb2.AuthRequest.SerializeToString,
            v2_dot_rpc__pb2.AuthResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AuthValidateToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/AuthValidateToken',
            v2_dot_rpc__pb2.AuthRequest.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AuthChangeSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/AuthChangeSecret',
            v2_dot_rpc__pb2.AuthRequest.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/GroupCreate',
            v2_dot_rpc__pb2.GroupRequest.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/GroupUpdate',
            v2_dot_rpc__pb2.GroupRequest.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/GroupInfo',
            v2_dot_rpc__pb2.GroupRequest.SerializeToString,
            v2_dot_rpc__pb2.ListOfGroups.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupUM(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/GroupUM',
            v2_dot_rpc__pb2.KVRequest.SerializeToString,
            v2_dot_rpc__pb2.ListOfStrings.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupKVAdd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/GroupKVAdd',
            v2_dot_rpc__pb2.KV2Request.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupKVGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/GroupKVGet',
            v2_dot_rpc__pb2.KV2Request.SerializeToString,
            v2_dot_rpc__pb2.ListOfKVData.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupKVDel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/GroupKVDel',
            v2_dot_rpc__pb2.KV2Request.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupKVReplace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/GroupKVReplace',
            v2_dot_rpc__pb2.KV2Request.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupUpdateRules(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/GroupUpdateRules',
            v2_dot_rpc__pb2.GroupRulesRequest.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupAddMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/GroupAddMember',
            v2_dot_rpc__pb2.EntityRequest.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupDelMember(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/GroupDelMember',
            v2_dot_rpc__pb2.EntityRequest.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupDestroy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/GroupDestroy',
            v2_dot_rpc__pb2.GroupRequest.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupMembers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/GroupMembers',
            v2_dot_rpc__pb2.GroupRequest.SerializeToString,
            v2_dot_rpc__pb2.ListOfEntities.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GroupSearch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/GroupSearch',
            v2_dot_rpc__pb2.SearchRequest.SerializeToString,
            v2_dot_rpc__pb2.ListOfGroups.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SystemCapabilities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/SystemCapabilities',
            v2_dot_rpc__pb2.CapabilityRequest.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SystemPing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/SystemPing',
            v2_dot_rpc__pb2.Empty.SerializeToString,
            v2_dot_rpc__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SystemStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/netauth.v2.NetAuth2/SystemStatus',
            v2_dot_rpc__pb2.Empty.SerializeToString,
            v2_dot_rpc__pb2.ServerStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
