from ._utilities import remove_indentation

SYSTEM_PROMPT = """You are an extremely skilled python developer. Your name is git-bob."""
def setup_ai_remark():
    from git_bob import __version__
    return f"<sup>This message was generated by [git-bob](https://github.com/haesleinhuepf/git-bob) {__version__}, an AI-based assistant.</sup>"


def comment_on_issue(repository, issue, prompt_function):

    from ._github_utilities import get_conversation_on_issue, add_comment_to_issue

    ai_remark = setup_ai_remark()

    discussion = get_conversation_on_issue(repository, issue)
    print("Discussion:", discussion)

    comment = prompt_function(remove_indentation(f"""
    {SYSTEM_PROMPT}
    Respond to a github issue. Its entire discussion is given.

    ## Discussion

    {discussion}

    ## Your task

    Respond to the discussion above. 
    Do NOT explain your response or anything else. 
    Just respond to the discussion.
    """))

    print("comment:", comment)

    add_comment_to_issue(repository, issue, remove_indentation(f"""        
    {ai_remark}

    {comment}
    """))

def review_pull_request(repository, issue, prompt_function):

    from ._github_utilities import get_conversation_on_issue, add_comment_to_issue

    ai_remark = setup_ai_remark()

    discussion = get_conversation_on_issue(repository, issue)
    print("Discussion:", discussion)

    # load temp.txt into a variable
    with open("temp.txt", "r") as file:
        file_changes = file.read()

    print("file_changes:", file_changes)

    comment = prompt_function(remove_indentation(f"""
    {SYSTEM_PROMPT}
    Generate a response to a github pull-request. 
    Given are the discussion on the pull-request and the changed files.

    ## Discussion

    {discussion}

    ## Changed files

    {file_changes}

    ## Your task

    Respond to the discussion above. 
    Do NOT explain your response or anything else. 
    Just respond to the discussion.
    """))

    print("comment:", comment)

    add_comment_to_issue(repository, issue, remove_indentation(f"""        
    {ai_remark}

    {comment}
    """))


def solve_github_issue(repository, issue):
    """Attempt to solve a github issue by modifying a single file and sending a pull-request."""
    # source: https://github.com/ScaDS/generative-ai-notebooks/blob/main/docs/64_github_interaction/solving_github_issues.ipynb
    from ._github_utilities import get_github_issue_details, list_repository_files, get_repository_file_contents, update_file_in_new_branch, send_pull_request, add_comment_to_issue
    from blablado import Assistant

    ai_remark = setup_ai_remark()

    print(f"-> solve_github_issue({repository}, {issue})")
    assistant = Assistant()
    assistant.register_tool(get_github_issue_details)
    assistant.register_tool(list_repository_files)
    assistant.register_tool(get_repository_file_contents)
    assistant.register_tool(update_file_in_new_branch)
    assistant.register_tool(send_pull_request)

    assistant.do(f"Tell me the most important details of issue #{issue} in the repository {repository}")
    assistant.do(f"List all files in the repository {repository}")
    filename = assistant.tell("Which of these files might be relevant for issue #{issue} ? Respond ONLY the filename.")
    print("Related filename", filename)
    assistant.do(f"Load the entire content of {filename} from the  in the repository {repository} .")
    branch_name = assistant.tell(f"Modify the file content of {filename} to fix the issue in a new branch. Respond ONLY the branch name.")
    add_comment_to_issue(repository, issue, remove_indentation(f"""
    {ai_remark}
    
    I created a branch with a potential solution [here](https://github.com/{repository}/tree/{branch_name}). I will attempt to send a pull-request.
    """))
    assistant.do("Send a pull-request of the new branch explaining what we changed.")
