# Generated by Django 5.0.1 on 2024-01-22 13:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('geolocation', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('email_sender', models.EmailField(max_length=254, null=True, verbose_name='email')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='username')),
                ('full_name', models.CharField(max_length=150, verbose_name='Full Name')),
                ('about', models.TextField(blank=True, max_length=500, verbose_name='about')),
                ('cloud_id', models.CharField(max_length=150, null=True, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='profile/', verbose_name='Avatar')),
                ('phone_number', models.CharField(default='No Phone', max_length=15)),
                ('zip', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(max_length=150, verbose_name='Address')),
                ('meta_token', models.CharField(default='no_token', max_length=1000)),
                ('meta_status', models.CharField(default='not_logged_in', max_length=50)),
                ('meta_id', models.CharField(default='noID', max_length=150)),
                ('is_active', models.BooleanField(default=False, help_text='Control of user status', verbose_name='Activation')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_subscribed', models.BooleanField(default=False)),
                ('is_business', models.BooleanField(default=False)),
                ('is_suspended', models.BooleanField(default=False)),
                ('terms', models.BooleanField(default=False)),
                ('yearly_subscriber', models.BooleanField(default=False)),
                ('cloud_services', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('newsletter', models.BooleanField(default=False, help_text='If you accept, we will keep you informed of all our promotions and offers.')),
                ('city_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='geolocation.city', verbose_name='City')),
                ('country_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='geolocation.country', verbose_name='Country')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Accounts',
                'verbose_name_plural': 'Accounts',
            },
        ),
    ]
