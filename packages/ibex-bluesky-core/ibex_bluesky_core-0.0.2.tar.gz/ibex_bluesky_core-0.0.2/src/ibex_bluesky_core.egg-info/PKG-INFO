Metadata-Version: 2.1
Name: ibex-bluesky-core
Version: 0.0.2
Summary: Core bluesky plan stubs & devices for use at ISIS
Author-email: ISIS Experiment Controls <ISISExperimentControls@stfc.ac.uk>
Maintainer-email: ISIS Experiment Controls <ISISExperimentControls@stfc.ac.uk>
License: BSD 3-Clause License
        
        Copyright (c) 2024, ISIS Experiment Controls Computing
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        1. Redistributions of source code must retain the above copyright notice, this
           list of conditions and the following disclaimer.
        
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        
        3. Neither the name of the copyright holder nor the names of its
           contributors may be used to endorse or promote products derived from
           this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
Project-URL: Homepage, https://github.com/isiscomputinggroup/ibex_bluesky_core
Project-URL: Bug Reports, https://github.com/isiscomputinggroup/ibex_bluesky_core/issues
Project-URL: Source, https://github.com/isiscomputinggroup/ibex_bluesky_core
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3 :: Only
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: bluesky
Requires-Dist: ophyd-async[ca]
Provides-Extra: dev
Requires-Dist: ruff; extra == "dev"
Requires-Dist: pyright; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-asyncio; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"

# ibex_bluesky_core

Core bluesky plan stubs &amp; devices for use at ISIS. Not instrument/technique specific.

### Local development

Create & activate a python virtual environment (windows):

```
python -m venv .venv
.venv\Scripts\activate
```

Install the library & dev dependencies in editable mode:
```
python -m pip install -e .[dev]
```

Run the unit tests:
```
python -m pytest
```

Run lints:
```
ruff format --check
ruff check
pyright
```

### Release Process

Releases are created automatically via a github action, to create a release just create a new git tag on the commit on main (i.e. `git pull`, `git checkout main` `git tag <release.version.number.` `git push origin tag <release.version.number.`) This will start a workflow that will check that all linters and tests pass, and then publish a new release with the version number specified in the tag to [Pypi](https://pypi.org/project/ibex-bluesky-core/0.0.1/) and github. The new release can then be installed via `pip install ibex_bluesky_core`. The workflow must be approved by someone in the ICP-Write group.

Credentials for Pypi can be found on keeper.
