# coding: utf-8

"""
    Connection Rest API 1.0

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from connection_restapi_client_poc.models.ci_geometry3_d_vector3_dci_basic_types import CIGeometry3DVector3DCIBasicTypes

class TestCIGeometry3DVector3DCIBasicTypes(unittest.TestCase):
    """CIGeometry3DVector3DCIBasicTypes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CIGeometry3DVector3DCIBasicTypes:
        """Test CIGeometry3DVector3DCIBasicTypes
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CIGeometry3DVector3DCIBasicTypes`
        """
        model = CIGeometry3DVector3DCIBasicTypes()
        if include_optional:
            return CIGeometry3DVector3DCIBasicTypes(
                direction_x = 1.337,
                direction_y = 1.337,
                direction_z = 1.337,
                normalize = connection_restapi_client_poc.models.ci_geometry3_d_vector3_d_ci_basic_types.CI_Geometry3D_Vector3D-CI_BasicTypes(
                    direction_x = 1.337, 
                    direction_y = 1.337, 
                    direction_z = 1.337, 
                    magnitude = 1.337, 
                    magnitude_squared = 1.337, ),
                magnitude = 1.337,
                magnitude_squared = 1.337
            )
        else:
            return CIGeometry3DVector3DCIBasicTypes(
        )
        """

    def testCIGeometry3DVector3DCIBasicTypes(self):
        """Test CIGeometry3DVector3DCIBasicTypes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
