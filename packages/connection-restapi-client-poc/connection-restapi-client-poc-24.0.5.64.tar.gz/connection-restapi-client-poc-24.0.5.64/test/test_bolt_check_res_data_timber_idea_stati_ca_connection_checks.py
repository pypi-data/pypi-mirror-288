# coding: utf-8

"""
    Connection Rest API 1.0

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from connection_restapi_client_poc.models.bolt_check_res_data_timber_idea_stati_ca_connection_checks import BoltCheckResDataTimberIdeaStatiCaConnectionChecks

class TestBoltCheckResDataTimberIdeaStatiCaConnectionChecks(unittest.TestCase):
    """BoltCheckResDataTimberIdeaStatiCaConnectionChecks unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BoltCheckResDataTimberIdeaStatiCaConnectionChecks:
        """Test BoltCheckResDataTimberIdeaStatiCaConnectionChecks
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BoltCheckResDataTimberIdeaStatiCaConnectionChecks`
        """
        model = BoltCheckResDataTimberIdeaStatiCaConnectionChecks()
        if include_optional:
            return BoltCheckResDataTimberIdeaStatiCaConnectionChecks(
                bolt_tension_resistance = 1.337,
                bolt_punching_resistance = 1.337,
                bolt_tension_force = 1.337,
                bolt_shear_resistance = 1.337,
                bolt_shear_resistance_tension = 1.337,
                bolt_bearing_resistance = 1.337,
                bearing_resistance_bolt = 1.337,
                bearing_resistance_con_part = 1.337,
                bolt_shear_force = 1.337,
                number_of_shear_planes = 56,
                bolt_shear_forces = [
                    1.337
                    ],
                unity_check_tension = 1.337,
                unity_check_tension_res = 1.337,
                unity_check_shear = 1.337,
                bolt_assembly_name = '',
                bolt_tension_force_loadcase = '',
                bolt_shear_force_loadcase = '',
                bolt_interaction_loadcase = '',
                bolt_tension_force_loadcase_id = 56,
                bolt_shear_force_loadcase_id = 56,
                bolt_interaction_loadcase_id = 56,
                forces_all_load_cases = {
                    'key' : [
                        1.337
                        ]
                    },
                element_axis_y = '',
                element_axis_z = '',
                unity_check_bearing = 1.337,
                code_type = 'none',
                connector_grip_length = 1.337,
                filler_plates_pack_th = 1.337,
                angle = 1.337,
                fub = 1.337,
                a_ftrd = 1.337,
                a_fvrd = 1.337,
                k2 = 1.337,
                alfa_v = 1.337,
                tp_bprd = 1.337,
                fu_bprd = 1.337,
                dm_bprd = 1.337,
                gamma_m2 = 1.337,
                d_fbrd = 1.337,
                th_fbrd = 1.337,
                k1 = 1.337,
                alpha_b = 1.337,
                gamma_m3 = 1.337,
                moment_resistance = 1.337,
                unity_check_bending = 1.337,
                bolt_moment_force = 1.337,
                bearing_resistance = 1.337,
                id = 56,
                name = '',
                check_status = True,
                limit_check_status = True,
                load_case_id = 56,
                load_case = '',
                max_unity_check = 1.337,
                form = ''
            )
        else:
            return BoltCheckResDataTimberIdeaStatiCaConnectionChecks(
        )
        """

    def testBoltCheckResDataTimberIdeaStatiCaConnectionChecks(self):
        """Test BoltCheckResDataTimberIdeaStatiCaConnectionChecks"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
