# coding: utf-8

"""
    Connection Rest API 1.0

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from connection_restapi_client_poc.models.ci_geometry2_di_region2_dci_basic_types import CIGeometry2DIRegion2DCIBasicTypes

class TestCIGeometry2DIRegion2DCIBasicTypes(unittest.TestCase):
    """CIGeometry2DIRegion2DCIBasicTypes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CIGeometry2DIRegion2DCIBasicTypes:
        """Test CIGeometry2DIRegion2DCIBasicTypes
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CIGeometry2DIRegion2DCIBasicTypes`
        """
        model = CIGeometry2DIRegion2DCIBasicTypes()
        if include_optional:
            return CIGeometry2DIRegion2DCIBasicTypes(
                outline = connection_restapi_client_poc.models.ci_geometry2_d_i_poly_line2_d_ci_basic_types.CI_Geometry2D_IPolyLine2D-CI_BasicTypes(
                    start_point = connection_restapi_client_poc.models.ci_geometry2_d_ida_com_point2_d_ci_basic_types.CI_Geometry2D_IdaComPoint2D-CI_BasicTypes(
                        x = 1.337, 
                        y = 1.337, ), 
                    is_closed = True, 
                    segments = [
                        connection_restapi_client_poc.models.ci_geometry2_d_i_segment2_d_ci_basic_types.CI_Geometry2D_ISegment2D-CI_BasicTypes(
                            end_point = connection_restapi_client_poc.models.ci_geometry2_d_ida_com_point2_d_ci_basic_types.CI_Geometry2D_IdaComPoint2D-CI_BasicTypes(
                                x = 1.337, 
                                y = 1.337, ), )
                        ], 
                    length = 1.337, 
                    bounds = '', 
                    id = 56, ),
                openings = [
                    connection_restapi_client_poc.models.ci_geometry2_d_i_poly_line2_d_ci_basic_types.CI_Geometry2D_IPolyLine2D-CI_BasicTypes(
                        start_point = connection_restapi_client_poc.models.ci_geometry2_d_ida_com_point2_d_ci_basic_types.CI_Geometry2D_IdaComPoint2D-CI_BasicTypes(
                            x = 1.337, 
                            y = 1.337, ), 
                        is_closed = True, 
                        segments = [
                            connection_restapi_client_poc.models.ci_geometry2_d_i_segment2_d_ci_basic_types.CI_Geometry2D_ISegment2D-CI_BasicTypes(
                                end_point = connection_restapi_client_poc.models.ci_geometry2_d_ida_com_point2_d_ci_basic_types.CI_Geometry2D_IdaComPoint2D-CI_BasicTypes(
                                    x = 1.337, 
                                    y = 1.337, ), )
                            ], 
                        length = 1.337, 
                        bounds = '', 
                        id = 56, )
                    ],
                arc_discr_angle = 1.337
            )
        else:
            return CIGeometry2DIRegion2DCIBasicTypes(
        )
        """

    def testCIGeometry2DIRegion2DCIBasicTypes(self):
        """Test CIGeometry2DIRegion2DCIBasicTypes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
