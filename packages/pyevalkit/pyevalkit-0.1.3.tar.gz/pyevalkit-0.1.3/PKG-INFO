Metadata-Version: 2.1
Name: pyevalkit
Version: 0.1.3
Summary: 
Author: wengao
Author-email: zhangwengao@zhugeio.com
Requires-Python: >=3.12,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: allure-pytest (>=2.13.5,<3.0.0)
Requires-Dist: cacheout (>=0.16.0,<0.17.0)
Requires-Dist: cryptography (>=42.0.5,<43.0.0)
Requires-Dist: faker (>=24.14.0,<25.0.0)
Requires-Dist: jinja2 (>=3.1.3,<4.0.0)
Requires-Dist: jsonpath-ng (>=1.6.1,<2.0.0)
Requires-Dist: loguru (>=0.7.2,<0.8.0)
Requires-Dist: openpyxl (>=3.1.5,<4.0.0)
Requires-Dist: pandas (>=2.2.2,<3.0.0)
Requires-Dist: pymysql (>=1.1.0,<2.0.0)
Requires-Dist: pytest (>=8.1.1,<9.0.0)
Requires-Dist: pytest-asyncio (>=0.23.8,<0.24.0)
Requires-Dist: pytest-json-report (>=1.5.0,<2.0.0)
Requires-Dist: pyyaml (>=6.0.1,<7.0.0)
Requires-Dist: redis (>=5.0.4,<6.0.0)
Requires-Dist: requests (>=2.31.0,<3.0.0)
Requires-Dist: requests-toolbelt (>=1.0.0,<2.0.0)
Requires-Dist: websocket-client (>=1.8.0,<2.0.0)
Requires-Dist: websockets (>=12.0,<13.0)
Description-Content-Type: text/markdown

## Poetry打包并上传到Pypi
```shell
# 创建新项目
poetry new <project_name>

# 配置pypi的token
poetry config pypi-token.pypi <pypi_token>

# 构建项目
poetry build

# 构建项目并推送到Pypi
poetry publish --build

```

### Poetry常用命令
```shell
# 初始化一个项目，如果不加-n就会询问你项目名和版本之类的
poetry init -n 

#在当前目录建立虚拟环境
poetry init -C . 

# 向 pyproject.toml 添加新的依赖项。等同 pip install flask
poetry add <package>

# 项目打包，然后配合 poetry publish 发布到远程存储库
poetry build 

# 检查当前项目的依赖和环境是否存在问题,每次打包前都要使用一下该指令
poetry check

# 安装项目依赖
poetry install 

# 更新所有依赖到最新版本
poetry update

# 更新指定依赖到最新版本
poetry update <package>

# 锁定依赖版本
poetry lock

# 运行项目，如：poetry run python3 main.py
poetry run 

```
