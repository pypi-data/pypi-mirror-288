"use strict";(self.webpackChunk_atoti_jupyterlab_extension=self.webpackChunk_atoti_jupyterlab_extension||[]).push([[4781,7162],{87162:(e,s,n)=>{n.r(s),n.d(s,{anonymousUsername:()=>u,checkUser:()=>i,defaultServerKey:()=>r,fixIncompleteSemverVersion:()=>o,roleAdmin:()=>a,roleUser:()=>c,syncDataModel:()=>l,version:()=>y});const r="default",t=/^(?<major>\d+)\.(?<minor>\d+)-(?<prereleaseIdentifier>.+)/,o=e=>{const s=t.exec(e);return s?.groups?`${s.groups.major}.${s.groups.minor}.0-${s.groups.prereleaseIdentifier}`:e},a="ROLE_ADMIN",c="ROLE_USER",u="anonymousUser",i=({username:e,userRoles:s})=>{if(!(e!==u||s.includes(c)&&s.includes(a)))throw new Error(`Anonymous user should have roles ${c} and ${a} but had roles: ${s}.`)};var m=n(4181);const l=e=>{const s=`${e.url.replace(/^http/,"ws")}/atoti/discovery`;let n;const r=()=>{const{connectionStatus:r}=e;"connected"===r?(n=new WebSocket(s),n.addEventListener("message",(({data:s})=>{const n=JSON.parse(s),r=(0,m.v)(n);e.__UNSAFE_setDataModel__(r)}))):"disconnected"===r&&n&&(n.close(),n=void 0)};r();const t=e.subscribeToConnectionStatus(r);return()=>{t(),n&&n.close()}},y="0.9.0a0"},4181:(e,s,n)=>{n.d(s,{v:()=>t});var r=n(31529);const t=e=>{const s=e.catalogs.map((e=>{const s=e.cubes.map((e=>(e=>{const s=e.dimensions.map((e=>{const s=e.hierarchies.map((e=>{const s=(0,r.keyBy)(e.levels.map(((e,s)=>({...e,index:s}))),"name");return{...e,levels:s}})),n=(0,r.keyBy)(s,"name");return{...e,hierarchies:n}})),{measures:n,kpis:t,sets:o,contextValues:a,measureGroups:c}=e;return{...e,dimensions:(0,r.keyBy)(s,"name"),measures:(0,r.keyBy)(n,"name"),kpis:(0,r.keyBy)(t,"name"),sets:(0,r.keyBy)(o,"name"),contextValues:(0,r.keyBy)(a,"name"),measureGroups:(0,r.keyBy)(c,"name")}})(e)));return{...e,cubes:(0,r.keyBy)(s,"name")}})),{contextValues:n}=e;return{catalogs:(0,r.keyBy)(s,"name"),contextValues:(0,r.keyBy)(n,"name")}}}}]);