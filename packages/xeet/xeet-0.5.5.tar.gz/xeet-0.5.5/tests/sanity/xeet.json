{
	"tests": [
		{
			"name": "output_compare",
			"verify_cmd": "{{XEET_ROOT}}/../scripts/dflt_output_compare.sh",
			"abstract": true
		},
		{
			"name": "001_pass",
			"base": "output_compare",
			"short_desc": "echoes Hello World!",
			"test_cmd": "echo 'Hello World!'",
			"groups": ["group1", "group2", "passing"]
		},
		{
			"name": "002_fail",
			"short_desc": "runs false",
			"test_cmd": "false",
			"groups": ["group1", "group3", "failing"]
		},
		{
			"name": "003_skip",
			"short_desc": "expected to be skipped",
			"test_cmd": "false",
			"allowed_return_codes": [2],
			"groups": ["group1", "group2", "group4", "skipped"],
			"skip": true
		},
		{
			"name": "004_bad_desc",
			"short_desc": "bad test descriptor",
			"allowed_return_codes": [2],
			"blat": "blat",
			"groups": ["not_run"]
		},
		{
			"name": "005_expected_fail",
			"base": "output_compare",
			"short_desc": "runs false but expected to fail",
			"test_cmd": "false",
			"expected_failure": true
		},
		{
			"name": "006_unexpected_success",
			"short_desc": "runs true but expected to fail",
			"test_cmd": "true",
			"expected_failure": true
		},
		{
			"name": "007 with spaces",
			"short_desc": "test name with spaces",
			"test_cmd": "true",
			"groups": ["passing"]
		},
		{
			"name": "008a_bad_command_not_run",
			"short_desc": "bad command (should not run)",
			"test_cmd": "no such thing",
			"groups": ["group5", "not_run"]
		},
		{
			"name": "008b_inherits_bad_command_to_good",
			"base": "008a_bad_command_not_run",
			"short_desc": "inherits a bad command test, but replaces it with a good one",
			"test_cmd": "true",
			"inherit_groups": false,
			"groups": ["passing"]
		},
		{
			"name": "009_env_pass",
			"short_desc": "prints environment variable",
			"base": "output_compare",
			"env" : {
				"TEST_ENV_VAR": "test value"
			},
			"test_cmd": "printenv TEST_ENV_VAR",
			"inherit_groups": true,
			"groups": ["passing"]
		},
		{
			"name": "010_timeout",
			"short_desc": "timeout test",
			"test_cmd": "sleep 5",
			"timeout": 1,
			"groups": ["failing"]
		},
		{
			"name": "013_multi_rc_passing",
			"short_desc": "Multiple return codes, shoudld pass",
			"test_cmd": "rc=$(( ${RANDOM} % 5 + 1 )); echo 'return code: ${rc}'; exit ${rc}",
			"shell": true,
			"allowed_return_codes": [1, 2, 3, 4, 5],
			"groups": ["passing"]
		},
		{
			"name": "014a_show_auto_vars_internal",
			"short_desc": "Test auto variables",
			"test_cmd": "echo -e Test name: {{XEET_TEST_NAME}}\necho -e Test output dir: {{XEET_TEST_OUTPUT_DIR}}\necho -e Test stdout: {{XEET_TEST_STDOUT}}\necho -e Test stderr: {{XEET_TEST_STDERR}}\necho -e Xeet root: {{XEET_ROOT}}\necho -e Xeet output dir: {{XEET_OUTPUT_DIR}}",
			"shell": true,
			"groups": ["passing"]
		},
		{
			"name": "014b_show_auto_vars_env",
			"short_desc": "Test auto variables",
			"test_cmd": "echo -e Test name: $XEET_TEST_NAME\necho -e Test output dir: $XEET_TEST_OUTPUT_DIR\necho -e Test stdout: $XEET_TEST_STDOUT\necho -e Test stderr: $XEET_TEST_STDERR\necho -e Xeet root: $XEET_ROOT\necho -e Xeet output dir: $XEET_OUTPUT_DIR",
			"shell": true,
			"groups": ["passing"]
		},
		{
			"name": "015a_pre_test_ok",
			"short_desc": "Test with passing pre-run command",
			"pre_test_cmd": "true",
			"test_cmd": "echo {{XEET_TEST_NAME}}",
			"groups": ["passing"]
		},
		{
			"name": "015b_pre_test_fail",
			"short_desc": "Test with failing pre-run command",
			"base": "015a_pre_test_ok",
			"pre_test_cmd": "false",
			"groups": ["not_run"]
		},
		{
			"name": "015c_verification_fail",
			"short_desc": "Test failing over verification",
			"base": "015a_pre_test_ok",
			"verify_cmd": "false",
			"groups": ["failing"]
		},
		{
			"name": "015d_test_verification_ok",
			"short_desc": "Post command verification check",
			"variables": {
				"output_file": "{{XEET_TEST_OUTPUT_DIR}}/{{XEET_TEST_NAME}}.txt",
				"verification_file": "{{XEET_ROOT}}/aux/{{XEET_TEST_NAME}}.txt"

			},
			"test_cmd": "echo 'Silence is golden' > {{output_file}}",
			"shell": true,
			"verify_cmd": "diff -u {{output_file}} {{verification_file}}",
			"groups": ["passing"]
		},
		{
			"name": "015e_bad_pre_test_cmd",
			"short_desc": "Test with invalid pre-run command",
			"base": "015a_pre_test_ok",
			"pre_test_cmd": "does_not_exist",
			"groups": ["not_run"]
		},
		{
			"name": "020_post_test_ok",
			"short_desc": "Test with valid post-test command",
			"base": "015a_pre_test_ok",
			"post_test_cmd": "true",
			"groups": ["passing"]
		},
		{
			"name": "021_post_test_fail",
			"short_desc": "Test with invalid post-test command",
			"base": "015a_pre_test_ok",
			"post_test_cmd": "false",
			"groups": ["passing"]
		},
		{
			"name": "022_post_test_fail_output",
			"short_desc": "Test with invalid post-test command and output",
			"base": "015a_pre_test_ok",
			"post_test_cmd_shell": true,
			"post_test_cmd": "echo failing post test output; false",
			"groups": ["passing"]
		},
		{
			"short_desc": "Abstract test",
			"name": "900_pass",
			"abstract": true
		}
	]
}
