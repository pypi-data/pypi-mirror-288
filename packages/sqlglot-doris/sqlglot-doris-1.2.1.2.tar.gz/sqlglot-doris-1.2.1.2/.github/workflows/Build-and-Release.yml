name: Build and Release

on:
  push:
    tags:
      - v*
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Check out repo
      uses: actions/checkout@master

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: "3.10"

    - name: Install Dependencies
      working-directory: server
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi
    - name: Grant execute permission to the build.sh
      working-directory: server
      run: chmod +x build.sh
    - name: Run Build
      working-directory: server
      env:
        APP_VERSION: ${{ github.ref_name }}
      run: |
        bash build.sh $APP_VERSION

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: main-${{ github.run_id }}
        release_name: Release main-${{ github.run_id }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./server/doris-sql-convertor-${{ github.ref_name }}-bin-x86.tar.gz
        asset_name: doris-sql-convertor-${{ github.ref_name }}-bin-x86.tar.gz
        asset_content_type: application/gzip
