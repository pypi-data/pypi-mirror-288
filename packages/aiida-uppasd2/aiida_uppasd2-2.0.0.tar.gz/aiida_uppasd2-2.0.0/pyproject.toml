[project]
name = "aiida-uppasd2"
version = "2.0.0"
description = "AiiDA plugin for UppASD version 2"
authors = [{name = "Qichen Xu", email = "mxjk851@gmail.com"}]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Programming Language :: Python",
    "Intended Audience :: Science/Research",
    "Framework :: AiiDA"
]
keywords = ["aiida", "plugin"]
requires-python = ">=3.7"
dependencies = [
    "aiida-core>=2.0,<3",
    "voluptuous"
]

[project.urls]
Source = "https://github.com/MXJK851/aiida-uppasd2"

[project.optional-dependencies]
testing = [
    "pgtest~=1.3.1",
    "wheel~=0.31",
    "coverage[toml]",
    "pytest~=6.0",
    "pytest-cov"
]
pre-commit = [
    "pre-commit~=2.2",
    "pylint~=2.15.10"
]

[project.entry-points."aiida.data"]
#I are not include new data now, but will be added in the future if needed.

[project.entry-points."aiida.calculations"]
#In UppASD-AiiDA version 1 I named it with core_calcs, but when I understand we don't need other calculations (maybe in furture we need), I decide to simplify it.
"asd_calculations" = "aiida_uppasd2.UppASD_Calculations:UppASD_Calculations"

[project.entry-points."aiida.parsers"]
"asd_parsers" = "aiida_uppasd2.UppASD_Parsers:UppASD_Parsers"

[project.entry-points."aiida.cmdline.data"]
#Here we need to gives several command line tools to help our user connect UppASD with SpinView and other codes for postprocessing
"asd" = "aiida_uppasd2.UppASD_Clis:asd"

[project.entry-points.'aiida.workflows']
'UppASD_baseworkflow' = 'aiida_uppasd2.UppASD_BaseWorkflow:UppASD_Baseworkflow'
'UppASD_GenericLoopWorkflow' = 'aiida_uppasd2.UppASD_GenericLoopWorkflow:UppASD_Genericloopworkflow'