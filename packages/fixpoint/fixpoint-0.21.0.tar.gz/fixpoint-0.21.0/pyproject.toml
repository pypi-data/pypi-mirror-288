[tool.poetry]
name = "fixpoint"
version = "0.21.0"
description = "Open source infra for reliable multi-step AI workflows."
homepage = "https://fixpoint.co/"
authors = ["Fixpoint <team@fixpoint.co>"]

classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: Apache Software License"
]

license = "License :: OSI Approved :: Apache Software License"
readme = "README.md"
repository = "https://github.com/gofixpoint/fixpoint"

packages = [
    { include = "fixpoint", from = "src" },
    { include = "fixpoint_extras", from = "src" },
]

include = ["src/fixpoint/py.typed"]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = ">=2"
typing-extensions = ">=4.7.1"
openai = "^1.30.1"
tiktoken = "^0.7.0"
# instructor v1.3.0 breaks the package, so restrict to versions 1.2.x
instructor = "~1.2.6"
types-cachetools = "^5.3.0.7"
cachetools = "^5.3.3"
pandas = { version = "^2.2.2", optional = true }
jinja2 = "^3.1.4"
diskcache = "^5.6.3"
supabase = "^2.5.0"
psycopg = {extras = ["binary", "pool"], version = "^3.1.19"}
fastapi = {version = "^0.111.0", optional = true}

[tool.poetry.group.dev.dependencies]
freezegun = "^1.5.1"
pylint = "^3.2.0"
pytest = ">=8.0.2"
black = ">=24"
flake8 = ">=4.0.0"
poetry = "1.8.2"
ipdb = "^0.13.13"
mypy = "^1.10.0"
pytest-asyncio = "^0.23.7"

[tool.poetry.extras]
analyze = ["pandas"]
examples = ["pandas", "fastapi"]
all = ["pandas", "fastapi"]

[[tool.poetry.source]]
name = "testpypi"
url = "https://test.pypi.org/legacy/"
priority = "supplemental"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pylint.'MESSAGES CONTROL']
extension-pkg-whitelist = "pydantic"
