ReactDetails:
  type: object
  description: |
    Returns details and audit data for a given reaction for the specified audit data flags.
    Local and regional models are used to determine details:
        Local model -  only the most similar cases used to directly determine the prediction value, used to compute affects of cases directly
                        responsible for the predicted output.
        Regional model - the most similar cases to the prediction, represented by the maximum of either 30 or the local model size. Used in
                        situations where relying on a small local model may produce noisy results.
  additionalProperties: false
  properties:
    influential_cases:
      type: boolean
      description: >
        When true, outputs the most influential cases and their influence weights based on the surprisal of each case
        relative to the context being predicted among the cases. Uses only the context features of the reacted case.
    derivation_parameters:
      type: boolean
      description: >
        If True, outputs a dictionary of the parameters used in the react call. These include k, p, distance_transform,
        feature_weights, feature_deviations, nominal_class_counts, and use_irw.
    influential_cases_familiarity_convictions:
      type: boolean
      description: When true, outputs familiarity conviction of addition for each of the influential cases.
    influential_cases_raw_weights:
      type: boolean
      description: >
        When true, outputs the surprisal for each of the influential cases.
    most_similar_cases:
      type: boolean
      description: >
        When true, outputs an automatically determined (when 'num_most_similar_cases' is not specified) relevant number
        of similar cases, which will first include the influential cases. Uses only the context features of the reacted case.
    num_most_similar_cases:
      type: number
      minimum: 1
      maximum: 1000
      description: >
        When defined, outputs this manually specified number of most similar cases, which will first include the
        influential cases. Takes precedence over 'most_similar_cases' parameter.
    num_most_similar_case_indices:
      type: number
      minimum: 1
      maximum: 1000
      description: >
        When defined, outputs the specified number of most similar case indices when 'distance_ratio' is also set to true.
    num_robust_influence_samples_per_case:
      type: number
      minimum: 1
      maximum: 1000000
      description: >
        Specifies the number of robust samples to use for each case. Applicable only for computing robust feature contributions or
        robust case feature contributions. Defaults to 2000 when unspecified. Higher values will take longer but provide more stable results.
    boundary_cases:
      type: boolean
      description: >
        When true, outputs an automatically determined (when 'num_boundary_cases' is not specified) relevant
        number of boundary cases. Uses both context and action features of the reacted case to determine the
        counterfactual boundary based on action features, which maximize the dissimilarity of action features while
        maximizing the similarity of context features. If action features aren't specified, uses familiarity conviction
        to determine the boundary instead.
    num_boundary_cases:
      type: number
      minimum: 1
      maximum: 1000
      description: >
        When defined, outputs this manually specified number of boundary cases. Takes precedence over 'boundary_cases'
        parameter.
    boundary_cases_familiarity_convictions:
      type: boolean
      description: When true, outputs familiarity conviction of addition for each of the boundary cases.
    features:
      type: array
      description: >
        A list of feature names that specifies for what features will per-feature details be computed (residuals, contributions, mda, etc.).
        This should generally preserve compute, but will not when computing details robustly. Details will be computed for all context and
        action features if this is not specified.
      items:
        type: string
      example:
        - "sepal_length"
        - "sepal_width"
    feature_residuals_full:
      type: boolean
      description: >
        If True, outputs feature residuals for all (context and action)
        features locally around the prediction. Uses only the context
        features of the reacted case to determine that area. Uses
        full calculations, which uses leave-one-out for cases for computations.
    feature_residuals_robust:
      type: boolean
      description: >
        If True, outputs feature residuals for all (context and action)
        features locally around the prediction. Uses only the context
        features of the reacted case to determine that area. Uses robust
        calculations, which uses uniform sampling from the power set of
        features as the contexts for predictions. 'selected_prediction_stats'
        controls the returned prediction stats.
    prediction_stats:
      type: boolean
      description: >
        When true outputs feature prediction stats for all (context
        and action) features locally around the prediction. The stats
        returned  are ("r2", "rmse", "spearman_coeff", "precision",
        "recall", "accuracy", "mcc", "confusion_matrix", "missing_value_accuracy").
        Uses only the context features of the reacted case to determine that area.
        Uses full calculations, which uses leave-one-out context features for
        computations. 'selected_prediction_stats' controls the returned prediction stats.
    feature_mda_full:
      type: boolean
      description: >
        When True will compute Mean Decrease in Accuracy (MDA)
        for each context feature at predicting the action feature. Drop
        each feature and use the full set of remaining context features
        for each prediction. False removes cached values.
    feature_mda_robust:
      type: boolean
      description: >
        Compute Mean Decrease in Accuracy MDA by dropping each feature and using the
        robust (power set/permutations) set of remaining context features
        for each prediction. False removes cached values.
    feature_mda_ex_post_full:
      type: boolean
      description: >
        If True, outputs each context feature's mean decrease in
        accuracy of predicting the action feature as an explanation detail
        given that the specified prediction was already made as
        specified by the action value. Uses both context and action
        features of the reacted case to determine that area. Uses
        full calculations, which uses leave-one-out for cases for
        computations.
    feature_mda_ex_post_robust:
      type: boolean
      description: >
        If True, outputs each context feature's mean decrease in
        accuracy of predicting the action feature as an explanation detail
        given that the specified prediction was already made as
        specified by the action value. Uses both context and action
        features of the reacted case to determine that area. Uses
        robust calculations, which uses uniform sampling
        from the power set of features as the contexts for predictions.
    feature_contributions_full:
      type: boolean
      description: >
        If True outputs each context feature's absolute and directional
        differences between the predicted action feature value and the
        predicted action feature value if each context were not in the
        model for all context features in the local model area. Uses
        full calculations, which uses leave-one-out for cases for
        computations. Directional feature contributions are returned
        under the key 'directional_feature_contributions_full'.
    feature_contributions_robust:
      type: boolean
      description: >
        If True outputs each context feature's absolute and directional
        differences between the predicted action feature value and the
        predicted action feature value if each context were not in the
        model for all context features in the local model area Uses
        robust calculations, which uses uniform sampling from the power
        set of features as the contexts for predictions. Directional feature
        contributions are returned under the key
        'directional_feature_contributions_robust'.
    case_feature_contributions_full:
      type: boolean
      description: >
        If True outputs each context feature's absolute and directional
        differences between the predicted action feature value and the
        predicted action feature value if each context feature were not
        in the model for all context features in this case, using only
        the values from this specific case. Uses
        full calculations, which uses leave-one-out for cases for
        computations. Directional case feature
        contributions are returned under the
        'case_directional_feature_contributions_full' key.
    case_feature_contributions_robust:
      type: boolean
      description: >
        If True outputs each context feature's absolute and directional
        differences between the predicted action feature value and the
        predicted action feature value if each context feature were not
        in the model for all context features in this case, using only
        the values from this specific case. Uses
        robust calculations, which uses uniform sampling from the power
        set of features as the contexts for predictions.
        Directional case feature contributions are returned under the
        'case_directional_feature_contributions_robust' key.
    case_feature_residuals_full:
      type: boolean
      description: >
        If True, outputs feature residuals for all (context and action)
        features for just the specified case. Uses leave-one-out for
        each feature, while using the others to predict the left out
        feature with their corresponding values from this case. Uses
        full calculations, which uses leave-one-out for cases for
        computations.
    case_feature_residuals_robust:
      type: boolean
      description: >
        If True, outputs feature residuals for all (context and action)
        features for just the specified case. Uses leave-one-out for
        each feature, while using the others to predict the left out
        feature with their corresponding values from this case. Uses
        robust calculations, which uses uniform sampling from the power
        set of features as the contexts for predictions.
    case_mda_full:
      type: boolean
      description: >
        If True, outputs each influential case's mean decrease in
        accuracy of predicting the action feature in the local model
        area, as if each individual case were included versus not
        included. Uses only the context features of the reacted case to
        determine that area. Uses full calculations, which uses
        leave-one-out for cases for computations.
    case_mda_robust:
      type: boolean
      description: >
        If True, outputs each influential case's mean decrease in
        accuracy of predicting the action feature in the local model
        area, as if each individual case were included versus not
        included. Uses only the context features of the reacted case to
        determine that area. Uses robust calculations, which uses
        uniform sampling from the power set of all combinations of cases.
    case_contributions_full:
      type: boolean
      description: >
        If true outputs each influential case's differences between the
        predicted action feature value and the predicted action feature
        value if each individual case were not included. Uses only the
        context features of the reacted case to determine that area.
        Uses full calculations, which uses leave-one-out for cases for
        computations.
    case_contributions_robust:
      type: boolean
      description: >
        If true outputs each influential case's differences between the
        predicted action feature value and the predicted action feature
        value if each individual case were not included. Uses only the
        context features of the reacted case to determine that area.
        Uses robust calculations, which uses uniform sampling from
        the power set of all combinations of cases.
    global_case_feature_residual_convictions_full:
      type: boolean
      description: >
        If True, outputs this case's feature residual convictions for
        the global model. Computed as: global model feature residual
        divided by case feature residual. Uses full calculations,
        which uses leave-one-out for cases for computations.
    global_case_feature_residual_convictions_robust:
      type: boolean
      description: >
        If True, outputs this case's feature residual convictions for
        the global model. Computed as: global model feature residual
        divided by case feature residual. Uses robust calculations, which
        uses uniform sampling from the power set of features as the
        contexts for predictions.
    local_case_feature_residual_convictions_full:
      type: boolean
      description: >
        If True, outputs this case's feature residual convictions for
        the region around the prediction. Uses only the context
        features of the reacted case to determine that region.
        Computed as: region feature residual divided by case feature
        residual. Uses full calculations, which uses leave-one-out
        for cases for computations.
    local_case_feature_residual_convictions_robust:
      type: boolean
      description: >
        If True, outputs this case's feature residual convictions for
        the region around the prediction. Uses only the context
        features of the reacted case to determine that region.
        Computed as: region feature residual divided by case feature
        residual. Uses robust calculations, which uses uniform sampling
        from the power set of features as the contexts for predictions.
    outlying_feature_values:
      type: boolean
      description: >
        When true, outputs the reacted case's context feature values that are outside the min or max of the
        corresponding feature values of all the cases in the local model area. Uses only the context features of the
        reacted case to determine that area.
    categorical_action_probabilities:
      type: boolean
      description: >
        When true, outputs probabilities for each class for the action. Applicable only to categorical action features.
    hypothetical_values:
      type: object
      description: >
        A dictionary of feature name to feature value. If specified, shows how a prediction could change in a what-if
        scenario where the influential cases' context feature values are replaced with the specified values. Iterates
        over all influential cases, predicting the action features each one using the updated hypothetical values.
        Outputs the predicted arithmetic over the influential cases for each action feature.
      additionalProperties: true
    distance_ratio:
      type: boolean
      description: >
        When true, outputs the ratio of distance (relative surprisal) between this reacted case and its nearest case to
        the minimum distance (relative surprisal) in between the closest two cases in the local area. All distances are
        computed using only the specified context features.
    distance_contribution:
      type: boolean
      description: >
        When true, outputs the distance contribution (expected total surprisal contribution) for the reacted case.
        Uses both context and action feature values.
    similarity_conviction:
      type: boolean
      description: >
        When true, outputs similarity conviction for the reacted case. Uses both context and action feature values as
        the case values for all computations. This is defined as expected (local) distance contribution divided by
        reacted case distance contribution.
    observational_errors:
      type: boolean
      description: >
        When true, outputs observational errors for all features as defined in feature attributes.
    generate_attempts:
      type: boolean
      description: >
        When true, outputs the number of attempts taken to generate each case. Only applicable when 'generate_new_cases'
        is "always" or "attempt". When used in react_series, "series_generate_attempts" is also returned.
DerivationParameters:
  type: object
  properties:
    k:
      type: number
      description: The number of cases used for the local model.
      example: 7
    p:
      type: number
      description: The parameter for the Lebesgue space.
      example: 0.1
    distance_transform:
      type: number
      description: The value used as an exponent to convert distances to raw influence weights.
      example: -1.0
    feature_weights:
      type: object
      description: The weights for each feature used in the distance metric.
      additionalProperties:
        type: number
      example:
        sepal_length: 0.19353
        sepal_width: 1.32454
    feature_deviations:
      type: object
      description: The deviations for each feature used in the distance metric.
      additionalProperties:
        type: number
      example:
        sepal_length: 0.19353
        sepal_width: 1.41454
    nominal_class_counts:
      type: object
      description: The number of unique values for each nominal feature.
      additionalProperties:
        type: number
      example:
        target: 3
    use_irw:
      type: boolean
      description: A flag indicating if feature weights were derived using inverse residual weighting.
      example: true

ReactAggregateDetails:
  type: object
  description: |
    Returns details and prediction stats data for a given reaction for the specified flags.
  additionalProperties: false
  properties:
    prediction_stats:
      type: boolean
      description: >
        If true outputs full feature prediction
        stats for all (context and action) features. The prediction stats returned are set
        by the "selected_prediction_stats" parameter in the 'details' parameter. Uses full
        calculations, which uses leave-one-out for features for computations. False removes
        cached values.
    feature_residuals_full:
      type: boolean
      description: >
        For each context_feature, use the full set of all other context_features to predict
        the feature. False removes cached values. When "prediction_stats"
        in the "details" parameter is true, the Trainee will also calculate and cache the
        full feature residuals.
    feature_residuals_robust:
      type: boolean
      description: >
        For each context_feature, use the robust (power set/permutations) set of all other
        context_features to predict the feature. False removes cached values.
    feature_contributions_full:
      type: boolean
      description: >
        For each context_feature, use the full set of all other
        context_features to compute the mean absolute delta between
        prediction of the action feature with and without the context features
        in the model. False removes cached values.
    feature_contributions_robust:
      type: boolean
      description: >
        For each context_feature, use the robust (power set/permutation)
        set of all other context features to compute the mean absolute
        delta between prediction of the action feature with and without the
        context features in the model. False removes cached values.
    feature_mda_full:
      type: boolean
      description: >
        When True will compute Mean Decrease in Accuracy (MDA)
        for each context feature at predicting the action feature. Drop
        each feature and use the full set of remaining context features
        for each prediction. False removes cached values.
    feature_mda_robust:
      type: boolean
      description: >
        Compute Mean Decrease in Accuracy (MDA) by dropping each feature and using the
        robust (power set/permutations) set of remaining context features
        for each prediction. False removes cached values.
    feature_mda_permutation_full:
      type: boolean
      description: >
        Compute Mean Decrease in Accuracy (MDA) by scrambling each feature and using the
        full set of remaining context features for each prediction.
        False removes cached values.
    feature_mda_permutation_robust:
      type: boolean
      description: >
        Compute MDA by scrambling each feature and using the
        robust (power set/permutations) set of remaining context features
        for each prediction. False removes cached values.
    action_condition:
      description: |
        A condition map to select the action set, which is the dataset for which
        the prediction stats are for. If both action_condition and context_condition
        are provided, then all of the action cases selected by the action_condition
        will be excluded from the context set, which is the set being queried to
        make predictions on the action set, effectively holding them out.
        If only action_condition is specified, then only the single predicted case
        will be left out.

        The dictionary keys are the feature name and values are one of:
        - None
        - A value, must match exactly.
        - An array of two numeric values, specifying an inclusive range. Only applicable to continuous and numeric ordinal features.
        - An array of string values, must match any of these values exactly. Only applicable to nominal and string ordinal features.
      type: object
      additionalProperties: true
      example:
        age:
          - 5
          - 20
    action_condition_precision:
        description: Exact matching or fuzzy matching. Only used if action_condition is not not null.
        enum:
        - exact
        - similar
        type: string
    action_num_cases:
      description: |
        The maximum amount of cases to use to calculate prediction stats.
        If not specified, the limit will be k cases if precision is
        "similar", or 1000 cases if precision is "exact". Works with or
        without action_condition.
        If action_condition is set:
        - If None, will be set to k if precision is "similar" or no limit if precision is "exact".
        If action_condition is not set:
        - If None, will be set to the Howso default limit of 2000.
      type: number
      example: 1
    context_condition:
      description: |
        A condition map to select the context set, which is the set being queried to make
        predictions on the action set. If both action_condition and context_condition
        are provided, then all of the cases from the action set, which is the dataset for which the
        prediction stats are for, will be excluded from the context set, effectively holding them out.
        If only action_condition is specified, then only the single predicted case will be left out.

        The dictionary keys are the feature name and values are one of:
        - None
        - A value, must match exactly.
        - An array of two numeric values, specifying an inclusive range. Only applicable to continuous and numeric ordinal features.
        - An array of string values, must match any of these values exactly. Only applicable to nominal and string ordinal features.
      type: object
      additionalProperties: true
      example:
        age:
          - 5
          - 20
    context_condition_precision:
      description: Exact matching or fuzzy matching. Only used if context_condition is not not null.
      enum:
      - exact
      - similar
      type: string
    context_precision_num_cases:
      description: |
        Limit on the number of context cases when context_condition_precision is set to "similar".
        If None, will be set to k.
      type: number
      example: 1
    prediction_stats_features:
      description: |
        List of features to use when calculating conditional prediction stats. Should contain all action and
        context features desired. If ``action_feature`` is also provided, that feature will automatically be
        appended to this list if it is not already in the list.
      type: array
      items:
        type: string
      example:
        - age
    selected_prediction_stats:
      type: array
      items:
        type: string
        enum:
          - all
          - accuracy
          - confusion_matrix
          - mae
          - precision
          - r2
          - recall
          - rmse
          - spearman_coeff
          - mcc
          - missing_value_accuracy
      example:
        - mae
        - recall
        - precision
      description: >
        Types of stats to output. When unspecified, returns all except the confusion_matrix.
        If all, then returns all including the confusion_matrix.