[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[project]
name = "pycord-reactive-views"
authors = [
    { name = "Paillat-dev", email = "me@paillat.dev" },
]
description = "A py-cord extention for easy creation of reactive views"
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.11"
dependencies = [
    "py-cord>=2.6.0",
    "typing-extensions<5,>=4.4.0",
]
version = "1.0.1"

[project.license]
text = "MIT"

[project.urls]
Source = "https://github.com/Paillat-dev/pycord-reactive-views"

[project.module]
name = "pycord_reactive_views"

[tool.ruff]
line-length = 120
target-version = "py311"
fix = true

[tool.ruff.per-file-ignores]
"__init__.py" = [
    "F401",
]

[tool.ruff.lint]
select = [
    "ALL",
]
ignore = [
    "C90",
    "CPY",
    "EM",
    "SLF",
    "ARG",
    "TD",
    "FIX",
    "PD",
    "D100",
    "D104",
    "D105",
    "D106",
    "D107",
    "D203",
    "D213",
    "D301",
    "D401",
    "D404",
    "D405",
    "D406",
    "D407",
    "D408",
    "D409",
    "D410",
    "D411",
    "D412",
    "D413",
    "D414",
    "D416",
    "D417",
    "ANN101",
    "ANN102",
    "ANN204",
    "ANN401",
    "SIM102",
    "SIM108",
    "G001",
    "G004",
    "G003",
    "B904",
    "UP038",
    "PLR2004",
    "PGH003",
    "E731",
    "S311",
    "TRY003",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    "ISC001",
    "ISC002",
    "DOC501",
    "DOC201",
    "PLR6301",
]

[tool.ruff.lint.isort]
order-by-type = false
case-sensitive = true
combine-as-imports = true
force-single-line = false
force-wrap-aliases = false
lines-after-imports = -1
lines-between-types = 0
split-on-trailing-comma = false

[tool.ruff.lint.pylint]
max-args = 15
max-branches = 15
max-locals = 15
max-nested-blocks = 5
max-returns = 8
max-statements = 75

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = [
    "ANN",
    "D",
    "S101",
]
".github/scripts/**.py" = [
    "INP001",
]
"alembic-migrations/env.py" = [
    "INP001",
]
"alembic-migrations/versions/*" = [
    "INP001",
    "D103",
    "D400",
    "D415",
]

[tool.ruff.format]
line-ending = "lf"

[tool.basedpyright]
include = [
    "src",
]
exclude = [
    "**/__pycache__",
]
venv = "env311"
pythonPlatform = "All"
pythonVersion = "3.11"
typeCheckingMode = "all"
reportAny = false
reportUnusedCallResult = false
reportUnknownArgumentType = false
reportUnknownVariableType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownLambdaType = false

[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
dev = [
    "basedpyright>=1.15.0",
    "ruff>=0.5.5",
    "python-dotenv>=1.0.1",
]
