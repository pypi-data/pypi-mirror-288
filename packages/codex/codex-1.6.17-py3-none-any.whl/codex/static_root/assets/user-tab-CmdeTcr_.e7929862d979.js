import{l as g,W as f,D as u,X as V,_ as y,Z as n,$ as p,aE as b,T as a,bo as C,aI as v,bE as E,q as I,aO as i,a0 as l,Y as j,ak as m}from"./admin-drawer-panel-Dmnn03CQ.js";import{A as x,a as N,b as B,c as L,R as O}from"./relation-chips-nc41xEEd.js";import{V as c}from"./VTextField-DAe7a2au.js";import{V as U}from"./VCheckbox-D8eqoc1z.js";import{D as z}from"./datetime-column-BdnHcY-4.js";import{C as Y}from"./change-password-dialog-HW0jK0gr.js";import{V as k}from"./VCheckboxBtn-BaQC30AI.js";import"./main-C0t41OAE.js";import"./VDialog-BWXBR7iM.js";import"./VSelect-BpWdXMPq.js";import"./VSelectionControl-FmTy_2ch.js";import"./VSlideGroup-B9zEPv1H.js";import"./VTable-D85UV0cA.js";import"./filter-BL9RMUvn.js";import"./confirm-dialog-BJlNq6ku.js";const D=["username","isStaff","isActive","groups"];Object.freeze(D);const A={username:"",password:"",passwordConfirm:"",isStaff:!1,isActive:!0,groups:[]};Object.freeze(A);const J={name:"AdminUserCreateUpdateInputs",components:{AdminRelationPicker:x},props:{oldRow:{type:[Object,Boolean],default:!1}},emits:["change"],data(){return{rules:{username:[e=>!!e||"Username is required",e=>!!e&&!this.usernames.has(e.trim())||"Username already used"],password:[e=>!!e||"Password is required"],passwordConfirm:[e=>e===this.row.password||"Passwords must match"]},row:g(this.oldRow||A)}},computed:{...f(u,{groups:e=>e.groups,users:e=>e.users}),usernames(){return this.nameSet(this.users,"username",this.oldRow,!0)}},watch:{row:{handler(e){this.$emit("change",e)},deep:!0},oldRow:{handler(e){this.row=g(e)},deep:!0}},methods:{...V(u,["nameSet"])},UPDATE_KEYS:D,EMPTY_ROW:A},K={key:0};function q(e,o,h,R,s,_){const d=n("AdminRelationPicker");return p(),b("div",null,[a(c,{modelValue:s.row.username,"onUpdate:modelValue":o[0]||(o[0]=r=>s.row.username=r),autocomplete:"username",label:"Username",rules:s.rules.username,clearable:"",autofocus:"",onKeydown:o[1]||(o[1]=C(r=>e.$refs.password.focus(),["enter"]))},null,8,["modelValue","rules"]),h.oldRow?v("",!0):(p(),b("div",K,[a(c,{ref:"password",modelValue:s.row.password,"onUpdate:modelValue":o[2]||(o[2]=r=>s.row.password=r),autocomplete:"new-password",label:"Password",rules:s.rules.password,clearable:"",type:"password",onKeydown:o[3]||(o[3]=C(r=>e.$refs.passwordConfirm.focus(),["enter"]))},null,8,["modelValue","rules"]),a(c,{ref:"passwordConfirm",modelValue:s.row.passwordConfirm,"onUpdate:modelValue":o[4]||(o[4]=r=>s.row.passwordConfirm=r),autocomplete:"new-password",label:"Confirm Password",rules:s.rules.passwordConfirm,clearable:"",type:"password"},null,8,["modelValue","rules"])])),a(U,{modelValue:s.row.isStaff,"onUpdate:modelValue":o[5]||(o[5]=r=>s.row.isStaff=r),label:"Is Staff"},null,8,["modelValue"]),a(U,{modelValue:s.row.isActive,"onUpdate:modelValue":o[6]||(o[6]=r=>s.row.isActive=r),label:"Is Active"},null,8,["modelValue"]),a(d,{modelValue:s.row.groups,"onUpdate:modelValue":o[7]||(o[7]=r=>s.row.groups=r),label:"Groups",objs:e.groups,"title-key":"name","group-type":""},null,8,["modelValue","objs"])])}const G=y(J,[["render",q]]),M={name:"AdminUsersTab",components:{AdminTable:N,AdminDeleteRowDialog:B,ChangePasswordDialog:Y,AdminCreateUpdateDialog:L,DateTimeColumn:z,RelationChips:O},data(){return{AdminUserCreateUpdateInputs:E(G),headers:[{title:"Username",key:"username",align:"start"},{title:"Staff",key:"isStaff"},{title:"Active",key:"isActive"},{title:"Groups",key:"groups"},{title:"Last Active",key:"lastActive"},{title:"Last Login",key:"lastLogin"},{title:"Joined",key:"dateJoined"},{title:"Actions",key:"actions",sortable:!1}]}},computed:{...f(u,{users:e=>e.users,groups:e=>e.groups}),...f(I,{me:e=>e.user})},mounted(){this.loadTables(["Group","User"])},methods:{...V(u,["loadTables"])}},W={class:"tabHeader"},X=i("td",{class:"adminNoData",colspan:"100%"},[m(" No Users. "),i("div",null,[m(" This is an error. There should always be at least one Staff user."),i("br"),m(" You should not be able to see this page"),i("br"),m(" You should restart Codex with the CODEX_RESET_ADMIN=1 variable set."),i("br"),m(" See the "),i("a",{href:"https://github.com/ajslater/codex#reset-the-admin-password",target:"_blank"}," README ")])],-1);function F(e,o,h,R,s,_){const d=n("AdminCreateUpdateDialog"),r=n("RelationChips"),w=n("DateTimeColumn"),S=n("ChangePasswordDialog"),T=n("AdminDeleteRowDialog"),P=n("AdminTable");return p(),b("div",null,[i("header",W,[a(d,{table:"User",inputs:s.AdminUserCreateUpdateInputs,"max-width":"20em"},null,8,["inputs"])]),a(P,{"item-title":"username",headers:s.headers,items:e.users},{"no-data":l(()=>[X]),"item.isStaff":l(({item:t})=>[a(k,{"model-value":t.isStaff,disabled:""},null,8,["model-value"])]),"item.isActive":l(({item:t})=>[a(k,{"model-value":t.isActive,disabled:""},null,8,["model-value"])]),"item.groups":l(({item:t})=>[a(r,{pks:t.groups,objs:e.groups,"title-key":"name","group-type":""},null,8,["pks","objs"])]),"item.lastActive":l(({item:t})=>[a(w,{dttm:t.lastActive},null,8,["dttm"])]),"item.lastLogin":l(({item:t})=>[a(w,{dttm:t.lastLogin},null,8,["dttm"])]),"item.dateJoined":l(({item:t})=>[a(w,{dttm:t.dateJoined},null,8,["dttm"])]),"item.actions":l(({item:t})=>[a(d,{table:"User",inputs:s.AdminUserCreateUpdateInputs,"old-row":t,"max-width":"20em",size:"small",density:"compact"},null,8,["inputs","old-row"]),a(S,{user:t,"is-admin-mode":!0,size:"small",density:"compact"},null,8,["user"]),e.me.id!==t.pk?(p(),j(T,{key:0,table:"User",pk:t.pk,name:t.username,size:"small",density:"compact"},null,8,["pk","name"])):v("",!0)]),_:2},1032,["headers","items"])])}const ue=y(M,[["render",F]]);export{ue as default};
