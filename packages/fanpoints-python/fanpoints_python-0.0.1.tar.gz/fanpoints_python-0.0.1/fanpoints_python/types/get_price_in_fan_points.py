# Generated by ariadne-codegen
# Source: fanpoints_python/queries

from typing import Optional

from pydantic import Field

from .base_model import BaseModel


class GetPriceInFanPoints(BaseModel):
    get_price_in_fan_points: "GetPriceInFanPointsGetPriceInFanPoints" = Field(
        alias="getPriceInFanPoints"
    )


class GetPriceInFanPointsGetPriceInFanPoints(BaseModel):
    errors: Optional["GetPriceInFanPointsGetPriceInFanPointsErrors"]
    result: Optional[int]


class GetPriceInFanPointsGetPriceInFanPointsErrors(BaseModel):
    invalid_reward_amount_error: Optional[
        "GetPriceInFanPointsGetPriceInFanPointsErrorsInvalidRewardAmountError"
    ] = Field(alias="InvalidRewardAmountError")


class GetPriceInFanPointsGetPriceInFanPointsErrorsInvalidRewardAmountError(BaseModel):
    empty: Optional[str] = Field(alias="_empty")


GetPriceInFanPoints.model_rebuild()
GetPriceInFanPointsGetPriceInFanPoints.model_rebuild()
GetPriceInFanPointsGetPriceInFanPointsErrors.model_rebuild()
