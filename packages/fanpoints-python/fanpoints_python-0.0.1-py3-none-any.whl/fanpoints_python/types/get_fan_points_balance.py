# Generated by ariadne-codegen
# Source: fanpoints_python/queries

from typing import Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import Currency


class GetFanPointsBalance(BaseModel):
    get_fan_points_balance: "GetFanPointsBalanceGetFanPointsBalance" = Field(
        alias="getFanPointsBalance"
    )


class GetFanPointsBalanceGetFanPointsBalance(BaseModel):
    result: Optional["GetFanPointsBalanceGetFanPointsBalanceResult"]
    errors: Optional["GetFanPointsBalanceGetFanPointsBalanceErrors"]


class GetFanPointsBalanceGetFanPointsBalanceResult(BaseModel):
    fan_points: int = Field(alias="fanPoints")
    monetary_value: float = Field(alias="monetaryValue")
    currency: Currency


class GetFanPointsBalanceGetFanPointsBalanceErrors(BaseModel):
    unknown_user_error: Optional[
        "GetFanPointsBalanceGetFanPointsBalanceErrorsUnknownUserError"
    ] = Field(alias="unknownUserError")


class GetFanPointsBalanceGetFanPointsBalanceErrorsUnknownUserError(BaseModel):
    empty: Optional[str] = Field(alias="_empty")


GetFanPointsBalance.model_rebuild()
GetFanPointsBalanceGetFanPointsBalance.model_rebuild()
GetFanPointsBalanceGetFanPointsBalanceErrors.model_rebuild()
