# Generated by ariadne-codegen
# Source: fanpoints_python/queries

from typing import Optional

from pydantic import Field

from .base_model import BaseModel


class EstimateGivenOutFanPointsOnPurchase(BaseModel):
    estimate_given_out_fan_points_on_purchase: "EstimateGivenOutFanPointsOnPurchaseEstimateGivenOutFanPointsOnPurchase" = Field(
        alias="estimateGivenOutFanPointsOnPurchase"
    )


class EstimateGivenOutFanPointsOnPurchaseEstimateGivenOutFanPointsOnPurchase(BaseModel):
    errors: Optional[
        "EstimateGivenOutFanPointsOnPurchaseEstimateGivenOutFanPointsOnPurchaseErrors"
    ]
    result: Optional[int]


class EstimateGivenOutFanPointsOnPurchaseEstimateGivenOutFanPointsOnPurchaseErrors(
    BaseModel
):
    invalid_rate_label_error: Optional[
        "EstimateGivenOutFanPointsOnPurchaseEstimateGivenOutFanPointsOnPurchaseErrorsInvalidRateLabelError"
    ] = Field(alias="invalidRateLabelError")


class EstimateGivenOutFanPointsOnPurchaseEstimateGivenOutFanPointsOnPurchaseErrorsInvalidRateLabelError(
    BaseModel
):
    empty: Optional[str] = Field(alias="_empty")


EstimateGivenOutFanPointsOnPurchase.model_rebuild()
EstimateGivenOutFanPointsOnPurchaseEstimateGivenOutFanPointsOnPurchase.model_rebuild()
EstimateGivenOutFanPointsOnPurchaseEstimateGivenOutFanPointsOnPurchaseErrors.model_rebuild()
