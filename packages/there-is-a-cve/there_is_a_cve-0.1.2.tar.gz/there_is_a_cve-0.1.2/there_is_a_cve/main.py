import subprocess
import sys
import inquirer
import requests
from bs4 import BeautifulSoup
import socket
import time
import dns.resolver
from tabulate import tabulate
import os
import random
import shutil

os.system("clear")

nomore = "\033[0m"
bigggggg = "\033[1m"

wotofoko = "./exploitdb/searchsploit"

def install():
    searchsploit_available = True
    if not os.path.isfile(wotofoko):
        print(f"searchsploit not found at {wotofoko}. Installing from the repository.")
        clone_cmd = "git clone https://gitlab.com/exploit-database/exploitdb.git"
        result = subprocess.run(clone_cmd, shell=True)
        if result.returncode != 0:
            print("Failed to clone the exploitdb repository.")
            searchsploit_available = False
        else:
            print("exploitdb repository successfully cloned.")
    else:
        print("searchsploit is available.")
    
    metasploit_available = True
    try:
        result = subprocess.run(["msfconsole", "--version"], capture_output=True, text=True)
        if result.returncode != 0:
            raise FileNotFoundError
        print("Metasploit is available.")
    except FileNotFoundError:
        print("Metasploit not found. Installing Metasploit.")
        install_cmd = "curl https://raw.githubusercontent.com/rapid7/metasploit-framework/master/scripts/omnibus/ubuntu.sh | bash"
        result = subprocess.run(install_cmd, shell=True)
        if result.returncode != 0:
            print("Failed to install Metasploit.")
            metasploit_available = False
        else:
            print("Metasploit successfully installed.")
    
    whatweb_available = True
    try:
        result = subprocess.run(["whatweb", "--version"], capture_output=True, text=True)
        if result.returncode != 0:
            raise FileNotFoundError
        print("WhatWeb is available.")
    except FileNotFoundError:
        print("WhatWeb not found. Installing WhatWeb.")
        install_cmd = "sudo apt-get install -y whatweb"
        result = subprocess.run(install_cmd, shell=True)
        if result.returncode != 0:
            print("Failed to install WhatWeb.")
            whatweb_available = False
        else:
            print("WhatWeb successfully installed.")

    return searchsploit_available, metasploit_available, whatweb_available

def drake():
    return f"{random.randint(0, 255):02X}{random.randint(0, 255):02X}{random.randint(0, 255):02X}"

def evrest(start_color, end_color, factor):
    start_rgb = [int(start_color[i:i+2], 16) for i in (0, 2, 4)]
    end_rgb = [int(end_color[i:i+2], 16) for i in (0, 2, 4)]
    interpolated_rgb = [
        int(start_rgb[i] + (end_rgb[i] - start_rgb[i]) * factor) for i in range(3)
    ]
    return f"\033[38;2;{interpolated_rgb[0]};{interpolated_rgb[1]};{interpolated_rgb[2]}m"

def ct(text, width):
    return text.center(width)

def tiac():
    banner = """
▄▄▄█████▓ ██▓ ▄▄▄       ▄████▄  
▓  ██▒ ▓▒▓██▒▒████▄    ▒██▀ ▀█  
▒ ▓██░ ▒░▒██▒▒██  ▀█▄  ▒▓█    ▄ 
░ ▓██▓ ░ ░██░░██▄▄▄▄██ ▒▓▓▄ ▄██▒
  ▒██▒ ░ ░██░ ▓█   ▓██▒▒ ▓███▀ ░
  ▒ ░░   ░▓   ▒▒   ▓▒█░░ ░▒ ▒  ░
    ░     ▒ ░  ▒   ▒▒ ░  ░  ▒   
  ░       ▒ ░  ░   ▒   ░        
          ░        ░  ░░ ░      
                       ░   

                           https://github.com/activiste                           
    """

    STARTING = drake()
    ENDING = drake()

    WWWW = banner.split('\n')
    NWWW = len(WWWW)

    monkey = shutil.get_terminal_size().columns

    for i, line in enumerate(WWWW):
        if line.strip():
            factor = i / (NWWW - 1)
            color = evrest(STARTING, ENDING, factor)
            centered_line = ct(line, monkey)
            sys.stdout.write(color + centered_line + nomore + '\n')
            sys.stdout.flush()
            time.sleep(0.01)
        else:
            print()

def writethatshit(text, speed=0.01):
    for char in text:
        sys.stdout.write(char)
        sys.stdout.flush()
        time.sleep(speed)
    print()

def NAAAAAAAAAAAAAH(url):
    try:
        ip = socket.gethostbyname(url)
        return ip
    except socket.gaierror:
        print("Invalid IP or Domain format.")
        sys.exit(1)

def yesssh(ip):
    url = f"https://shodan.io/host/{ip}"
    response = requests.get(url)
    return response.text

def checkcve(content):
    soup = BeautifulSoup(content, 'html.parser')
    cves = list(set([text for text in soup.stripped_strings if text.startswith("CVE-")]))
    cves.sort(key=lambda x: x.split('-')[1], reverse=True)
    
    cve_info = [(cve, f"https://www.cve.org/CVERecord?id={cve}") for cve in cves]
    
    return cve_info

def portsopen(content):
    soup = BeautifulSoup(content, 'html.parser')
    ports_div = soup.find("div", id="ports")
    if ports_div:
        ports = [a.get_text(strip=True) for a in ports_div.find_all("a", class_="bg-primary")]
        return ports
    return []

def dnsresolve(ip):
    try:
        result = dns.reversename.from_address(ip)
        reverse_dns = str(result)
        resolved = dns.resolver.resolve(reverse_dns, 'PTR')
        return [str(r)[:-1] for r in resolved]
    except dns.resolver.NXDOMAIN:
        return []
    except Exception as e:
        print(f"Error resolving domains: {e}")
        return []

def sexploit(cve):
    try:
        result = subprocess.run([wotofoko, cve], capture_output=True, text=True)
        return result.stdout
    except FileNotFoundError:
        return "searchsploit not found. Please ensure the path is correct."
    except Exception as e:
        return f"Error occurred: {e}"

def METAAAAA(cve):
    try:
        result = subprocess.run(["msfconsole", "-q", "-x", f"search {cve}; exit"], capture_output=True, text=True)
        return result.stdout
    except FileNotFoundError:
        return "Metasploit not found. Please ensure it is installed."
    except Exception as e:
        return f"Error occurred: {e}"

def TECHZEAUIYBDFEZTIZEA(output):
    lines = output.split('\n')
    formatted_lines = []
    for line in lines:
        parts = line.split(', ')
        for part in parts:
            formatted_lines.append(part)
    return "\n".join(formatted_lines)

def GETADDEZ(target):
    try:
        result = subprocess.run(["whatweb", target], capture_output=True, text=True)
        output = result.stdout.strip()
        tech_info = TECHZEAUIYBDFEZTIZEA(output)
        return tech_info
    except Exception as e:
        print(f"Error getting additional info: {e}")
        return "No additional info found"

def dsmenu():
    questions = [
        inquirer.List('choice',
                      message="What do you need?",
                      choices=['Scan IP or URL', 'Search Exploit', 'Exit'],
                      ),
    ]
    answers = inquirer.prompt(questions)
    return answers['choice']

def main():
    searchsploit_available, metasploit_available, whatweb_available = install()

    while True:
        os.system("clear")
        tiac()

        choice = dsmenu()

        if choice == 'Scan IP or URL':
            os.system("clear")
            tiac()
            writethatshit("Who is your target?\n", speed=0.01)
            target = input("Target > ").strip()
            if target.startswith("http://") or target.startswith("https://"):
                target = target.split("://")[1]
            if not target.replace(".", "").isdigit():
                ip = NAAAAAAAAAAAAAH(target)
            else:
                ip = target

            domains = dnsresolve(ip)
            if domains:
                domain_info = "\n".join(domains)
                domain_color = "\033[32m"
            else:
                domain_info = "None found"
                domain_color = "\033[31m"

            content = yesssh(ip)

            ports = portsopen(content)
            if ports:
                port_info = ', '.join(ports)
                port_color = "\033[34m"
            else:
                port_info = "No open ports found"
                port_color = "\033[31m"

            cve_info = checkcve(content)
            if cve_info:
                cve_info_display = "\n".join([f"{cve} - {url}" for cve, url in cve_info])
                cve_color = "\033[35m"
            else:
                cve_info_display = "No CVEs found"
                cve_color = "\033[31m"

            technologies = GETADDEZ(target)
            tech_color = "\033[33m" if technologies else "\033[31m"

            data = [
                [f"{bigggggg}IP Address{nomore}", ip],
                [f"{bigggggg}Hostnames{nomore}", domain_color + domain_info + nomore],
                [f"{bigggggg}Open Ports{nomore}", port_color + port_info + nomore],
                [f"{bigggggg}Technologies{nomore}", tech_color + technologies + nomore],
                [f"{bigggggg}CVEs{nomore}", cve_color + cve_info_display + nomore]
            ]

            print('\n')
            print(tabulate(data, headers=[f"{bigggggg}Category{bigggggg}", f"{bigggggg}Details{bigggggg}"], tablefmt="grid"))

            writethatshit("\nPress Enter to return to the menu...", speed=0.01)
            input()

        elif choice == 'Search Exploit':
            os.system("clear")
            tiac()
            writethatshit("Enter the exploit you are looking for (CVE ID / NAME)\n", speed=0.01)
            cve_id = input("Exploit > ").strip()
            result = sexploit(cve_id)
            print(result)
            result_msf = METAAAAA(cve_id)
            print(result_msf)
            writethatshit("\nPress Enter to return to the menu...", speed=0.01)
            input()

        elif choice == 'Exit':
            break

if __name__ == "__main__":
    main()
