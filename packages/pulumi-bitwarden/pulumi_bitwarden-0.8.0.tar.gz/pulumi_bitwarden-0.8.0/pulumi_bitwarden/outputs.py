# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'ItemLoginAttachment',
    'ItemLoginField',
    'ItemLoginUri',
    'ItemSecureNoteAttachment',
    'ItemSecureNoteField',
    'GetItemLoginAttachmentResult',
    'GetItemLoginFieldResult',
    'GetItemLoginUriResult',
    'GetItemSecureNoteAttachmentResult',
    'GetItemSecureNoteFieldResult',
]

@pulumi.output_type
class ItemLoginAttachment(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "fileName":
            suggest = "file_name"
        elif key == "sizeName":
            suggest = "size_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ItemLoginAttachment. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ItemLoginAttachment.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ItemLoginAttachment.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 file_name: Optional[str] = None,
                 id: Optional[str] = None,
                 size: Optional[str] = None,
                 size_name: Optional[str] = None,
                 url: Optional[str] = None):
        """
        :param str file_name: File name
        :param str id: Identifier.
        :param str size: Size in bytes
        :param str size_name: Size as string
        :param str url: URL
        """
        if file_name is not None:
            pulumi.set(__self__, "file_name", file_name)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if size is not None:
            pulumi.set(__self__, "size", size)
        if size_name is not None:
            pulumi.set(__self__, "size_name", size_name)
        if url is not None:
            pulumi.set(__self__, "url", url)

    @property
    @pulumi.getter(name="fileName")
    def file_name(self) -> Optional[str]:
        """
        File name
        """
        return pulumi.get(self, "file_name")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        Identifier.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def size(self) -> Optional[str]:
        """
        Size in bytes
        """
        return pulumi.get(self, "size")

    @property
    @pulumi.getter(name="sizeName")
    def size_name(self) -> Optional[str]:
        """
        Size as string
        """
        return pulumi.get(self, "size_name")

    @property
    @pulumi.getter
    def url(self) -> Optional[str]:
        """
        URL
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class ItemLoginField(dict):
    def __init__(__self__, *,
                 name: str,
                 boolean: Optional[bool] = None,
                 hidden: Optional[str] = None,
                 linked: Optional[str] = None,
                 text: Optional[str] = None):
        """
        :param str name: Name of the field.
        :param bool boolean: Value of a boolean field.
        :param str hidden: Value of a hidden text field.
        :param str linked: Value of a linked field.
        :param str text: Value of a text field.
        """
        pulumi.set(__self__, "name", name)
        if boolean is not None:
            pulumi.set(__self__, "boolean", boolean)
        if hidden is not None:
            pulumi.set(__self__, "hidden", hidden)
        if linked is not None:
            pulumi.set(__self__, "linked", linked)
        if text is not None:
            pulumi.set(__self__, "text", text)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Name of the field.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def boolean(self) -> Optional[bool]:
        """
        Value of a boolean field.
        """
        return pulumi.get(self, "boolean")

    @property
    @pulumi.getter
    def hidden(self) -> Optional[str]:
        """
        Value of a hidden text field.
        """
        return pulumi.get(self, "hidden")

    @property
    @pulumi.getter
    def linked(self) -> Optional[str]:
        """
        Value of a linked field.
        """
        return pulumi.get(self, "linked")

    @property
    @pulumi.getter
    def text(self) -> Optional[str]:
        """
        Value of a text field.
        """
        return pulumi.get(self, "text")


@pulumi.output_type
class ItemLoginUri(dict):
    def __init__(__self__, *,
                 value: str,
                 match: Optional[str] = None):
        """
        :param str value: URI Value
        :param str match: URI Match
        """
        pulumi.set(__self__, "value", value)
        if match is not None:
            pulumi.set(__self__, "match", match)

    @property
    @pulumi.getter
    def value(self) -> str:
        """
        URI Value
        """
        return pulumi.get(self, "value")

    @property
    @pulumi.getter
    def match(self) -> Optional[str]:
        """
        URI Match
        """
        return pulumi.get(self, "match")


@pulumi.output_type
class ItemSecureNoteAttachment(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "fileName":
            suggest = "file_name"
        elif key == "sizeName":
            suggest = "size_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ItemSecureNoteAttachment. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ItemSecureNoteAttachment.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ItemSecureNoteAttachment.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 file_name: Optional[str] = None,
                 id: Optional[str] = None,
                 size: Optional[str] = None,
                 size_name: Optional[str] = None,
                 url: Optional[str] = None):
        """
        :param str file_name: File name
        :param str id: Identifier.
        :param str size: Size in bytes
        :param str size_name: Size as string
        :param str url: URL
        """
        if file_name is not None:
            pulumi.set(__self__, "file_name", file_name)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if size is not None:
            pulumi.set(__self__, "size", size)
        if size_name is not None:
            pulumi.set(__self__, "size_name", size_name)
        if url is not None:
            pulumi.set(__self__, "url", url)

    @property
    @pulumi.getter(name="fileName")
    def file_name(self) -> Optional[str]:
        """
        File name
        """
        return pulumi.get(self, "file_name")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        Identifier.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def size(self) -> Optional[str]:
        """
        Size in bytes
        """
        return pulumi.get(self, "size")

    @property
    @pulumi.getter(name="sizeName")
    def size_name(self) -> Optional[str]:
        """
        Size as string
        """
        return pulumi.get(self, "size_name")

    @property
    @pulumi.getter
    def url(self) -> Optional[str]:
        """
        URL
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class ItemSecureNoteField(dict):
    def __init__(__self__, *,
                 name: str,
                 boolean: Optional[bool] = None,
                 hidden: Optional[str] = None,
                 linked: Optional[str] = None,
                 text: Optional[str] = None):
        """
        :param str name: Name of the field.
        :param bool boolean: Value of a boolean field.
        :param str hidden: Value of a hidden text field.
        :param str linked: Value of a linked field.
        :param str text: Value of a text field.
        """
        pulumi.set(__self__, "name", name)
        if boolean is not None:
            pulumi.set(__self__, "boolean", boolean)
        if hidden is not None:
            pulumi.set(__self__, "hidden", hidden)
        if linked is not None:
            pulumi.set(__self__, "linked", linked)
        if text is not None:
            pulumi.set(__self__, "text", text)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Name of the field.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def boolean(self) -> Optional[bool]:
        """
        Value of a boolean field.
        """
        return pulumi.get(self, "boolean")

    @property
    @pulumi.getter
    def hidden(self) -> Optional[str]:
        """
        Value of a hidden text field.
        """
        return pulumi.get(self, "hidden")

    @property
    @pulumi.getter
    def linked(self) -> Optional[str]:
        """
        Value of a linked field.
        """
        return pulumi.get(self, "linked")

    @property
    @pulumi.getter
    def text(self) -> Optional[str]:
        """
        Value of a text field.
        """
        return pulumi.get(self, "text")


@pulumi.output_type
class GetItemLoginAttachmentResult(dict):
    def __init__(__self__, *,
                 file_name: str,
                 id: str,
                 size: str,
                 size_name: str,
                 url: str):
        """
        :param str file_name: File name
        :param str id: Identifier.
        :param str size: Size in bytes
        :param str size_name: Size as string
        :param str url: URL
        """
        pulumi.set(__self__, "file_name", file_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "size", size)
        pulumi.set(__self__, "size_name", size_name)
        pulumi.set(__self__, "url", url)

    @property
    @pulumi.getter(name="fileName")
    def file_name(self) -> str:
        """
        File name
        """
        return pulumi.get(self, "file_name")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Identifier.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def size(self) -> str:
        """
        Size in bytes
        """
        return pulumi.get(self, "size")

    @property
    @pulumi.getter(name="sizeName")
    def size_name(self) -> str:
        """
        Size as string
        """
        return pulumi.get(self, "size_name")

    @property
    @pulumi.getter
    def url(self) -> str:
        """
        URL
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class GetItemLoginFieldResult(dict):
    def __init__(__self__, *,
                 name: str,
                 boolean: Optional[bool] = None,
                 hidden: Optional[str] = None,
                 linked: Optional[str] = None,
                 text: Optional[str] = None):
        """
        :param str name: Name of the field.
        :param bool boolean: Value of a boolean field.
        :param str hidden: Value of a hidden text field.
        :param str linked: Value of a linked field.
        :param str text: Value of a text field.
        """
        pulumi.set(__self__, "name", name)
        if boolean is not None:
            pulumi.set(__self__, "boolean", boolean)
        if hidden is not None:
            pulumi.set(__self__, "hidden", hidden)
        if linked is not None:
            pulumi.set(__self__, "linked", linked)
        if text is not None:
            pulumi.set(__self__, "text", text)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Name of the field.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def boolean(self) -> Optional[bool]:
        """
        Value of a boolean field.
        """
        return pulumi.get(self, "boolean")

    @property
    @pulumi.getter
    def hidden(self) -> Optional[str]:
        """
        Value of a hidden text field.
        """
        return pulumi.get(self, "hidden")

    @property
    @pulumi.getter
    def linked(self) -> Optional[str]:
        """
        Value of a linked field.
        """
        return pulumi.get(self, "linked")

    @property
    @pulumi.getter
    def text(self) -> Optional[str]:
        """
        Value of a text field.
        """
        return pulumi.get(self, "text")


@pulumi.output_type
class GetItemLoginUriResult(dict):
    def __init__(__self__, *,
                 value: str,
                 match: Optional[str] = None):
        """
        :param str value: URI Value
        :param str match: URI Match
        """
        pulumi.set(__self__, "value", value)
        if match is not None:
            pulumi.set(__self__, "match", match)

    @property
    @pulumi.getter
    def value(self) -> str:
        """
        URI Value
        """
        return pulumi.get(self, "value")

    @property
    @pulumi.getter
    def match(self) -> Optional[str]:
        """
        URI Match
        """
        return pulumi.get(self, "match")


@pulumi.output_type
class GetItemSecureNoteAttachmentResult(dict):
    def __init__(__self__, *,
                 file_name: str,
                 id: str,
                 size: str,
                 size_name: str,
                 url: str):
        """
        :param str file_name: File name
        :param str id: Identifier.
        :param str size: Size in bytes
        :param str size_name: Size as string
        :param str url: URL
        """
        pulumi.set(__self__, "file_name", file_name)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "size", size)
        pulumi.set(__self__, "size_name", size_name)
        pulumi.set(__self__, "url", url)

    @property
    @pulumi.getter(name="fileName")
    def file_name(self) -> str:
        """
        File name
        """
        return pulumi.get(self, "file_name")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        Identifier.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def size(self) -> str:
        """
        Size in bytes
        """
        return pulumi.get(self, "size")

    @property
    @pulumi.getter(name="sizeName")
    def size_name(self) -> str:
        """
        Size as string
        """
        return pulumi.get(self, "size_name")

    @property
    @pulumi.getter
    def url(self) -> str:
        """
        URL
        """
        return pulumi.get(self, "url")


@pulumi.output_type
class GetItemSecureNoteFieldResult(dict):
    def __init__(__self__, *,
                 name: str,
                 boolean: Optional[bool] = None,
                 hidden: Optional[str] = None,
                 linked: Optional[str] = None,
                 text: Optional[str] = None):
        """
        :param str name: Name of the field.
        :param bool boolean: Value of a boolean field.
        :param str hidden: Value of a hidden text field.
        :param str linked: Value of a linked field.
        :param str text: Value of a text field.
        """
        pulumi.set(__self__, "name", name)
        if boolean is not None:
            pulumi.set(__self__, "boolean", boolean)
        if hidden is not None:
            pulumi.set(__self__, "hidden", hidden)
        if linked is not None:
            pulumi.set(__self__, "linked", linked)
        if text is not None:
            pulumi.set(__self__, "text", text)

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Name of the field.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def boolean(self) -> Optional[bool]:
        """
        Value of a boolean field.
        """
        return pulumi.get(self, "boolean")

    @property
    @pulumi.getter
    def hidden(self) -> Optional[str]:
        """
        Value of a hidden text field.
        """
        return pulumi.get(self, "hidden")

    @property
    @pulumi.getter
    def linked(self) -> Optional[str]:
        """
        Value of a linked field.
        """
        return pulumi.get(self, "linked")

    @property
    @pulumi.getter
    def text(self) -> Optional[str]:
        """
        Value of a text field.
        """
        return pulumi.get(self, "text")


