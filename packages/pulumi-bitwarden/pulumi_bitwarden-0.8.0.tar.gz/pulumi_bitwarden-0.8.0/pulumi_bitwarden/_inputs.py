# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'ItemLoginAttachmentArgs',
    'ItemLoginFieldArgs',
    'ItemLoginUriArgs',
    'ItemSecureNoteAttachmentArgs',
    'ItemSecureNoteFieldArgs',
]

@pulumi.input_type
class ItemLoginAttachmentArgs:
    def __init__(__self__, *,
                 file_name: Optional[pulumi.Input[str]] = None,
                 id: Optional[pulumi.Input[str]] = None,
                 size: Optional[pulumi.Input[str]] = None,
                 size_name: Optional[pulumi.Input[str]] = None,
                 url: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] file_name: File name
        :param pulumi.Input[str] id: Identifier.
        :param pulumi.Input[str] size: Size in bytes
        :param pulumi.Input[str] size_name: Size as string
        :param pulumi.Input[str] url: URL
        """
        if file_name is not None:
            pulumi.set(__self__, "file_name", file_name)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if size is not None:
            pulumi.set(__self__, "size", size)
        if size_name is not None:
            pulumi.set(__self__, "size_name", size_name)
        if url is not None:
            pulumi.set(__self__, "url", url)

    @property
    @pulumi.getter(name="fileName")
    def file_name(self) -> Optional[pulumi.Input[str]]:
        """
        File name
        """
        return pulumi.get(self, "file_name")

    @file_name.setter
    def file_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "file_name", value)

    @property
    @pulumi.getter
    def id(self) -> Optional[pulumi.Input[str]]:
        """
        Identifier.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter
    def size(self) -> Optional[pulumi.Input[str]]:
        """
        Size in bytes
        """
        return pulumi.get(self, "size")

    @size.setter
    def size(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "size", value)

    @property
    @pulumi.getter(name="sizeName")
    def size_name(self) -> Optional[pulumi.Input[str]]:
        """
        Size as string
        """
        return pulumi.get(self, "size_name")

    @size_name.setter
    def size_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "size_name", value)

    @property
    @pulumi.getter
    def url(self) -> Optional[pulumi.Input[str]]:
        """
        URL
        """
        return pulumi.get(self, "url")

    @url.setter
    def url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "url", value)


@pulumi.input_type
class ItemLoginFieldArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str],
                 boolean: Optional[pulumi.Input[bool]] = None,
                 hidden: Optional[pulumi.Input[str]] = None,
                 linked: Optional[pulumi.Input[str]] = None,
                 text: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] name: Name of the field.
        :param pulumi.Input[bool] boolean: Value of a boolean field.
        :param pulumi.Input[str] hidden: Value of a hidden text field.
        :param pulumi.Input[str] linked: Value of a linked field.
        :param pulumi.Input[str] text: Value of a text field.
        """
        pulumi.set(__self__, "name", name)
        if boolean is not None:
            pulumi.set(__self__, "boolean", boolean)
        if hidden is not None:
            pulumi.set(__self__, "hidden", hidden)
        if linked is not None:
            pulumi.set(__self__, "linked", linked)
        if text is not None:
            pulumi.set(__self__, "text", text)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        """
        Name of the field.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def boolean(self) -> Optional[pulumi.Input[bool]]:
        """
        Value of a boolean field.
        """
        return pulumi.get(self, "boolean")

    @boolean.setter
    def boolean(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "boolean", value)

    @property
    @pulumi.getter
    def hidden(self) -> Optional[pulumi.Input[str]]:
        """
        Value of a hidden text field.
        """
        return pulumi.get(self, "hidden")

    @hidden.setter
    def hidden(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hidden", value)

    @property
    @pulumi.getter
    def linked(self) -> Optional[pulumi.Input[str]]:
        """
        Value of a linked field.
        """
        return pulumi.get(self, "linked")

    @linked.setter
    def linked(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "linked", value)

    @property
    @pulumi.getter
    def text(self) -> Optional[pulumi.Input[str]]:
        """
        Value of a text field.
        """
        return pulumi.get(self, "text")

    @text.setter
    def text(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "text", value)


@pulumi.input_type
class ItemLoginUriArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 match: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: URI Value
        :param pulumi.Input[str] match: URI Match
        """
        pulumi.set(__self__, "value", value)
        if match is not None:
            pulumi.set(__self__, "match", match)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        URI Value
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def match(self) -> Optional[pulumi.Input[str]]:
        """
        URI Match
        """
        return pulumi.get(self, "match")

    @match.setter
    def match(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "match", value)


@pulumi.input_type
class ItemSecureNoteAttachmentArgs:
    def __init__(__self__, *,
                 file_name: Optional[pulumi.Input[str]] = None,
                 id: Optional[pulumi.Input[str]] = None,
                 size: Optional[pulumi.Input[str]] = None,
                 size_name: Optional[pulumi.Input[str]] = None,
                 url: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] file_name: File name
        :param pulumi.Input[str] id: Identifier.
        :param pulumi.Input[str] size: Size in bytes
        :param pulumi.Input[str] size_name: Size as string
        :param pulumi.Input[str] url: URL
        """
        if file_name is not None:
            pulumi.set(__self__, "file_name", file_name)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if size is not None:
            pulumi.set(__self__, "size", size)
        if size_name is not None:
            pulumi.set(__self__, "size_name", size_name)
        if url is not None:
            pulumi.set(__self__, "url", url)

    @property
    @pulumi.getter(name="fileName")
    def file_name(self) -> Optional[pulumi.Input[str]]:
        """
        File name
        """
        return pulumi.get(self, "file_name")

    @file_name.setter
    def file_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "file_name", value)

    @property
    @pulumi.getter
    def id(self) -> Optional[pulumi.Input[str]]:
        """
        Identifier.
        """
        return pulumi.get(self, "id")

    @id.setter
    def id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "id", value)

    @property
    @pulumi.getter
    def size(self) -> Optional[pulumi.Input[str]]:
        """
        Size in bytes
        """
        return pulumi.get(self, "size")

    @size.setter
    def size(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "size", value)

    @property
    @pulumi.getter(name="sizeName")
    def size_name(self) -> Optional[pulumi.Input[str]]:
        """
        Size as string
        """
        return pulumi.get(self, "size_name")

    @size_name.setter
    def size_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "size_name", value)

    @property
    @pulumi.getter
    def url(self) -> Optional[pulumi.Input[str]]:
        """
        URL
        """
        return pulumi.get(self, "url")

    @url.setter
    def url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "url", value)


@pulumi.input_type
class ItemSecureNoteFieldArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str],
                 boolean: Optional[pulumi.Input[bool]] = None,
                 hidden: Optional[pulumi.Input[str]] = None,
                 linked: Optional[pulumi.Input[str]] = None,
                 text: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] name: Name of the field.
        :param pulumi.Input[bool] boolean: Value of a boolean field.
        :param pulumi.Input[str] hidden: Value of a hidden text field.
        :param pulumi.Input[str] linked: Value of a linked field.
        :param pulumi.Input[str] text: Value of a text field.
        """
        pulumi.set(__self__, "name", name)
        if boolean is not None:
            pulumi.set(__self__, "boolean", boolean)
        if hidden is not None:
            pulumi.set(__self__, "hidden", hidden)
        if linked is not None:
            pulumi.set(__self__, "linked", linked)
        if text is not None:
            pulumi.set(__self__, "text", text)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Input[str]:
        """
        Name of the field.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def boolean(self) -> Optional[pulumi.Input[bool]]:
        """
        Value of a boolean field.
        """
        return pulumi.get(self, "boolean")

    @boolean.setter
    def boolean(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "boolean", value)

    @property
    @pulumi.getter
    def hidden(self) -> Optional[pulumi.Input[str]]:
        """
        Value of a hidden text field.
        """
        return pulumi.get(self, "hidden")

    @hidden.setter
    def hidden(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hidden", value)

    @property
    @pulumi.getter
    def linked(self) -> Optional[pulumi.Input[str]]:
        """
        Value of a linked field.
        """
        return pulumi.get(self, "linked")

    @linked.setter
    def linked(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "linked", value)

    @property
    @pulumi.getter
    def text(self) -> Optional[pulumi.Input[str]]:
        """
        Value of a text field.
        """
        return pulumi.get(self, "text")

    @text.setter
    def text(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "text", value)


