# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    The version of the OpenAPI document: 1.0.0
    Contact: support@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class TransactionDestinationType(str, Enum):
    """
    The transaction destination type. Possible values include:   - `Address`: An address transfer destination, including an address of Custodial Wallets, MPC Wallets, or Smart Contract Wallets (Safe{Wallet}) and an external address.   - `ExchangeWallet`: An Exchange Wallet transfer destination.   - `EVM_Contract`: An EVM compatible contract.   - `EVM_EIP_191_Signature`: An EVM EIP-191 signature. For more details, see [Signed Data Standard](https://eips.ethereum.org/EIPS/eip-191).   - `EVM_EIP_712_Signature`: An EVM EIP-712 signature. For more details, see [Typed structured data hashing and signing](https://eips.ethereum.org/EIPS/eip-712).   - `DepositToAddress`: An address that can be a Cobo's wallet address or an external address.   - `DepositToWallet`: An Exchange Wallet. 
    """

    """
    allowed enum values
    """
    ADDRESS = 'Address'
    EXCHANGEWALLET = 'ExchangeWallet'
    EVM_CONTRACT = 'EVM_Contract'
    EVM_EIP_191_SIGNATURE = 'EVM_EIP_191_Signature'
    EVM_EIP_712_SIGNATURE = 'EVM_EIP_712_Signature'
    DEPOSITTOADDRESS = 'DepositToAddress'
    DEPOSITTOWALLET = 'DepositToWallet'

    UNKNOWN = None

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of TransactionDestinationType from a JSON string"""
        return cls(json.loads(json_str))

    @classmethod
    def _missing_(cls, value):
        return cls.UNKNOWN


