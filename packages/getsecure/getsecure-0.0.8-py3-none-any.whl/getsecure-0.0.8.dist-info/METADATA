Metadata-Version: 2.1
Name: getsecure
Version: 0.0.8
Summary: Utility for securing expiring links
Home-page: https://github.com/maratsh/getsecure
License: MIT
Keywords: nginx, secure_ling
Author: maratsh
Author-email: ya@maratsh.ru
Requires-Python: >=3.7,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Project-URL: Repository, https://github.com/maratsh/getsecure
Description-Content-Type: text/markdown

# getsecure

Utility for securing expiring links

## Usage

### Add to nginx vhost secure location section like this

```nginx
    location /secret_page.html {
     secure_link $arg_md5,$arg_expires;
     secure_link_md5 "$secure_link_expires$uri <put here secret string>";

     if ($secure_link = "") {
         return 403;
     }

     if ($secure_link = "0") {
         return 410;
     }
    }
```

### Get secure link

```bash
python secure.py http://example.com/secret_page.html <put here secret string> --period=30
http://example.com/secret_page.html?md5=IQ6H6OQYGeUnlLEDgHfYNw&expires=1488221041
```

or

```bash
python secure.py /secret_page.html <put here secret string> --period=30
/secret_page.html?md5=IQ6H6OQYGeUnlLEDgHfYNw&expires=1488221041
```

where period is days from now to future when link should work

