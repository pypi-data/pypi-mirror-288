# SPDX-FileCopyrightText: Peter Pentchev <roam@ringlet.net>
# SPDX-License-Identifier: BSD-2-Clause

[tox]
envlist =
  docs
  ruff
  format
  mypy
  reuse
  functional-socat
  functional-microsocks
isolated_build = True

[defs]
pyfiles =
  src/test_tunnel

[testenv:ruff]
tags =
  check
  quick
deps =
  -r requirements/ruff.txt
skip_install = True
commands =
  ruff check {[defs]pyfiles}

[testenv:format]
skip_install = True
tags =
  check
  quick
deps =
  -r requirements/ruff.txt
commands =
  ruff check --config ruff-base.toml --select=I --diff -- {[defs]pyfiles}
  ruff format --check --config ruff-base.toml --diff -- {[defs]pyfiles}

[testenv:reformat]
skip_install = True
tags =
  format
  manual
deps =
  -r requirements/ruff.txt
commands =
  ruff check --config ruff-base.toml --select=I --fix -- {[defs]pyfiles}
  ruff format --config ruff-base.toml -- {[defs]pyfiles}

[testenv:mypy]
skip_install = True
tags =
  check
deps =
  -r requirements/install.txt
  mypy >= 1, < 2
setenv =
  MYPYPATH={toxinidir}/stubs
commands =
  mypy {[defs]pyfiles}

[testenv:reuse]
skip_install = True
tags =
  check
  quick
deps =
  reuse >= 4, < 5
commands =
  reuse lint

[testenv:functional-socat]
tags =
  tests
deps =
  -r requirements/install.txt
commands =
  python3 -u -m test_tunnel.cmd_test.socat -v -O 0 -p {env:TEST_SOCAT:/usr/bin/socat}

[testenv:functional-microsocks]
tags =
  tests
deps =
  -r requirements/install.txt
commands =
  python3 -u -m test_tunnel.cmd_test.microsocks -v -O 10000 -p {env:TEST_MICROSOCKS:/usr/bin/microsocks}

[testenv:docs]
skip_install = True
tags =
  docs
deps =
  -r requirements/docs.txt
commands =
  mkdocs build
