import { Expression } from '../../mol-script/language/expression';
import { StructureQuery } from '../../mol-model/structure/query/query';
import { CustomProperty } from '../../mol-model-props/common/custom-property';
import { Structure } from '../../mol-model/structure/structure/structure';
export declare enum StructureSelectionCategory {
    Type = "Type",
    Structure = "Structure Property",
    Atom = "Atom Property",
    Bond = "Bond Property",
    Residue = "Residue Property",
    AminoAcid = "Amino Acid",
    NucleicBase = "Nucleic Base",
    Manipulate = "Manipulate Selection",
    Validation = "Validation",
    Misc = "Miscellaneous",
    Internal = "Internal"
}
interface StructureSelectionQuery {
    readonly label: string;
    readonly expression: Expression;
    readonly description: string;
    readonly category: string;
    readonly isHidden: boolean;
    readonly priority: number;
    readonly referencesCurrent: boolean;
    readonly query: StructureQuery;
    readonly ensureCustomProperties?: (ctx: CustomProperty.Context, structure: Structure) => Promise<void>;
}
interface StructureSelectionQueryProps {
    description?: string;
    category?: string;
    isHidden?: boolean;
    priority?: number;
    referencesCurrent?: boolean;
    ensureCustomProperties?: (ctx: CustomProperty.Context, structure: Structure) => Promise<void>;
}
declare function StructureSelectionQuery(label: string, expression: Expression, props?: StructureSelectionQueryProps): StructureSelectionQuery;
export declare const StructureSelectionQueries: {
    polymer: StructureSelectionQuery;
};
export {};
