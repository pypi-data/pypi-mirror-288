"use strict";
/**
 * Copyright (c) 2018-2022 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author David Sehnal <david.sehnal@gmail.com>
 * @author Alexander Rose <alexander.rose@weirdbyte.de>
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultPluginSpec = exports.PluginSpec = void 0;
var assembly_unwind_1 = require("../mol-plugin-state/animation/built-in/assembly-unwind");
var camera_spin_1 = require("../mol-plugin-state/animation/built-in/camera-spin");
var model_index_1 = require("../mol-plugin-state/animation/built-in/model-index");
var state_snapshots_1 = require("../mol-plugin-state/animation/built-in/state-snapshots");
var behavior_1 = require("./behavior");
var structure_focus_representation_1 = require("./behavior/dynamic/selection/structure-focus-representation");
var actions_1 = require("../mol-plugin-state/actions");
var volume_1 = require("../mol-plugin-state/actions/volume");
var transforms_1 = require("../mol-plugin-state/transforms");
var transformers_1 = require("./behavior/dynamic/volume-streaming/transformers");
var state_interpolation_1 = require("../mol-plugin-state/animation/built-in/state-interpolation");
var spin_structure_1 = require("../mol-plugin-state/animation/built-in/spin-structure");
var camera_rock_1 = require("../mol-plugin-state/animation/built-in/camera-rock");
var geo_export_1 = require("../extensions/geo-export");
var PluginSpec;
(function (PluginSpec) {
    function Action(action, params) {
        return {
            action: action,
            customControl: params && params.customControl,
            autoUpdate: params && params.autoUpdate
        };
    }
    PluginSpec.Action = Action;
    function Behavior(transformer, defaultParams) {
        if (defaultParams === void 0) { defaultParams = {}; }
        return { transformer: transformer, defaultParams: defaultParams };
    }
    PluginSpec.Behavior = Behavior;
})(PluginSpec || (PluginSpec = {}));
exports.PluginSpec = PluginSpec;
var DefaultPluginSpec = function () { return ({
    actions: [
        // PluginSpec.Action(StateActions.Structure.DownloadStructure),
        PluginSpec.Action(actions_1.StateActions.Structure.AddTrajectory),
        PluginSpec.Action(actions_1.StateActions.Volume.DownloadDensity),
        PluginSpec.Action(actions_1.StateActions.DataFormat.DownloadFile),
        PluginSpec.Action(actions_1.StateActions.DataFormat.OpenFiles),
        PluginSpec.Action(actions_1.StateActions.Structure.EnableModelCustomProps),
        PluginSpec.Action(actions_1.StateActions.Structure.EnableStructureCustomProps),
        // Volume streaming
        PluginSpec.Action(transformers_1.InitVolumeStreaming),
        PluginSpec.Action(transformers_1.BoxifyVolumeStreaming),
        PluginSpec.Action(transformers_1.CreateVolumeStreamingBehavior),
        PluginSpec.Action(transforms_1.StateTransforms.Data.Download),
        PluginSpec.Action(transforms_1.StateTransforms.Data.ParseCif),
        PluginSpec.Action(transforms_1.StateTransforms.Data.ParseCcp4),
        // PluginSpec.Action(StateTransforms.Data.ParseDsn6),
        PluginSpec.Action(transforms_1.StateTransforms.Model.TrajectoryFromMmCif),
        // PluginSpec.Action(StateTransforms.Model.TrajectoryFromCifCore),
        // PluginSpec.Action(StateTransforms.Model.TrajectoryFromPDB),
        PluginSpec.Action(transforms_1.StateTransforms.Model.TransformStructureConformation),
        PluginSpec.Action(transforms_1.StateTransforms.Model.StructureFromModel),
        PluginSpec.Action(transforms_1.StateTransforms.Model.StructureFromTrajectory),
        PluginSpec.Action(transforms_1.StateTransforms.Model.ModelFromTrajectory),
        PluginSpec.Action(transforms_1.StateTransforms.Model.StructureSelectionFromScript),
        PluginSpec.Action(transforms_1.StateTransforms.Representation.StructureRepresentation3D),
        PluginSpec.Action(transforms_1.StateTransforms.Representation.StructureSelectionsDistance3D),
        PluginSpec.Action(transforms_1.StateTransforms.Representation.StructureSelectionsAngle3D),
        PluginSpec.Action(transforms_1.StateTransforms.Representation.StructureSelectionsDihedral3D),
        PluginSpec.Action(transforms_1.StateTransforms.Representation.StructureSelectionsLabel3D),
        PluginSpec.Action(transforms_1.StateTransforms.Representation.StructureSelectionsOrientation3D),
        PluginSpec.Action(transforms_1.StateTransforms.Representation.ModelUnitcell3D),
        PluginSpec.Action(transforms_1.StateTransforms.Representation.StructureGridPocket3D),
        PluginSpec.Action(transforms_1.StateTransforms.Representation.StructureBoundingBox3D),
        PluginSpec.Action(transforms_1.StateTransforms.Representation.Pharmacophore3D),
        PluginSpec.Action(transforms_1.StateTransforms.Representation.RotateArrow3D),
        PluginSpec.Action(transforms_1.StateTransforms.Representation.ExplodeStructureRepresentation3D),
        PluginSpec.Action(transforms_1.StateTransforms.Representation.SpinStructureRepresentation3D),
        PluginSpec.Action(transforms_1.StateTransforms.Representation.UnwindStructureAssemblyRepresentation3D),
        PluginSpec.Action(transforms_1.StateTransforms.Representation
            .OverpaintStructureRepresentation3DFromScript),
        PluginSpec.Action(transforms_1.StateTransforms.Representation
            .TransparencyStructureRepresentation3DFromScript),
        PluginSpec.Action(transforms_1.StateTransforms.Representation.ClippingStructureRepresentation3DFromScript),
        PluginSpec.Action(transforms_1.StateTransforms.Representation
            .SubstanceStructureRepresentation3DFromScript),
        PluginSpec.Action(volume_1.AssignColorVolume),
        // PluginSpec.Action(StateTransforms.Volume.VolumeFromCcp4),
        // PluginSpec.Action(StateTransforms.Volume.VolumeFromDsn6),
        // PluginSpec.Action(StateTransforms.Volume.VolumeFromCube),
        // PluginSpec.Action(StateTransforms.Volume.VolumeFromDx),
        PluginSpec.Action(transforms_1.StateTransforms.Representation.VolumeRepresentation3D)
    ],
    behaviors: [
        PluginSpec.Behavior(behavior_1.PluginBehaviors.Representation.HighlightLoci),
        PluginSpec.Behavior(behavior_1.PluginBehaviors.Representation.SelectLoci),
        PluginSpec.Behavior(behavior_1.PluginBehaviors.Representation.DefaultLociLabelProvider),
        PluginSpec.Behavior(behavior_1.PluginBehaviors.Representation.FocusLoci),
        PluginSpec.Behavior(behavior_1.PluginBehaviors.Camera.FocusLoci),
        PluginSpec.Behavior(behavior_1.PluginBehaviors.Camera.CameraAxisHelper),
        PluginSpec.Behavior(structure_focus_representation_1.StructureFocusRepresentation),
        PluginSpec.Behavior(behavior_1.PluginBehaviors.CustomProps.StructureInfo),
        PluginSpec.Behavior(behavior_1.PluginBehaviors.CustomProps.AccessibleSurfaceArea),
        // PluginSpec.Behavior(
        //   PluginBehaviors.CustomProps.BestDatabaseSequenceMapping
        // ),
        PluginSpec.Behavior(behavior_1.PluginBehaviors.CustomProps.Interactions),
        PluginSpec.Behavior(behavior_1.PluginBehaviors.CustomProps.SecondaryStructure),
        // PluginSpec.Behavior(PluginBehaviors.CustomProps.ValenceModel),
        // PluginSpec.Behavior(PluginBehaviors.CustomProps.CrossLinkRestraint)
        PluginSpec.Behavior(geo_export_1.GeometryExport),
    ],
    animations: [
        model_index_1.AnimateModelIndex,
        camera_spin_1.AnimateCameraSpin,
        camera_rock_1.AnimateCameraRock,
        state_snapshots_1.AnimateStateSnapshots,
        assembly_unwind_1.AnimateAssemblyUnwind,
        spin_structure_1.AnimateStructureSpin,
        state_interpolation_1.AnimateStateInterpolation
    ]
}); };
exports.DefaultPluginSpec = DefaultPluginSpec;
//# sourceMappingURL=spec.js.map