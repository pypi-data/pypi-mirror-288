/**
 * Copyright (c) 2018-2022 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author Alexander Rose <alexander.rose@weirdbyte.de>
 */
import { Color, ColorMap } from '../../mol-util/color';
import { ColorTheme } from '../color';
import { ParamDefinition as PD } from '../../mol-util/param-definition';
import { ThemeDataContext } from '../theme';
export declare const ResidueNameColors: ColorMap<{
    ALA: number;
    ARG: number;
    ASN: number;
    ASP: number;
    CYS: number;
    GLN: number;
    GLU: number;
    GLY: number;
    HIS: number;
    ILE: number;
    LEU: number;
    LYS: number;
    MET: number;
    PHE: number;
    PRO: number;
    SER: number;
    THR: number;
    TRP: number;
    TYR: number;
    VAL: number;
    A: number;
    G: number;
    I: number;
    C: number;
    T: number;
    U: number;
    DA: number;
    DG: number;
    DI: number;
    DC: number;
    DT: number;
    DU: number;
    APN: number;
    GPN: number;
    CPN: number;
    TPN: number;
    MOL: number;
}>;
export declare type ResidueNameColors = typeof ResidueNameColors;
export declare const ResidueNameColorThemeParams: {
    saturation: PD.Numeric;
    lightness: PD.Numeric;
    colors: PD.Mapped<PD.NamedParams<PD.Normalize<unknown>, "default"> | PD.NamedParams<PD.Normalize<{
        ALA: Color;
        ARG: Color;
        ASN: Color;
        ASP: Color;
        CYS: Color;
        GLN: Color;
        GLU: Color;
        GLY: Color;
        HIS: Color;
        ILE: Color;
        LEU: Color;
        LYS: Color;
        MET: Color;
        PHE: Color;
        PRO: Color;
        SER: Color;
        THR: Color;
        TRP: Color;
        TYR: Color;
        VAL: Color;
        A: Color;
        G: Color;
        I: Color;
        C: Color;
        T: Color;
        U: Color;
        DA: Color;
        DG: Color;
        DI: Color;
        DC: Color;
        DT: Color;
        DU: Color;
        APN: Color;
        GPN: Color;
        CPN: Color;
        TPN: Color;
        MOL: Color;
    }>, "custom">>;
};
export declare type ResidueNameColorThemeParams = typeof ResidueNameColorThemeParams;
export declare function getResidueNameColorThemeParams(ctx: ThemeDataContext): {
    saturation: PD.Numeric;
    lightness: PD.Numeric;
    colors: PD.Mapped<PD.NamedParams<PD.Normalize<unknown>, "default"> | PD.NamedParams<PD.Normalize<{
        ALA: Color;
        ARG: Color;
        ASN: Color;
        ASP: Color;
        CYS: Color;
        GLN: Color;
        GLU: Color;
        GLY: Color;
        HIS: Color;
        ILE: Color;
        LEU: Color;
        LYS: Color;
        MET: Color;
        PHE: Color;
        PRO: Color;
        SER: Color;
        THR: Color;
        TRP: Color;
        TYR: Color;
        VAL: Color;
        A: Color;
        G: Color;
        I: Color;
        C: Color;
        T: Color;
        U: Color;
        DA: Color;
        DG: Color;
        DI: Color;
        DC: Color;
        DT: Color;
        DU: Color;
        APN: Color;
        GPN: Color;
        CPN: Color;
        TPN: Color;
        MOL: Color;
    }>, "custom">>;
};
export declare function residueNameColor(colorMap: ResidueNameColors, residueName: string): Color;
export declare function ResidueNameColorTheme(ctx: ThemeDataContext, props: PD.Values<ResidueNameColorThemeParams>): ColorTheme<ResidueNameColorThemeParams>;
export declare const ResidueNameColorThemeProvider: ColorTheme.Provider<ResidueNameColorThemeParams, 'residue-name'>;
