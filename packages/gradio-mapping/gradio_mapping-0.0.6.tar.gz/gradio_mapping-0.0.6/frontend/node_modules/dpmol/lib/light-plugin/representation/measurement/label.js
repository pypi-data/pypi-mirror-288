"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LabelRepr = void 0;
var tslib_1 = require("tslib");
var label_1 = require("../../../mol-repr/shape/loci/label");
exports.LabelRepr = {
    create: function (loci, ctx, props, theme) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var representation;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        representation = (0, label_1.LabelRepresentation)(ctx, function () { return label_1.LabelParams; });
                        return [4 /*yield*/, representation
                                .createOrUpdate(props !== null && props !== void 0 ? props : {}, {
                                infos: (loci[0].loci ? loci : loci.map(function (item) { return ({ loci: item }); })),
                            })
                                .run()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/, representation];
                }
            });
        });
    },
    update: function (representation, loci, props, theme) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (theme) {
                            representation.setTheme(theme);
                        }
                        return [4 /*yield*/, representation
                                .createOrUpdate(props !== null && props !== void 0 ? props : {}, {
                                infos: loci.map(function (item) { return ({ loci: item }); })
                            })
                                .run()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    }
};
/* props: {
  // 自定义label文案
  customText: PD.Text('', {
    label: 'Text',
    description: 'Override the label with custom value.',
    isEssential: true
  }),
  // 文字颜色
  textColor: PD.Color(ColorNames.black, { isEssential: true }),
  // 文字大小
  textSize: PD.Numeric(
    0.5,
    { min: 0.1, max: 10, step: 0.1 },
    { isEssential: true }
  ),
  // 边框宽度
  borderWidth: PD.Numeric(0, { min: 0, max: 0.5, step: 0.01 }),
  // 边框颜色
  borderColor: PD.Color(ColorNames.grey),
  // 是否有背景
  background: PD.Boolean(false),
  // 背景色
  backgroundColor: PD.Color(ColorNames.grey),
  // 透明度
  alpha: PD.Numeric(1, { min: 0, max: 1, step: 0.01 }, { label: 'Opacity', isEssential: true, description: 'How opaque/transparent the representation is rendered.' }),
  // label与结构的相对位置
  attachment: PD.Select('middle-center', [
    ['bottom-left', 'bottom-left'], ['bottom-center', 'bottom-center'], ['bottom-right', 'bottom-right'],
    ['middle-left', 'middle-left'], ['middle-center', 'middle-center'], ['middle-right', 'middle-right'],
    ['top-left', 'top-left'], ['top-center', 'top-center'], ['top-right', 'top-right'],
  ] as [TextAttachment, string][]),
} */
//# sourceMappingURL=label.js.map