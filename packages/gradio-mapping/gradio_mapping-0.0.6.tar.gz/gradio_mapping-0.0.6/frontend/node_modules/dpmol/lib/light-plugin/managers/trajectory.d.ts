import { LightPlugin } from '../index';
import { Format } from '../types';
import { UUID } from '../../mol-util';
export interface TrajectoryEvent {
    ref?: string;
    frame: number;
}
export declare class TrajectoryManager {
    plugin: LightPlugin;
    paused: boolean;
    private ev;
    updated: import("rxjs").Subject<TrajectoryEvent>;
    constructor(plugin: LightPlugin);
    import(data: {
        data: string | File;
        format: Format;
    }, coordsData: {
        data: string | File;
        format: Format;
    }): Promise<string>;
    importWithGro(data: {
        data: string | File;
        format: Format;
    }): Promise<string>;
    getTrajectoryCell(ref?: UUID): import("../types").Cell[];
    play(ref?: UUID): void;
    next(ref?: UUID): Promise<void>;
    setFrameIndex(frameIndex: number, ref?: UUID): Promise<void>;
    updateDependencyByCells(ref?: UUID): Promise<void>;
    pause(): void;
}
