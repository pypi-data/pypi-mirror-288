import { Structure } from '../../mol-model/structure';
import { Granularity } from '../types';
import { AtomData } from './writer';
export declare const MetalNameSet: Set<string>;
export declare const SolventNameSet: Set<string>;
export interface AtomHierarchy {
    unitId: number;
    elementId: number;
    chainId: string;
    groupPDB: string;
    residueId: number;
    residueName: string;
    atomId: number;
    atomName: string;
    typeSymbol: string;
    charge: number;
    altId: string;
    isEutectic?: boolean;
    cdr?: number;
    bfactor?: number;
    em_confidence?: string;
    insertCode?: string;
    residueIndex?: number;
    x: number;
    y: number;
    z: number;
    occupancy: string;
}
export declare const atomHierarchyToAtomData: (atom: AtomHierarchy) => AtomData;
export declare const setHierarchyData: (obj: {
    [key: string]: {
        [key: string]: AtomHierarchy[];
    };
}, data: AtomHierarchy, insertCode?: boolean) => void;
export declare const getHierarchy: (structure: Structure) => {
    data: {
        polymer: {
            [p: string]: {
                [p: string]: AtomHierarchy[];
            };
        };
        water: {
            [p: string]: {
                [p: string]: AtomHierarchy[];
            };
        };
        otherSolvent: {
            [p: string]: {
                [p: string]: AtomHierarchy[];
            };
        };
        metal: {
            [p: string]: {
                [p: string]: AtomHierarchy[];
            };
        };
        ion: {
            [p: string]: {
                [p: string]: AtomHierarchy[];
            };
        };
        ligand: {
            [p: string]: {
                [p: string]: AtomHierarchy[];
            };
        };
        other: {
            [p: string]: {
                [p: string]: AtomHierarchy[];
            };
        };
    };
    extraData: {
        sequenceData: any;
    };
};
export declare const getSequence: (structure: Structure) => {
    [key: string]: {
        [key: string]: any;
    };
};
export declare const getGranularityUniqueId: (data: AtomHierarchy, granularity: Granularity) => string;
export declare const getGranularityProps: (data: AtomHierarchy, granularity: Granularity) => AtomHierarchy | {
    unitId: number;
    chainId: string;
    groupPDB: string;
    residueId: number;
    residueName: string;
} | {
    unitId: number;
    chainId: string;
    groupPDB?: undefined;
    residueId?: undefined;
    residueName?: undefined;
} | {
    unitId: number;
    chainId?: undefined;
    groupPDB?: undefined;
    residueId?: undefined;
    residueName?: undefined;
} | {
    unitId?: undefined;
    chainId?: undefined;
    groupPDB?: undefined;
    residueId?: undefined;
    residueName?: undefined;
};
