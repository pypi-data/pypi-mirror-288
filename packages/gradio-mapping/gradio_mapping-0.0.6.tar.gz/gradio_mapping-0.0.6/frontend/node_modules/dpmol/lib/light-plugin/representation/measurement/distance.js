"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DistanceRepr = void 0;
var tslib_1 = require("tslib");
var distance_1 = require("../../../mol-repr/shape/loci/distance");
exports.DistanceRepr = {
    create: function (loci, ctx, props, theme) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var representation;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        representation = (0, distance_1.DistanceRepresentation)(ctx, function () { return distance_1.DistanceParams; });
                        return [4 /*yield*/, representation
                                .createOrUpdate(props !== null && props !== void 0 ? props : {}, {
                                pairs: [{ loci: loci.slice(-2) }]
                            })
                                .run()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/, representation];
                }
            });
        });
    },
    update: function (representation, loci, props, theme) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (theme) {
                            representation.setTheme(theme);
                        }
                        return [4 /*yield*/, representation
                                .createOrUpdate(props !== null && props !== void 0 ? props : {}, {
                                pairs: [{ loci: loci }]
                            })
                                .run()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    }
};
/* props: {
  // 透明度
  alpha: PD.Numeric(1, { min: 0, max: 1, step: 0.01 }, { label: 'Opacity', isEssential: true, description: 'How opaque/transparent the representation is rendered.' }),
  // distance 线的颜色
  linesColor: PD.Color(ColorNames.lightgreen, { isEssential: true }),
  // distance 线的宽度
  linesSize: PD.Numeric(0.075, { min: 0.01, max: 5, step: 0.01 }),
  // distance 虚线的间隙大小
  dashLength: PD.Numeric(0.2, { min: 0.01, max: 0.2, step: 0.01 }),
  // 单位（customText为空时生效）
  unitLabel: PD.Text('\u212B', { isEssential: true }),
  // 自定义文案
  customText: PD.Text('', {
    label: 'Text',
    description: 'Override the label with custom value.',
    isEssential: true
  }),
} */
//# sourceMappingURL=distance.js.map