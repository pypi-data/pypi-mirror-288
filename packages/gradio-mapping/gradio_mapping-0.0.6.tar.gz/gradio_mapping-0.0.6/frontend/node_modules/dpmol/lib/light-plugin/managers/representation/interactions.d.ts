import { CellItem, InteractionOptions, InteractionParams } from '../../types';
import { INTERACTION_TYPE } from '../../representation/interactions';
import { Theme } from '../../../mol-theme/theme';
import { DefaultTheme, RepresentationTheme } from './theme';
import { LightPlugin } from '../../index';
export declare class RepresentationInteractions extends RepresentationTheme {
    private ev;
    readonly event: {
        interactionParamsUpdated: import("rxjs").Subject<{
            params: InteractionParams;
            type: INTERACTION_TYPE;
        }>;
        interactionUpdated: import("rxjs").Subject<{
            from?: string | undefined;
        }>;
    };
    type: INTERACTION_TYPE;
    interactionParams: InteractionParams;
    plugin: LightPlugin;
    constructor(plugin: LightPlugin, defaultTheme?: Partial<DefaultTheme>, defaultInteractionParams?: Partial<InteractionParams>);
    showInteractionInCellItems(items: CellItem[], type?: INTERACTION_TYPE, theme?: Theme, strictMode?: boolean): Promise<string>;
    showInteractionBetweenCellItems(itemsA: CellItem[], itemsB: CellItem[], theme?: Theme, strictMode?: boolean): Promise<string | undefined>;
    setInteractionParams(options: InteractionOptions[], type: INTERACTION_TYPE): boolean;
    showGlobalInteraction(strictMode?: boolean, from?: string): Promise<string>;
}
