"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AngleRepr = void 0;
var tslib_1 = require("tslib");
var angle_1 = require("../../../mol-repr/shape/loci/angle");
exports.AngleRepr = {
    create: function (loci, ctx, props, theme) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            var representation;
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        representation = (0, angle_1.AngleRepresentation)(ctx, function () { return angle_1.AngleParams; });
                        return [4 /*yield*/, representation
                                .createOrUpdate(props !== null && props !== void 0 ? props : {}, {
                                triples: [{ loci: loci.slice(-3) }]
                            })
                                .run()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/, representation];
                }
            });
        });
    },
    update: function (representation, loci, props, theme) {
        return (0, tslib_1.__awaiter)(this, void 0, void 0, function () {
            return (0, tslib_1.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (theme) {
                            representation.setTheme(theme);
                        }
                        return [4 /*yield*/, representation
                                .createOrUpdate(props !== null && props !== void 0 ? props : {}, {
                                triples: [{ loci: loci.slice(-3) }]
                            })
                                .run()];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    }
};
/* props: {
  // 颜色
  color: PD.Color(ColorNames.lightgreen),
  // 角度展示区域的大小
  arcScale: PD.Numeric(0.7, { min: 0.01, max: 1, step: 0.01 })
  // angle角度的透明度
  sectorOpacity: PD.Numeric(0.75, { min: 0, max: 1, step: 0.01 })
  // angle 虚线的宽度
  linesSize: PD.Numeric(0.075, { min: 0.01, max: 5, step: 0.01 }),
  // angle 虚线的间隙大小
  dashLength: PD.Numeric(0.2, { min: 0.01, max: 0.2, step: 0.01 }),
  // 自定义文案
  customText: PD.Text('', {
    label: 'Text',
    description: 'Override the label with custom value.',
    isEssential: true
  }),
} */
//# sourceMappingURL=angle.js.map