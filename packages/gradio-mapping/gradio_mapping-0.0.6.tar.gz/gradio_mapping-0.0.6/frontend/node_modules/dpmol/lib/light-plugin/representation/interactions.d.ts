import { CellItem, InteractionParams } from '../types';
import { Theme } from '../../mol-theme/theme';
import { LightPlugin } from '../index';
import { INTERACTION_TYPE } from './index';
export { INTERACTION_TYPE } from './index';
export declare const InteractionsRepr: {
    createOrUpdateInCellItems: (items: CellItem[], plugin: LightPlugin, type?: INTERACTION_TYPE | undefined, params?: InteractionParams | undefined, theme?: Theme | undefined) => Promise<{
        representation: import("../../mol-repr/representation").Representation<import("../../mol-model/structure/structure/structure").Structure, {
            unitKinds: import("../../mol-util/param-definition").ParamDefinition.MultiSelect<"spheres" | "gaussians" | "atomic">;
            sizeFactor: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            visuals: import("../../mol-util/param-definition").ParamDefinition.MultiSelect<"intra-unit" | "inter-unit">;
            dashCount: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            dashScale: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            includeParent: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            linkScale: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            linkSpacing: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            linkCap: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            aromaticScale: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            aromaticSpacing: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            aromaticDashCount: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            dashCap: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            stubCap: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            radialSegments: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            doubleSided: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            flipSided: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            flatShaded: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            ignoreLight: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            xrayShaded: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            bumpFrequency: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            bumpAmplitude: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            alpha: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            quality: import("../../mol-util/param-definition").ParamDefinition.Select<"auto" | "medium" | "high" | "low" | "custom" | "highest" | "higher" | "lower" | "lowest">;
            material: import("../../mol-util/param-definition").ParamDefinition.Group<import("../../mol-util/param-definition").ParamDefinition.Normalize<{
                metalness: number;
                roughness: number;
                bumpiness: number;
            }>>;
            clip: import("../../mol-util/param-definition").ParamDefinition.Group<import("../../mol-util/param-definition").ParamDefinition.Normalize<{
                variant: import("../../mol-util/clip").Clip.Variant;
                objects: import("../../mol-util/param-definition").ParamDefinition.Normalize<{
                    type: any;
                    invert: any;
                    position: any;
                    rotation: any;
                    scale: any;
                }>[];
            }>>;
        }, import("../../mol-repr/structure/representation").StructureRepresentationState>;
        structure: import("../../mol-model/structure/structure/structure").Structure;
        ref: string | undefined;
    }>;
    createOrUpdateBetweenCellItems: (itemsA: CellItem[], itemsB: CellItem[], plugin: LightPlugin, params?: InteractionParams | undefined, theme?: Theme | undefined) => Promise<{
        representation?: undefined;
        structure?: undefined;
        ref?: undefined;
    } | {
        representation: import("../../mol-repr/representation").Representation<import("../../mol-model/structure/structure/structure").Structure, {
            unitKinds: import("../../mol-util/param-definition").ParamDefinition.MultiSelect<"spheres" | "gaussians" | "atomic">;
            sizeFactor: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            visuals: import("../../mol-util/param-definition").ParamDefinition.MultiSelect<"intra-unit" | "inter-unit">;
            dashCount: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            dashScale: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            includeParent: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            linkScale: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            linkSpacing: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            linkCap: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            aromaticScale: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            aromaticSpacing: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            aromaticDashCount: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            dashCap: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            stubCap: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            radialSegments: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            doubleSided: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            flipSided: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            flatShaded: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            ignoreLight: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            xrayShaded: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            bumpFrequency: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            bumpAmplitude: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            alpha: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            quality: import("../../mol-util/param-definition").ParamDefinition.Select<"auto" | "medium" | "high" | "low" | "custom" | "highest" | "higher" | "lower" | "lowest">;
            material: import("../../mol-util/param-definition").ParamDefinition.Group<import("../../mol-util/param-definition").ParamDefinition.Normalize<{
                metalness: number;
                roughness: number;
                bumpiness: number;
            }>>;
            clip: import("../../mol-util/param-definition").ParamDefinition.Group<import("../../mol-util/param-definition").ParamDefinition.Normalize<{
                variant: import("../../mol-util/clip").Clip.Variant;
                objects: import("../../mol-util/param-definition").ParamDefinition.Normalize<{
                    type: any;
                    invert: any;
                    position: any;
                    rotation: any;
                    scale: any;
                }>[];
            }>>;
        }, import("../../mol-repr/structure/representation").StructureRepresentationState>;
        structure: import("../../mol-model/structure/structure/structure").Structure;
        ref: string | undefined;
    }>;
    createOrUpdateGlobal: (globalCellItems: CellItem[], plugin: LightPlugin, type?: INTERACTION_TYPE | undefined, params?: InteractionParams | undefined, theme?: Theme | undefined, filterItems?: CellItem[] | undefined) => Promise<{
        representation: import("../../mol-repr/representation").Representation<import("../../mol-model/structure/structure/structure").Structure, {
            unitKinds: import("../../mol-util/param-definition").ParamDefinition.MultiSelect<"spheres" | "gaussians" | "atomic">;
            sizeFactor: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            visuals: import("../../mol-util/param-definition").ParamDefinition.MultiSelect<"intra-unit" | "inter-unit">;
            dashCount: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            dashScale: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            includeParent: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            linkScale: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            linkSpacing: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            linkCap: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            aromaticScale: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            aromaticSpacing: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            aromaticDashCount: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            dashCap: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            stubCap: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            radialSegments: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            doubleSided: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            flipSided: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            flatShaded: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            ignoreLight: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            xrayShaded: import("../../mol-util/param-definition").ParamDefinition.BooleanParam;
            bumpFrequency: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            bumpAmplitude: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            alpha: import("../../mol-util/param-definition").ParamDefinition.Numeric;
            quality: import("../../mol-util/param-definition").ParamDefinition.Select<"auto" | "medium" | "high" | "low" | "custom" | "highest" | "higher" | "lower" | "lowest">;
            material: import("../../mol-util/param-definition").ParamDefinition.Group<import("../../mol-util/param-definition").ParamDefinition.Normalize<{
                metalness: number;
                roughness: number;
                bumpiness: number;
            }>>;
            clip: import("../../mol-util/param-definition").ParamDefinition.Group<import("../../mol-util/param-definition").ParamDefinition.Normalize<{
                variant: import("../../mol-util/clip").Clip.Variant;
                objects: import("../../mol-util/param-definition").ParamDefinition.Normalize<{
                    type: any;
                    invert: any;
                    position: any;
                    rotation: any;
                    scale: any;
                }>[];
            }>>;
        }, import("../../mol-repr/structure/representation").StructureRepresentationState>;
        structure: import("../../mol-model/structure/structure/structure").Structure;
        ref: string | undefined;
        interactionElementIds: CellItem[];
    }>;
};
