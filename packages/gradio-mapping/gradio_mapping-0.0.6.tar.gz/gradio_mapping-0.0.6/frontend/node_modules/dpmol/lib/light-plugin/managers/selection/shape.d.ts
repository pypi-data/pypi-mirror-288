import { Representation } from '../../../mol-repr/representation';
import { UUID } from '../../../mol-util';
import { LightPlugin } from '../../index';
import { CellItem } from '../../types';
import { Canvas3D } from '../../../mol-canvas3d/canvas3d';
export interface AddSelectionEvent {
    ref: UUID;
    loci: Representation.Loci;
}
export interface RemoveSelectionEvent {
    ref: UUID;
    loci: Representation.Loci;
}
export declare class ShapeSelectionManager {
    private ev;
    prev: Map<UUID, Representation.Loci>;
    plugin: LightPlugin;
    selection: Set<UUID>;
    readonly event: {
        change: import("rxjs").Subject<Canvas3D.ClickEvent>;
        add: import("rxjs").Subject<AddSelectionEvent>;
        remove: import("rxjs").Subject<RemoveSelectionEvent>;
        clear: import("rxjs").Subject<{}>;
    };
    constructor(plugin: LightPlugin);
    add(data: {
        item: CellItem;
        loci?: Representation.Loci;
    }): void;
    remove(data: {
        item: CellItem;
        loci?: Representation.Loci;
    }): void;
    clear(): void;
}
