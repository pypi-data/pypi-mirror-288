"use strict";
/**
 * Copyright (c) 2018-2022 mol* contributors, licensed under MIT, See LICENSE file for more info.
 *
 * @author David Sehnal <david.sehnal@gmail.com>
 * @author Alexander Rose <alexander.rose@weirdbyte.de>
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BuiltInCoordinatesFormats = exports.XtcProvider = exports.CoordinatesFormatCategory = void 0;
var transforms_1 = require("../transforms");
var provider_1 = require("./provider");
exports.CoordinatesFormatCategory = 'Coordinates';
var XtcProvider = (0, provider_1.DataFormatProvider)({
    label: 'XTC',
    description: 'XTC',
    category: exports.CoordinatesFormatCategory,
    binaryExtensions: ['xtc'],
    parse: function (plugin, data) {
        var coordinates = plugin.state.data.build()
            .to(data)
            .apply(transforms_1.StateTransforms.Model.CoordinatesFromXtc);
        return coordinates.commit();
    }
});
exports.XtcProvider = XtcProvider;
// export { TrrProvider };
// const TrrProvider = DataFormatProvider({
//     label: 'TRR',
//     description: 'TRR',
//     category: CoordinatesFormatCategory,
//     binaryExtensions: ['trr'],
//     parse: (plugin, data) => {
//         const coordinates = plugin.state.data.build()
//             .to(data)
//             .apply(StateTransforms.Model.CoordinatesFromTrr);
//         return coordinates.commit();
//     }
// });
// type TrrProvider = typeof TrrProvider;
// export { NctrajProvider };
// const NctrajProvider = DataFormatProvider({
//     label: 'NCTRAJ',
//     description: 'NCTRAJ',
//     category: CoordinatesFormatCategory,
//     binaryExtensions: ['nc', 'nctraj'],
//     parse: (plugin, data) => {
//         const coordinates = plugin.state.data.build()
//             .to(data)
//             .apply(StateTransforms.Model.CoordinatesFromNctraj);
//         return coordinates.commit();
//     }
// });
// type NctrajProvider = typeof NctrajProvider;
// export type CoordinatesProvider = DcdProvider | XtcProvider | TrrProvider;
exports.BuiltInCoordinatesFormats = [
    // ['dcd', DcdProvider] as const,
    ['xtc', XtcProvider],
    // ['trr', TrrProvider] as const,
    // ['nctraj', NctrajProvider] as const,
];
//# sourceMappingURL=coordinates.js.map