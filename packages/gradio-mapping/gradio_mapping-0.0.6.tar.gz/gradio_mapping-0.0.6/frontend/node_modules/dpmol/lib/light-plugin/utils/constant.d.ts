import { RepresentationType } from '../types';
export declare const residueSubstitutions: {
    [key: string]: string;
};
export declare const ResidueAbbrMap: {
    [key: string]: string;
};
export declare const Acid: Map<string, string[][]>;
export declare const AcidWithProtonation: Map<string, string[][]>;
export declare const AcidHydrophobic: Set<string>;
export declare const AcidPolarUncharged: Set<string>;
export declare const AcidPositivelyCharged: Set<string>;
export declare const AcidNegativelyCharged: Set<string>;
export declare const AcidSpecial: Set<string>;
export declare const AcidOverall: {
    [key: string]: Set<string>;
};
export declare type AcidTypes = 'acid-hydrophobic' | 'acid-polar-uncharged' | 'acid-positively-charged' | 'acid-negatively-charged' | 'acid-special';
export declare const AcidClassName: {
    [key: string]: AcidTypes;
};
export declare const pdbAtomLineFormat: {
    start: number;
    end: number;
    regular: RegExp;
}[];
export declare const pdbAnisouLineFormat: {
    start: number;
    end: number;
    regular: RegExp;
}[];
export declare const pdbConectLineFormat: {
    start: number;
    end: number;
    regular: RegExp;
}[];
export declare const molAtomLineFormat: {
    start: number;
    end: number;
    regular: RegExp;
}[];
export declare const molBondFormatCheck: {
    start: number;
    end: number;
    regular: RegExp;
}[];
export declare const molCountLineFormat: {
    start: number;
    end: number;
    regular: RegExp;
}[];
export declare const ReprLabelToType: {
    [key: string]: RepresentationType;
};
