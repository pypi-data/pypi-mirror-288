import { LightPlugin } from '../index';
import { CellItem } from '../types';
import { BoundaryHelper } from '../../mol-math/geometry/boundary-helper';
import { Sphere3D } from '../../mol-math/geometry/primitives/sphere3d';
declare const DefaultCameraFocusOptions: {
    minRadius: number;
    extraRadius: number;
    durationMs: number;
};
export declare type CameraFocusOptions = typeof DefaultCameraFocusOptions;
export declare class CameraManager {
    plugin: LightPlugin;
    boundaryHelper: BoundaryHelper;
    constructor(plugin: LightPlugin);
    focus(items?: CellItem[]): Promise<void>;
    focusSphere(sphere: Sphere3D, options?: Partial<CameraFocusOptions>): void;
    reset(): void;
    zoomIn(): void;
    zoomOut(): void;
}
export {};
