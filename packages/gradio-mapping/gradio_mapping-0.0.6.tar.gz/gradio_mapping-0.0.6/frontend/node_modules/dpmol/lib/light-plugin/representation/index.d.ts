import { RepresentationContext, ThemeItem } from '../types';
import { Structure } from '../../mol-model/structure/structure/structure';
import { Theme } from '../../mol-theme/theme';
import { Representation } from '../../mol-repr/representation';
import { Loci } from '../../mol-model/structure/structure/element/loci';
import { LightPlugin } from '../index';
export interface MolecularReprProvider {
    create: (structure: Structure, ctx: RepresentationContext, theme?: Theme) => Promise<Representation<any>>;
    update: (repr: Representation<any>, structure: Structure, ctx: RepresentationContext, theme?: Theme) => void;
}
export interface MeasurementReprProvider {
    create: (loci: Loci[], ctx: RepresentationContext, props?: any, theme?: Theme) => Promise<Representation<any>>;
    update: (repr: Representation<any>, loci: Loci[], props?: any, theme?: Theme) => void;
}
export interface OtherReprProvider {
    parse?: (data: any, plugin: LightPlugin) => any;
    createTheme?: (data: any, plugin: LightPlugin, theme?: {
        color?: ThemeItem;
        size?: ThemeItem;
    }) => any;
    create: (data: any, ctx: RepresentationContext, theme?: Theme, params?: any) => Promise<Representation<any>>;
    update: (repr: Representation<any>, data: any, ctx: RepresentationContext, theme?: Theme, params?: any) => void;
}
export declare const MolecularRepresentation: {
    [key: string]: MolecularReprProvider;
};
export declare const MeasurementRepresentation: {
    [key: string]: MeasurementReprProvider;
};
export declare const OtherRepresentation: {
    [key: string]: OtherReprProvider;
};
export declare enum INTERACTION_TYPE {
    LigandReceptor = "ligand-receptor",
    IntraLigand = "intra-ligand",
    IntraReceptor = "intra-receptor",
    All = "all"
}
