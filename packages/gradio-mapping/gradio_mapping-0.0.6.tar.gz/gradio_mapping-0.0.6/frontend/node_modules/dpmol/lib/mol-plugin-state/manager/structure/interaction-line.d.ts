import { Structure, StructureElement } from '../../../mol-model/structure';
import { PluginContext } from '../../../mol-plugin/context';
import { LociLabelTextParams } from '../../../mol-repr/shape/loci/common';
import { LineParams } from '../../../mol-repr/structure/representation/line';
import { StateObject, StateObjectCell, StateTransform, StateTransformer } from '../../../mol-state';
import { Color } from '../../../mol-util/color';
import { ParamDefinition as PD } from '../../../mol-util/param-definition';
import { StatefulPluginComponent } from '../../component';
import { PluginStateObject } from '../../objects';
import { StateTransforms } from '../../transforms';
export declare const InteractionLineGroupTag = "InteractionLine-group";
export declare const InteractionLineOrderLabelTag = "Interaction-line-order-label";
export declare type StructureInteractionLine = StateObjectCell<PluginStateObject.Shape.Representation3D, StateTransform<StateTransformer<PluginStateObject.Molecule.Structure.Selections, PluginStateObject.Shape.Representation3D, any>>>;
declare type StructureMeasurementManagerAddOptions = {
    customText?: string;
    selectionTags?: string | string[];
    reprTags?: string | string[];
    lineParams?: Partial<PD.Values<LineParams>>;
    labelParams?: Partial<PD.Values<LociLabelTextParams>>;
};
export interface StructureGridPocketManagerState {
    interactionLine: StructureInteractionLine[];
}
declare class StructureInteractionLineManager extends StatefulPluginComponent<StructureGridPocketManagerState> {
    private plugin;
    constructor(plugin: PluginContext);
    readonly behaviors: {
        state: import("rxjs").BehaviorSubject<StructureGridPocketManagerState>;
    };
    private stateUpdated;
    private _empty;
    private getTransforms;
    private sync;
    private getGroup;
    findStructure(structure: Structure, needMerge?: boolean): StateObjectCell<StateObject<any, StateObject.Type<any>>, StateTransform<StateTransformer<StateObject<any, StateObject.Type<any>>, StateObject<any, StateObject.Type<any>>, any>>>;
    addInteractionLine(a: StructureElement.Loci, b: StructureElement.Loci, options?: StructureMeasurementManagerAddOptions & {
        visualParams?: Partial<StateTransformer.Params<typeof StateTransforms.Representation.StructureSelectionsInteractionLine3D>>;
    }, params?: {
        textColor: Color;
        textSize: number;
        fontFamily: any;
    }): Promise<string | undefined>;
}
export { StructureInteractionLineManager };
