model iaf_psc_exp_nonlineardendrite_neuron:

    state:
        V_m mV = 0 mV         # membrane potential in mV
        dAP_trace pA = 0 pA             # dAP trace
        active_dendrite boolean = false
        active_dendrite_readout real = 0.
        dAP_counts integer = 0
        ref_counts integer = 0
        I_dend pA = 0 pA
        I_dend$ pA/ms = 0 pA/ms

    equations:
        # exponential shaped postsynaptic current kernel
        kernel I_kernel1 = exp(-1/tau_syn1*t)

        # alpha shaped postsynaptic current kernel
        #kernel I_kernel2 = (e/tau_syn2) * t * exp(-t/tau_syn2)
        I_dend' = I_dend$ - I_dend / tau_syn2
        I_dend$' = -I_dend$ / tau_syn2

        # exponential shaped postsynaptic current kernel
        kernel I_kernel3 = exp(-1/tau_syn3*t)

        # diff. eq. for membrane potential
        #recordable inline I_dend pA = convolve(I_kernel2, I_2) * pA
        inline I_syn pA = convolve(I_kernel1, I_1) * pA + convolve(I_kernel3, I_3) * pA + I_e
        V_m' = -(V_m - E_L)/tau_m + (I_syn + I_dend) / C_m

        # diff. eq. for dAP trace
        dAP_trace' = -dAP_trace / tau_h

    parameters:
        C_m pF = 250 pF                    # capacity of the membrane
        tau_m ms = 20 ms                 # membrane time constant.
        tau_syn1 ms = 10 ms            # time constant of synaptic current, port 1
        tau_syn2 ms = 10 ms            # time constant of synaptic current, port 2
        tau_syn3 ms = 10 ms            # time constant of synaptic current, port 3
        tau_h ms = 400 ms                # time constant of the dAP trace
        V_th mV = 25 mV                    # spike threshold
        V_reset mV = 0 mV                # reset voltage
        I_e        pA = 0pA                    # external current.
        E_L        mV = 0mV                    # resting potential.

        # dendritic action potential
        theta_dAP pA = 60pA                            # current threshold for a dendritic action potential
        I_p pA = 250pA                                     # current clamp value for I_dAP during a dendritic action potential
        tau_dAP ms = 60ms                                # time window over which the dendritic current clamp is active
        dAP_timeout_ticks integer = steps(tau_dAP)

        # refractory parameters
        t_ref ms = 10ms                                                        # refractory period
        ref_timeout_ticks integer = steps(t_ref)

        I_dend_incr pA/ms = pA * exp(1) / tau_syn2


    input:
        I_1 <- spike
        I_2 <- spike
        I_3 <- spike

    output:
        spike

    onReceive(I_2):
        I_dend$ += I_dend_incr

    update:
        # solve ODEs
        integrate_odes()

        # current-threshold, emit a dendritic action potential
        if I_dend > theta_dAP or active_dendrite:
            if dAP_counts == 0:

                if active_dendrite == false:
                    dAP_trace += 1 pA
                    active_dendrite = true
                    active_dendrite_readout = 1.
                    I_dend = I_p
                    dAP_counts = dAP_timeout_ticks
                else:
                    I_dend = 0 pA
                    active_dendrite = false
                    active_dendrite_readout = 0.

            else:
                dAP_counts -= 1
                I_dend = I_p

        # threshold crossing and refractoriness
        if ref_counts == 0:
            if V_m > V_th:
                emit_spike()
                ref_counts = ref_timeout_ticks
                V_m = V_reset
                dAP_counts = 0
                I_dend = 0 pA
                active_dendrite = false
                active_dendrite_readout = 0.
        else:
            ref_counts -= 1
            V_m = V_reset
            active_dendrite = false
            active_dendrite_readout = 0.
            dAP_counts = 0
            I_dend = 0 pA
