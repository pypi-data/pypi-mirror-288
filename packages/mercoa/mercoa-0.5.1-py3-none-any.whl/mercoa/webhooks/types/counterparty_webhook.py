# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from ...entity_types.types.entity_id import EntityId
from ...entity_types.types.entity_user_response import EntityUserResponse


class CounterpartyWebhook(pydantic_v1.BaseModel):
    """
    Examples
    --------
    import datetime

    from mercoa import CounterpartyWebhook, EntityUserResponse

    CounterpartyWebhook(
        event_type="counterparty.added",
        payee_id=["ent_21661ac1-a2a8-4465-a6c0-64474ba8181d"],
        payor_id=["ent_8545a84e-a45f-41bf-bdf1-33b42a55812c"],
        user=EntityUserResponse(
            id="user_ec3aafc8-ea86-408a-a6c1-545497badbbb",
            foreign_id="MY-DB-ID-12345",
            email="john.doe@acme.com",
            name="John Doe",
            roles=["admin", "approver"],
            created_at=datetime.datetime.fromisoformat(
                "2024-01-01 00:00:00+00:00",
            ),
            updated_at=datetime.datetime.fromisoformat(
                "2024-01-01 00:00:00+00:00",
            ),
        ),
    )
    """

    event_type: str = pydantic_v1.Field(alias="eventType")
    payee_id: typing.List[EntityId] = pydantic_v1.Field(alias="payeeId")
    payor_id: typing.List[EntityId] = pydantic_v1.Field(alias="payorId")
    user: typing.Optional[EntityUserResponse] = pydantic_v1.Field(default=None)
    """
    User who initiated the change.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
