# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.datetime_utils import serialize_datetime
from ...core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1


class CounterpartyCustomizationAccount(pydantic_v1.BaseModel):
    """
    Examples
    --------
    from mercoa import CounterpartyCustomizationAccount

    CounterpartyCustomizationAccount(
        account_id="85866843",
        postal_code="94105",
        name_on_account="John Doe",
    )
    """

    account_id: str = pydantic_v1.Field(alias="accountId")
    """
    The ID the counterparty has assigned to this account.
    """

    postal_code: typing.Optional[str] = pydantic_v1.Field(alias="postalCode", default=None)
    """
    The postal code the counterparty has assigned to this account.
    """

    name_on_account: typing.Optional[str] = pydantic_v1.Field(alias="nameOnAccount", default=None)
    """
    The name on the account the counterparty has assigned to this account.
    """

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        populate_by_name = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
