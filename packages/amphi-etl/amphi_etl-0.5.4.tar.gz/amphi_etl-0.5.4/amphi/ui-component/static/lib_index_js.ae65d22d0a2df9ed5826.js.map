{"version":3,"file":"lib_index_js.ae65d22d0a2df9ed5826.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACgH;AACjB;AACa;AAC5G,8BAA8B,mFAA2B,CAAC,4FAAqC;AAC/F,0BAA0B,uFAAiC;AAC3D;AACA;AACA;AACA;AACA;AACA,OAAO,oFAAoF,gUAAgU,qBAAqB;AAChb;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;;ACbvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8C;AAC4C;AACpC;AACtD;AACA;AACA;AACA;AACA;AACA,0CAA0C,gEAAW;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,mDAAM;AACrC;AACA;AACA,yBAAyB,2EAAsB;AAC/C;AACA;AACA,SAAS;AACT,0CAA0C,wDAAW;AACrD,oCAAoC,+DAAU;AAC9C;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,wBAAwB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uBAAuB,wDAAM;AAC7B;AACA;AACA,kBAAkB,wDAAM,iBAAiB,wDAAM,YAAY,iBAAiB;AAC5E,KAAK;AACL;AACA,mCAAmC,uBAAuB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjLoD;AACgB;AACb;AACS;AACQ;AACC;AACjB;AACA;AACI;AACE;AACR;AAC/C,yBAAyB,8DAAO;AACvC;AACA,YAAY,+DAAgB;AAC5B,CAAC;AACM,uBAAuB,8DAAO;AACrC;AACA,YAAY,+DAAgB;AAC5B,CAAC;AACM,sBAAsB,8DAAO;AACpC;AACA,YAAY,mDAAe;AAC3B,CAAC;AACM,yBAAyB,8DAAO;AACvC;AACA,YAAY,yDAAkB;AAC9B,CAAC;AACM,iCAAiC,8DAAO;AAC/C;AACA,YAAY,yDAA0B;AACtC,CAAC;AACM,8BAA8B,8DAAO;AAC5C;AACA,YAAY,6DAAuB;AACnC,CAAC;AACM,qBAAqB,8DAAO;AACnC;AACA,YAAY,qDAAc;AAC1B,CAAC;AACM,qBAAqB,8DAAO;AACnC;AACA,YAAY,qDAAc;AAC1B,CAAC;AACM,uBAAuB,8DAAO;AACrC;AACA,YAAY,uDAAgB;AAC5B,CAAC;AACM,wBAAwB,8DAAO;AACtC;AACA,YAAY,wDAAiB;AAC7B,CAAC;AACM,oBAAoB,8DAAO;AAClC;AACA,YAAY,oDAAa;AACzB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDmD;AACC;AACJ;AACA;AACK;AACiB;AAC3B;AACH;AACF;AACc;AACK;AAC9B;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAe,8DAAS;AACxB;AACA;AACA;AACA;AACA,uBAAuB,mDAAM;AAC7B,YAAY,iDAAY;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gEAAW,EAAE,8DAAS,EAAE,2DAAS;AAChD,eAAe,iEAAe;AAC9B,cAAc,2DAAS;AACvB;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA,0BAA0B,qDAAa;AACvC;AACA;AACA;AACA;AACA;AACA,uCAAuC,aAAa;AACpD;AACA,iDAAiD,SAAS;AAC1D;AACA,qCAAqC,gDAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,sCAAsC,+DAAQ;AAC9C;AACA,iCAAiC,gEAAc,GAAG,mBAAmB;AACrE;AACA,wCAAwC,0DAAO;AAC/C;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,0CAA0C,0DAAO;AACjD,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,6DAA6D,KAAK;AAClE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;AAC3B;AACA,iEAAe,OAAO,EAAC;AACC;;;;;;;;;;;;;;;;;;;;;;;ACzIqF;AACT;AAC3D;AACf;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,4BAA4B,+DAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACO,uBAAuB,0DAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,qDAAc;AACvC;AACA,sCAAsC,qDAAc;AACpD;AACA,+BAA+B,0DAAmB,eAAe,+BAA+B;AAChG;AACA;AACA;AACA;AACA,iBAAiB;AACjB,uBAAuB,yDAAkB;AACzC;AACA;AACA;AACA;AACA,SAAS;AACT,eAAe,yDAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uDAAI;AACZ,YAAY,qDAAc;AAC1B;AACA;AACA,4DAA4D,gDAAY;AACxE;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAAmB,UAAU,+BAA+B;AAC5E,YAAY,0DAAmB,UAAU,kCAAkC;AAC3E,gBAAgB,0DAAmB,SAAS,kFAAkF;AAC9H,gBAAgB,0DAAmB,UAAU,mEAAmE;AAChH,oBAAoB,0DAAmB,UAAU,yBAAyB;AAC1E,wBAAwB,0DAAmB,SAAS,0DAA0D;AAC9G,wBAAwB,0DAAmB,SAAS,mBAAmB;AACvE,4BAA4B,0DAAmB;AAC/C,gCAAgC,0DAAmB,WAAW,0MAA0M;AACxQ,oCAAoC,0DAAmB,CAAC,gDAAY;AACpE,oCAAoC,0DAAmB,WAAW,kCAAkC;AACpG,4BAA4B,0DAAmB;AAC/C,gCAAgC,0DAAmB,QAAQ,kOAAkO;AAC7R,oCAAoC,0DAAmB,CAAC,4CAAQ;AAChE,oCAAoC,0DAAmB,WAAW,kCAAkC;AACpG,4BAA4B,0DAAmB;AAC/C,gCAAgC,0DAAmB,QAAQ,uQAAuQ;AAClU,oCAAoC,0DAAmB,CAAC,2CAAO;AAC/D,oCAAoC,0DAAmB,WAAW,kCAAkC;AACpG,oBAAoB,0DAAmB,UAAU,uCAAuC;AACxF,wBAAwB,0DAAmB,SAAS,0DAA0D;AAC9G,wBAAwB,0DAAmB,UAAU,sFAAsF;AAC3I,4BAA4B,0DAAmB,UAAU,qCAAqC;AAC9F,gCAAgC,0DAAmB,WAAW,4BAA4B;AAC1F,oCAAoC,0DAAmB,CAAC,4CAAQ;AAChE,gCAAgC,0DAAmB,UAAU,qBAAqB;AAClF,oCAAoC,0DAAmB,SAAS,6CAA6C;AAC7G,oCAAoC,0DAAmB,QAAQ,yCAAyC;AACxG,wBAAwB,0DAAmB,UAAU,sFAAsF;AAC3I,4BAA4B,0DAAmB,UAAU,qCAAqC;AAC9F,gCAAgC,0DAAmB,WAAW,4BAA4B;AAC1F,oCAAoC,0DAAmB,CAAC,qDAAiB;AACzE,gCAAgC,0DAAmB,UAAU,qBAAqB;AAClF,oCAAoC,0DAAmB,SAAS,6CAA6C;AAC7G,oCAAoC,0DAAmB,QAAQ,yCAAyC;AACxG;AACA,wCAAwC,0DAAmB,QAAQ,wHAAwH;AAC3L,wBAAwB,0DAAmB,UAAU,sFAAsF;AAC3I,4BAA4B,0DAAmB,UAAU,qCAAqC;AAC9F,gCAAgC,0DAAmB,WAAW,4BAA4B;AAC1F,oCAAoC,0DAAmB,CAAC,+CAAW;AACnE,gCAAgC,0DAAmB,UAAU,qBAAqB;AAClF,oCAAoC,0DAAmB,SAAS,6CAA6C;AAC7G,oCAAoC,0DAAmB,QAAQ,yCAAyC;AACxG;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvKA,MAAqG;AACrG,MAA2F;AAC3F,MAAkG;AAClG,MAAqH;AACrH,MAA8G;AAC9G,MAA8G;AAC9G,MAAyG;AACzG;AACA;;AAEA;;AAEA,4BAA4B,qGAAmB;AAC/C,wBAAwB,kHAAa;;AAErC,uBAAuB,uGAAa;AACpC;AACA,iBAAiB,+FAAM;AACvB,6BAA6B,sGAAkB;;AAE/C,aAAa,0GAAG,CAAC,sFAAO;;;;AAImD;AAC3E,OAAO,iEAAe,sFAAO,IAAI,sFAAO,UAAU,sFAAO,mBAAmB,EAAC","sources":["webpack://@amphi/ui-component/./style/index.css","webpack://@amphi/ui-component/./lib/BrowseFileDialog.js","webpack://@amphi/ui-component/./lib/icons.js","webpack://@amphi/ui-component/./lib/index.js","webpack://@amphi/ui-component/./lib/launcher.js","webpack://@amphi/ui-component/./style/index.css?f019"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../node_modules/css-loader/dist/cjs.js!./output.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/*-----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./style/index.css\"],\"names\":[],\"mappings\":\"AAAA;;;8EAG8E\",\"sourcesContent\":[\"/*-----------------------------------------------------------------------------\\n| Copyright (c) Jupyter Development Team.\\n| Distributed under the terms of the Modified BSD License.\\n|----------------------------------------------------------------------------*/\\n\\n@import url('output.css');\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","/*\n * Copyright 2018-2023 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Dialog } from '@jupyterlab/apputils';\nimport { BreadCrumbs, DirListing, FilterFileBrowserModel } from '@jupyterlab/filebrowser';\nimport { Widget, PanelLayout } from '@lumino/widgets';\nconst BROWSE_FILE_CLASS = 'elyra-browseFileDialog';\nconst BROWSE_FILE_OPEN_CLASS = 'elyra-browseFileDialog-open';\n/**\n * Breadcrumbs widget for browse file dialog body.\n */\nclass BrowseFileDialogBreadcrumbs extends BreadCrumbs {\n    constructor(options) {\n        super(options);\n        this.model = options.model;\n        this.rootPath = options.rootPath;\n    }\n    onUpdateRequest(msg) {\n        super.onUpdateRequest(msg);\n        const contents = this.model.manager.services.contents;\n        const localPath = contents.localPath(this.model.path);\n        // if 'rootPath' is defined prevent navigating to it's parent/grandparent directories\n        if (localPath && this.rootPath && localPath.indexOf(this.rootPath) === 0) {\n            const breadcrumbs = document.querySelectorAll('.elyra-browseFileDialog .jp-BreadCrumbs > span[title]');\n            breadcrumbs.forEach((crumb) => {\n                var _a;\n                if (crumb.title.indexOf((_a = this.rootPath) !== null && _a !== void 0 ? _a : '') === 0) {\n                    crumb.className = crumb.className\n                        .replace('elyra-BreadCrumbs-disabled', '')\n                        .trim();\n                }\n                else if (crumb.className.indexOf('elyra-BreadCrumbs-disabled') === -1) {\n                    crumb.className += ' elyra-BreadCrumbs-disabled';\n                }\n            });\n        }\n    }\n}\n/**\n * Browse file widget for dialog body\n */\nclass BrowseFileDialog extends Widget {\n    constructor(props) {\n        super(props);\n        this.model = new FilterFileBrowserModel({\n            manager: props.manager,\n            filter: props.filter\n        });\n        const layout = (this.layout = new PanelLayout());\n        this.directoryListing = new DirListing({\n            model: this.model\n        });\n        this.acceptFileOnDblClick = props.acceptFileOnDblClick;\n        this.multiselect = props.multiselect;\n        this.includeDir = props.includeDir;\n        this.dirListingHandleEvent = this.directoryListing.handleEvent;\n        this.directoryListing.handleEvent = (event) => {\n            this.handleEvent(event);\n        };\n        this.breadCrumbs = new BrowseFileDialogBreadcrumbs({\n            model: this.model,\n            rootPath: props.rootPath\n        });\n        layout.addWidget(this.breadCrumbs);\n        layout.addWidget(this.directoryListing);\n    }\n    static async init(options) {\n        const browseFileDialog = new BrowseFileDialog(options);\n        if (options.startPath) {\n            if (!options.rootPath ||\n                options.startPath.indexOf(options.rootPath) === 0) {\n                await browseFileDialog.model.cd(options.startPath);\n            }\n        }\n        else if (options.rootPath) {\n            await browseFileDialog.model.cd(options.rootPath);\n        }\n        return browseFileDialog;\n    }\n    getValue() {\n        const selected = [];\n        let item = null;\n        for (const item of this.directoryListing.selectedItems()) {\n            if (this.includeDir || item.type !== 'directory') {\n                selected.push(item);\n            }\n        }\n        return selected;\n    }\n    handleEvent(event) {\n        let modifierKey = false;\n        if (event instanceof MouseEvent) {\n            modifierKey =\n                event.shiftKey || event.metaKey;\n        }\n        else if (event instanceof KeyboardEvent) {\n            modifierKey =\n                event.shiftKey || event.metaKey;\n        }\n        switch (event.type) {\n            case 'keydown':\n            case 'keyup':\n            case 'mousedown':\n            case 'mouseup':\n            case 'click':\n                if (this.multiselect || !modifierKey) {\n                    this.dirListingHandleEvent.call(this.directoryListing, event);\n                }\n                break;\n            case 'dblclick': {\n                const clickedItem = this.directoryListing.modelForClick(event);\n                if ((clickedItem === null || clickedItem === void 0 ? void 0 : clickedItem.type) === 'directory') {\n                    this.dirListingHandleEvent.call(this.directoryListing, event);\n                }\n                else {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    if (this.acceptFileOnDblClick) {\n                        const okButton = document.querySelector(`.${BROWSE_FILE_OPEN_CLASS} .jp-mod-accept`);\n                        if (okButton) {\n                            okButton.click();\n                        }\n                    }\n                }\n                break;\n            }\n            default:\n                this.dirListingHandleEvent.call(this.directoryListing, event);\n                break;\n        }\n    }\n}\nexport const showBrowseFileDialog = async (manager, options) => {\n    const browseFileDialogBody = await BrowseFileDialog.init({\n        manager: manager,\n        filter: options.filter,\n        multiselect: options.multiselect,\n        includeDir: options.includeDir,\n        rootPath: options.rootPath,\n        startPath: options.startPath,\n        acceptFileOnDblClick: Object.prototype.hasOwnProperty.call(options, 'acceptFileOnDblClick')\n            ? options.acceptFileOnDblClick\n            : true\n    });\n    const dialog = new Dialog({\n        title: 'Select a file',\n        body: browseFileDialogBody,\n        buttons: [Dialog.cancelButton(), Dialog.okButton({ label: 'Select' })]\n    });\n    dialog.addClass(BROWSE_FILE_CLASS);\n    document.body.className += ` ${BROWSE_FILE_OPEN_CLASS}`;\n    return dialog.launch().then((result) => {\n        document.body.className = document.body.className\n            .replace(BROWSE_FILE_OPEN_CLASS, '')\n            .trim();\n        if (options.rootPath && result.button.accept && result.value.length) {\n            const relativeToPath = options.rootPath.endsWith('/')\n                ? options.rootPath\n                : options.rootPath + '/';\n            result.value.forEach((val) => {\n                val.path = val.path.replace(relativeToPath, '');\n            });\n        }\n        return result;\n    });\n};\n","import { LabIcon } from '@jupyterlab/ui-components';\nimport squareIconSvgStr from '../style/icons/amphi-square-logo.svg';\nimport amphiLogoSvgStr from '../style/icons/amphi.svg';\nimport pipelineIconSvgStr from '../style/icons/pipeline-16.svg';\nimport pipelineNegativeIconSvgStr from '../style/icons/pipeline-16.svg';\nimport shieldCheckedIconSvgStr from '../style/icons/shield-check-24.svg';\nimport codeIconSvgStr from '../style/icons/code-16.svg';\nimport docsIconSvgStr from '../style/icons/docs-16.svg';\nimport uploadIconSvgStr from '../style/icons/upload-16.svg';\nimport networkIconSvgStr from '../style/icons/network-24.svg';\nimport bugIconSvgStr from '../style/icons/bug-16.svg';\nexport const asteriskIcon = new LabIcon({\n    name: 'amphi:asterisk-icon',\n    svgstr: squareIconSvgStr\n});\nexport const squareIcon = new LabIcon({\n    name: 'amphi:square-icon',\n    svgstr: squareIconSvgStr\n});\nexport const amphiLogo = new LabIcon({\n    name: 'amphi:logo',\n    svgstr: amphiLogoSvgStr\n});\nexport const pipelineIcon = new LabIcon({\n    name: 'amphi:pipeline-icon',\n    svgstr: pipelineIconSvgStr\n});\nexport const pipelineNegativeIcon = new LabIcon({\n    name: 'amphi:pipelinenegative-icon',\n    svgstr: pipelineNegativeIconSvgStr\n});\nexport const shieldCheckedIcon = new LabIcon({\n    name: 'amphi:shieldchecked-icon',\n    svgstr: shieldCheckedIconSvgStr\n});\nexport const codeIcon = new LabIcon({\n    name: 'amphi:code-icon',\n    svgstr: codeIconSvgStr\n});\nexport const docsIcon = new LabIcon({\n    name: 'amphi:docs-icon',\n    svgstr: docsIconSvgStr\n});\nexport const uploadIcon = new LabIcon({\n    name: 'amphi:upload-icon',\n    svgstr: uploadIconSvgStr\n});\nexport const networkIcon = new LabIcon({\n    name: 'amphi:network-icon',\n    svgstr: networkIconSvgStr\n});\nexport const bugIcon = new LabIcon({\n    name: 'amphi:bug-icon',\n    svgstr: bugIconSvgStr\n});\n","import { ILabShell } from '@jupyterlab/application';\nimport { Launcher, LauncherModel } from './launcher';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport { ILauncher } from '@jupyterlab/launcher';\nimport { ITranslator } from '@jupyterlab/translation';\nimport { ICommandPalette, MainAreaWidget } from '@jupyterlab/apputils';\nimport { toArray } from '@lumino/algorithm';\nimport { Widget } from '@lumino/widgets';\nimport { asteriskIcon } from './icons';\nimport { homeIcon } from '@jupyterlab/ui-components';\nexport { showBrowseFileDialog } from './BrowseFileDialog';\nimport '../style/index.css';\n/**\n * The main application icon.\n */\nconst logo = {\n    id: '@amphi/ui-component:logo',\n    optional: [ILabShell],\n    autoStart: true,\n    activate: (app, labShell) => {\n        let logo = null;\n        if (labShell) {\n            logo = new Widget();\n            asteriskIcon.element({\n                container: logo.node,\n                elementPosition: 'center',\n                margin: '2px 2px 2px 16px',\n                height: '16px',\n                width: '16px'\n            });\n        }\n        if (logo) {\n            logo.id = 'jp-MainLogo';\n            app.shell.add(logo, 'top', { rank: 0 });\n        }\n    }\n};\n/**\n * The command IDs used by the launcher plugin.\n */\nconst CommandIDs = {\n    create: 'launcher:create'\n};\n/**\n * The main launcher.\n */\nconst launcher = {\n    id: '@amphi/ui-component:launcher',\n    autoStart: true,\n    requires: [ITranslator, ILabShell, IMainMenu],\n    optional: [ICommandPalette],\n    provides: ILauncher,\n    activate: (app, translator, labShell, mainMenu, manager, palette) => {\n        console.log('Amphi - custom Launcher is activated!');\n        /** */\n        // Use custom Amphi launcher\n        const { commands, shell } = app;\n        const trans = translator.load('jupyterlab');\n        const model = new LauncherModel();\n        console.log('Amphi - theme before adding launcher:create');\n        commands.addCommand(CommandIDs.create, {\n            label: trans.__('New'),\n            execute: (args) => {\n                const cwd = args['cwd'] ? String(args['cwd']) : '';\n                const id = `launcher-${Private.id++}`;\n                const callback = (item) => {\n                    labShell.add(item, 'main', { ref: id });\n                };\n                const launcher = new Launcher({\n                    model,\n                    cwd,\n                    callback,\n                    commands,\n                    translator\n                }, commands);\n                launcher.model = model;\n                launcher.title.icon = homeIcon;\n                launcher.title.label = trans.__('Homepage');\n                const main = new MainAreaWidget({ content: launcher });\n                // If there are any other widgets open, remove the launcher close icon.\n                main.title.closable = !!toArray(labShell.widgets('main')).length;\n                main.id = id;\n                shell.add(main, 'main', {\n                    activate: args['activate'],\n                    ref: args['ref']\n                });\n                labShell.layoutModified.connect(() => {\n                    // If there is only a launcher open, remove the close icon.\n                    main.title.closable = toArray(labShell.widgets('main')).length > 1;\n                }, main);\n                return main;\n            }\n        });\n        if (palette) {\n            palette.addItem({\n                command: CommandIDs.create,\n                category: trans.__('Homepage')\n            });\n        }\n        /**\n         * This function seems to set up and handle the behavior of an \"add\" button within a JupyterLab-like environment.\n         * When the button is clicked (or an \"add\" action is requested), the function determines\n         * which tab or panel the action was requested from and then executes a command to handle the request,\n         * either by creating a main launcher or by performing another default \"create\" action.\n         */\n        if (labShell) {\n            labShell.addButtonEnabled = true;\n            labShell.addRequested.connect((sender, arg) => {\n                var _a;\n                // Get the ref for the current tab of the tabbar which the add button was clicked\n                const ref = ((_a = arg.currentTitle) === null || _a === void 0 ? void 0 : _a.owner.id) ||\n                    arg.titles[arg.titles.length - 1].owner.id;\n                if (commands.hasCommand('filebrowser:create-main-launcher')) {\n                    // If a file browser is defined connect the launcher to it\n                    return commands.execute('filebrowser:create-main-launcher', {\n                        ref\n                    });\n                }\n                return commands.execute(CommandIDs.create, { ref });\n            });\n        }\n        return model;\n    }\n};\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * The incrementing id used for launcher widgets.\n     */\n    // eslint-disable-next-line\n    Private.id = 0;\n})(Private || (Private = {}));\nconst plugins = [logo, launcher];\nexport default plugins;\nexport * from './icons';\n","import { Launcher as JupyterlabLauncher, LauncherModel as JupyterLauncherModel } from '@jupyterlab/launcher';\nimport { pipelineIcon, shieldCheckedIcon, codeIcon, docsIcon, networkIcon, bugIcon } from './icons';\nimport { each } from '@lumino/algorithm';\nimport React from 'react';\n// Largely inspired by Elyra launcher https://github.com/elyra-ai/elyra\n/**\n * The known categories of launcher items and their default ordering.\n */\nconst AMPHI_CATEGORY = 'Data Integration';\nconst CommandIDs = {\n    newPipeline: 'pipeline-editor:create-new',\n    newFile: 'fileeditor:create-new',\n    createNewPythonEditor: 'script-editor:create-new-python-editor',\n    createNewREditor: 'script-editor:create-new-r-editor'\n};\n// LauncherModel deals with the underlying data and logic of the launcher (what items are available, their order, etc.).\nexport class LauncherModel extends JupyterLauncherModel {\n    /**\n     * Return an iterator of launcher items, but remove unnecessary items.\n     */\n    items() {\n        const items = [];\n        let pyEditorInstalled = false;\n        let rEditorInstalled = false;\n        this.itemsList.forEach(item => {\n            if (item.command === CommandIDs.createNewPythonEditor) {\n                pyEditorInstalled = true;\n            }\n            else if (item.command === CommandIDs.createNewREditor) {\n                rEditorInstalled = true;\n            }\n        });\n        if (!pyEditorInstalled && !rEditorInstalled) {\n            return this.itemsList[Symbol.iterator]();\n        }\n        // Dont add tiles for new py and r files if their script editor is installed\n        this.itemsList.forEach(item => {\n            var _a, _b;\n            if (!(item.command === CommandIDs.newFile &&\n                ((pyEditorInstalled && ((_a = item.args) === null || _a === void 0 ? void 0 : _a.fileExt) === 'py') ||\n                    (rEditorInstalled && ((_b = item.args) === null || _b === void 0 ? void 0 : _b.fileExt) === 'r')))) {\n                items.push(item);\n            }\n        });\n        return items[Symbol.iterator]();\n    }\n}\n// Launcher deals with the visual representation and user interactions of the launcher\n// (how items are displayed, icons, categories, etc.).\nexport class Launcher extends JupyterlabLauncher {\n    /**\n     * Construct a new launcher widget.\n     */\n    constructor(options, commands) {\n        super(options);\n        this.myCommands = commands;\n        // this._translator = this.translator.load('jupyterlab');\n    }\n    /**\n    The replaceCategoryIcon function takes a category element and a new icon.\n    It then goes through the children of the category to find the section header.\n    Within the section header, it identifies the icon (by checking if it's not the section title)\n    and replaces it with the new icon. The function then returns a cloned version of the original\n    category with the icon replaced.\n     */\n    replaceCategoryIcon(category, icon) {\n        const children = React.Children.map(category.props.children, child => {\n            if (child.props.className === 'jp-Launcher-sectionHeader') {\n                const grandchildren = React.Children.map(child.props.children, grandchild => {\n                    if (grandchild.props.className !== 'jp-Launcher-sectionTitle') {\n                        return React.createElement(icon.react, { stylesheet: \"launcherSection\" });\n                    }\n                    else {\n                        return grandchild;\n                    }\n                });\n                return React.cloneElement(child, child.props, grandchildren);\n            }\n            else {\n                return child;\n            }\n        });\n        return React.cloneElement(category, category.props, children);\n    }\n    /**\n     * Render the launcher to virtual DOM nodes.\n     */\n    render() {\n        // Bail if there is no model.\n        if (!this.model) {\n            return null;\n        }\n        // get the rendering from JupyterLab Launcher\n        // and resort the categories\n        const launcherBody = super.render();\n        const launcherContent = launcherBody === null || launcherBody === void 0 ? void 0 : launcherBody.props.children;\n        const launcherCategories = launcherContent.props.children;\n        const categories = [];\n        const knownCategories = [\n            AMPHI_CATEGORY,\n            //this._translator.__('Console'),\n            // this._translator.__('Other'),\n            //this._translator.__('Notebook')\n        ];\n        // Assemble the final ordered list of categories\n        // based on knownCategories.\n        each(knownCategories, (category, index) => {\n            React.Children.forEach(launcherCategories, cat => {\n                if (cat.key === category) {\n                    if (cat.key === AMPHI_CATEGORY) {\n                        cat = this.replaceCategoryIcon(cat, pipelineIcon);\n                    }\n                    categories.push(cat);\n                }\n            });\n        });\n        const handleNewPipelineClick = () => {\n            this.myCommands.execute('pipeline-editor:create-new');\n        };\n        const handleUploadFiles = () => {\n            this.myCommands.execute('ui-components:file-upload');\n        };\n        // Wrap the sections in body and content divs.\n        return (React.createElement(\"div\", { className: \"jp-Launcher-body\" },\n            React.createElement(\"div\", { className: \"jp-Launcher-content\" },\n                React.createElement(\"h1\", { className: \"mt-8 text-2xl font-bold text-gray-900 sm:text-3xl flex items-center\" }, \"Amphi ETL\"),\n                React.createElement(\"div\", { className: \"mt-12 grid grid-cols-1 gap-4 lg:grid-cols-3 lg:gap-8\" },\n                    React.createElement(\"div\", { className: \"rounded-lg\" },\n                        React.createElement(\"h1\", { className: \"text-xl font-bold text-gray-900 sm:text-3xl\" }, \"Start\"),\n                        React.createElement(\"ul\", { className: \"mt-4\" },\n                            React.createElement(\"li\", null,\n                                React.createElement(\"span\", { onClick: handleNewPipelineClick, className: \"flex items-center gap-2 border-s-[3px] border-transparent px-4 py-3 text-primary hover:border-gray-100 hover:bg-gray-50 hover:text-grey-700 cursor-pointer\" },\n                                    React.createElement(pipelineIcon.react, null),\n                                    React.createElement(\"span\", { className: \"text-sm font-medium\" }, \"New pipeline\"))),\n                            React.createElement(\"li\", null,\n                                React.createElement(\"a\", { href: \"https://docs.amphi.ai/category/getting-started\", className: \"flex items-center gap-2 border-s-[3px] border-transparent px-4 py-3 text-grey-500 hover:border-gray-100 hover:bg-gray-50 hover:text-grey-700 cursor-pointer\" },\n                                    React.createElement(docsIcon.react, null),\n                                    React.createElement(\"span\", { className: \"text-sm font-medium\" }, \"Getting started\"))),\n                            React.createElement(\"li\", null,\n                                React.createElement(\"a\", { href: \"https://join.slack.com/t/amphi-ai/shared_invite/zt-2ci2ptvoy-FENw8AW4ISDXUmz8wcd3bw\", className: \"flex items-center gap-2 border-s-[3px] border-transparent px-4 py-3 text-grey-500 hover:border-gray-100 hover:bg-gray-50 hover:text-grey-700 cursor-pointer\" },\n                                    React.createElement(bugIcon.react, null),\n                                    React.createElement(\"span\", { className: \"text-sm font-medium\" }, \"Join the community\"))))),\n                    React.createElement(\"div\", { className: \"rounded-sm lg:col-span-2\" },\n                        React.createElement(\"h1\", { className: \"text-xl font-bold text-gray-900 sm:text-3xl\" }, \"Fundamentals\"),\n                        React.createElement(\"div\", { role: \"alert\", className: \"mt-4 rounded-sm mt-3 border border-gray-100 bg-white p-4\" },\n                            React.createElement(\"div\", { className: \"flex items-start gap-4\" },\n                                React.createElement(\"span\", { className: \"text-grey-600\" },\n                                    React.createElement(codeIcon.react, null)),\n                                React.createElement(\"div\", { className: \"flex-1\" },\n                                    React.createElement(\"h2\", { className: \"block font-bold text-black-900\" }, \"Python generation\"),\n                                    React.createElement(\"p\", { className: \"mt-1 text-sm text-gray-700\" }, \"Develop data pipelines and generate native Python code you own. Run the pipelines anywhere you'd like.\")))),\n                        React.createElement(\"div\", { role: \"alert\", className: \"mt-4 rounded-xl mt-3 border border-gray-100 bg-white p-4\" },\n                            React.createElement(\"div\", { className: \"flex items-start gap-4\" },\n                                React.createElement(\"span\", { className: \"text-grey-600\" },\n                                    React.createElement(shieldCheckedIcon.react, null)),\n                                React.createElement(\"div\", { className: \"flex-1\" },\n                                    React.createElement(\"h2\", { className: \"block font-bold text-black-900\" }, \"Open-source and private\"),\n                                    React.createElement(\"p\", { className: \"mt-1 text-sm text-gray-700\" },\n                                        \"Amphi ETL is open-source and is self-hosted. All data is stored locally, and isn't sent to or stored on Amphi's servers.\",\n                                        React.createElement(\"a\", { href: \"https://docs.amphi.ai/getting-started/core-concepts#file-browser\", target: \"_blank\", rel: \"noopener noreferrer\" }, \"Learn more\"))))),\n                        React.createElement(\"div\", { role: \"alert\", className: \"mt-4 rounded-sm mt-3 border border-gray-100 bg-white p-4\" },\n                            React.createElement(\"div\", { className: \"flex items-start gap-4\" },\n                                React.createElement(\"span\", { className: \"text-grey-600\" },\n                                    React.createElement(networkIcon.react, null)),\n                                React.createElement(\"div\", { className: \"flex-1\" },\n                                    React.createElement(\"h2\", { className: \"block font-bold text-black-900\" }, \"Community-driven & extensible\"),\n                                    React.createElement(\"p\", { className: \"mt-1 text-sm text-gray-700\" }, \"Pipelines can be shared as files with anyone. Coming soon the platform will be extensible with shareable connectors and components.\")))))))));\n    }\n}\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}