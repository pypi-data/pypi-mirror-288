[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "invoke-toolkit"
dynamic = ["version"]
description = "A set of extended APIs for PyInvoke for composable scripts, plugins and richer output"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Nahuel DefossÃ©", email = "D3f0@users.noreply.github.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: Implementation :: CPython",
  "Operating System :: POSIX",
  "Operating System :: Unix",
  "Operating System :: MacOS :: MacOS X",
  "Topic :: Software Development",
  "Topic :: Software Development :: Build Tools",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Software Distribution",
  "Topic :: System :: Systems Administration",
]

dependencies = [
  "invoke",
  "rich"
]

[project.urls]
Documentation = "https://github.com/D3f0/invoke-toolkit#readme"
Issues = "https://github.com/D3f0/invoke-toolkit/issues"
Source = "https://github.com/D3f0/invoke-toolkit"

[tool.hatch.version]
path = "src/invoke_toolkit/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/invoke_toolkit tests}"

[tool.coverage.run]
source_pkgs = ["invoke_toolkit", "tests"]
branch = true
parallel = true
omit = [
  "src/invoke_toolkit/__about__.py",
]

[tool.coverage.paths]
invoke_toolkit = ["src/invoke_toolkit", "*/invoke-toolkit/src/invoke_toolkit"]
tests = ["tests", "*/invoke-toolkit/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]


[tool.hatch.envs.dev]
dependencies = [
  # Invoke's original set of tasks
  "pytest",
  "pytest-virtualenv",
  "coverage",
  "pdbpp",
]
[tool.hatch.envs.dev.scripts]
run-coverage = "pytest --cov-config=pyproject.toml --cov=pkg --cov=tests"
run = "run-coverage --no-cov"
test = "pytest -v {}"
testdbg = "pytest -v --pdb {}"

[tool.hatch.envs.docs]
dependencies = [
  "sphinx"
]


[tool.ruff.lint.per-file-ignores]
"*tasks*" = ["ARG001"]
