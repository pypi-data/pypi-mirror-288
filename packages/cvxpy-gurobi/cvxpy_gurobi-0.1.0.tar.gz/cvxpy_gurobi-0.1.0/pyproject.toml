[build-system]
build-backend = "hatchling.build"
requires = [
  "hatchling",
  "hatch-vcs",
]

[project]
name = "cvxpy-gurobi"
dynamic = ["version"]
description = "Translate CVXPY problems into gurobipy models"
readme = "README.md"
keywords = [
  "cvxpy",
  "gurobi",
  "gurobipy",
  "optimization",
]
license = "Apache-2.0"
authors = [
  { name = "Jonathan Berthias", email = "jvberthias@gmail.com" },
]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Scientific/Engineering :: Mathematics",
]
dependencies = [
  # "cvxpy" must be available but we don't list it
  # as a dependency because cvxpy-base is sufficient
  "gurobipy",
  "numpy",
  "scipy",
]
[project.urls]
Documentation = "https://github.com/jonathanberthias/cvxpy-gurobi#readme"
Issues = "https://github.com/jonathanberthias/cvxpy-gurobi/issues"
Source = "https://github.com/jonathanberthias/cvxpy-gurobi"

[tool.hatch]
version.source = "vcs"
version.raw-options = { local_scheme = "no-local-version" }
build.hooks.vcs.version-file = "src/cvxpy_gurobi/_version.py"

[tool.hatch.envs.default]
dependencies = [
  "cvxpy-base==1.5.2",
  "gurobipy==11.0.0",
  "numpy<2",  # as of cvxpy 1.5.2, the gurobi interface is not compatible with numpy 2
  "pytest",
  "pytest-insta",
]
[tool.hatch.envs.default.scripts]
update-snapshots = "pytest --insta update {args:tests}"
versions = [
  "python --version",
  "pip freeze | grep gurobipy",
  "pip freeze | grep cvxpy-base",
]

[tool.hatch.envs.hatch-test]
dependencies = [
  "cvxpy-base=={matrix:cvxpy}.*",
  "gurobipy=={matrix:gurobipy}.*",
  "numpy<2",  # as of cvxpy 1.5.2, the gurobi interface is not compatible with numpy 2
  "scipy{matrix:scipy:}",
  "coverage[toml]",
  "pytest",
  "pytest-insta",
]
matrix-name-format = "{variable}{value}"

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.12"]
gurobipy = ["11"]
cvxpy = ["1.5", "1.4"]

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.11"]
gurobipy = ["11"]
cvxpy = ["1.3"]
scipy = ["<1.14"]  # cvxpy 1.3 uses scipy features (.A) removed in 1.14

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.10", "3.9", "3.8"]
gurobipy = ["11"]
cvxpy = ["1.5"]

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy",
]
[tool.hatch.envs.types.scripts]
check = "mypy {args:src tests}"

[tool.mypy]
strict = true
untyped_calls_exclude = ["cvxpy"]
[[tool.mypy.overrides]]
module = "scipy.*"
ignore_missing_imports = true
[[tool.mypy.overrides]]
module = "cvxpy.*"
implicit_reexport = true

[tool.hatch.envs.hatch-static-analysis]
# https://hatch.pypa.io/latest/config/static-analysis/
config-path = "ruff_defaults.toml"

[tool.ruff]
extend = "ruff_defaults.toml"
line-length = 88
preview = true
show-fixes = true
unsafe-fixes = true

[tool.ruff.lint]
extend-ignore = [
  "N802",    # visitor uses uppercase letters in method names
  "N811",    # CVXPY uses UPPERCASE for non constants
  "PLR2004", # 'magic' constants are not that annoying
  "S101",    # asserts used for type narrowing
]
extend-select = [
  "NPY",
]
exclude = [
  "src/cvxpy_gurobi/_version.py",  # autogenerated by hatch-vcs
]
[tool.ruff.lint.extend-per-file-ignores]
"tests/*" = [
  "FBT001", # bool positional arguments are necessary with parametrized tests
  "INP001", # no __init__.py in tests
  "N806",   # uppercase letters for matrices
]

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = ["cvxpy_gurobi", "test_problems"]

[tool.ruff.format]
skip-magic-trailing-comma = true

[tool.pytest.ini_options]
pythonpath = "tests"

[tool.coverage.run]
source_pkgs = ["cvxpy_gurobi"]
branch = true
parallel = true
omit = [
  "*/_version.py",  # autogenerated by hatch-vcs
]
[tool.coverage.report]
exclude_also = [
  'if TYPE_CHECKING:',
]
