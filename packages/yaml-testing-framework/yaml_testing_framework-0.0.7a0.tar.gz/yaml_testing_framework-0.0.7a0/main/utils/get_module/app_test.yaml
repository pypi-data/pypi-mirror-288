help:
- https://stackoverflow.com/questions/19009932/import-arbitrary-python-source-file-python-3-3


resources:
- &RESOURCE
  resource: &RESOURCE_PATH ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/utils/get_module/resource.py
- &CHECKS
  resource: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/checks/app.py
- &GLOBAL_RESOURCE
  resource: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/resources/app.py


tests:
- function: main
  description: Orchestrates execution of functions within the module
  tests:
  - description: Get module at location
    arguments:
      location: *RESOURCE_PATH
      name: app
    checks:
    - method: check_equals
      << : *CHECKS
      field: module.__file__
      expected: *RESOURCE_PATH
  - description: Return the module value when the argument is not a string
    cast_arguments:
    - method: wrapper_get_module
      << : *GLOBAL_RESOURCE
      field: module
    arguments:
      module: *RESOURCE_PATH
    checks:
    - method: check_equals
      << : *CHECKS
      field: module.__file__
      expected: *RESOURCE_PATH
- function: pre_processing
  description: Sets values for arguments processed by other functions in the module
  tests:
  - description: Undefined arguments
    arguments: {}
    checks:
    - method: check_sns
      << : *CHECKS
      expected:
        location: null
        flag: False
  - description: Location is a string
    arguments:
      location: location
    checks:
    - method: check_sns
      << : *CHECKS
      expected:
        location: location
        flag: False
  - description: Module is a module
    cast_arguments:
    - method: wrapper_get_module
      << : *GLOBAL_RESOURCE
      field: location
    arguments:
      location: *RESOURCE_PATH
    checks:
    - method: check_sns
      << : *CHECKS
      expected:
        location: *RESOURCE_PATH
        flag: true
- function: format_module_name
  description: >
    Returns the name of the module. Creates the name for the module's location
    if the name doesn't exist
  tests:
  - description: Location is defined
    arguments:
      location: /main/utils/get_module/resource.py
      name: null
    checks:
    - method: check_sns
      << : *CHECKS
      expected:
        name: .main.utils.get_module.resource
  - description: Name is defined
    arguments:
      name: name
      location: null
    checks:
    - method: check_sns
      << : *CHECKS
      expected:
        name: name
  - description: Name is the location to a file
    arguments:
      name: *RESOURCE_PATH
      location: null
    checks:
    - method: check_substring_in_string
      << : *CHECKS
      field: name
      expected: yaml-testing-framework.main.utils.get_module.resource
  - description: Name and location are undefined
    arguments:
      name: null
      location: null
    checks:
    - method: check_sns
      << : *CHECKS
      expected:
        name: app
  - description: Name and location are undefined. Pool is true.
    arguments:
      name: null
      location: null
    checks:
    - method: check_sns
      << : *CHECKS
      expected:
        name: app
- function: get_module_from_location
  description: Get the module at a given file path
  tests:
  - description: Location doesn't exist
    arguments:
      location: DOES_NOT_EXIST/app.py
      name: name
    checks:
    - method: check_equals
      << : *CHECKS
      field: __dict__
      expected:  {}
  - description: Location exists
    arguments:
      name: name
      location: *RESOURCE_PATH
    checks:
    - method: check_module
      << : *CHECKS
      field: module
      expected:
        location: *RESOURCE_PATH
  - description: Location is defined
    arguments:
      name: app
      location: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/utils/get_module/resource.py
    checks:
    - method: check_module
      << : *CHECKS
      field: module
      expected:
        location: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/utils/get_module/resource.py
- function: post_processing
  description: Returns a module or default value in a simple name space
  tests:
  - description: Undefined arguments
    arguments: {}
    checks:
    - method: check_equals
      << : *CHECKS
      field: result.module
      expected: null
  - description: Return default
    arguments:
      default: default
    checks:
    - method: check_equals
      << : *CHECKS
      field: result.module
      expected: default
  - description: Return default
    cast_arguments:
      << : *GLOBAL_RESOURCE
      field: default
      method: wrapper_get_module
    arguments:
      module: module
      default : *RESOURCE_PATH
    checks:
    - method: check_equals
      << : *CHECKS
      field: result.module.__file__
      expected: *RESOURCE_PATH
