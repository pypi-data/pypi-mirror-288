help:
- https://stackoverflow.com/questions/6893968/how-to-get-the-return-value-from-a-thread
- https://stackoverflow.com/questions/10415028/how-can-i-get-the-return-value-of-a-function-passed-to-multiprocessing-process
- https://pypi.org/project/Pebble/


todos:
- TODO: centralized module where the module to test, resource, and other test objects are imported to
- TODO: Think about adding patch, cast, and other operations to to setup/teardown
- TODO: If app exits (error, crtl+c, etc.) setup objects should be torn down
- TODO: Add module to casts similar to how it is done here with formatting data and preferred fields
- TODO: independent.process_operations add do_nothing if operation not in LOCALS
- TODO: Add logic to teardown all objects in the case of the program exit
- TODO: Add `readme` section to test files and pull this into project's main readme.md
- TODO: add logic to call setup/teardown for specific functions


exclude_methods:
- process_setup  # wrapper method
- process_teardown  # wrapper method


resources:
- &MODULE_PATH
  ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/process/setup/app.py
- &RESOURCE
  resource: &RESOURCE_PATH ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/process/setup/resource.py
- &CHECKS
  resource: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/checks/app.py
- &GLOBAL_RESOURCE
  resource: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/resources/app.py


tests:
- function: main
  description: >
    Handles setting up and tearing down objects at the start and end of
    various phases of the testing process.
  tests:
  - description: Undefined arguments
    arguments: {}
    checks:
    - method: check_equals
      << : *CHECKS
      field: __dict__
      expected: {}
  - description: No defined setup objects
    arguments:
      module: *RESOURCE_PATH
      action: setup
      setup:
      - name: integer
        phase: check
        method: get_integer
      phase_: check
    checks:
    - method: check_equals
      << : *CHECKS
      field: __dict__
      expected: {}
  - description: Setup object at any phase besides test
    arguments:
      module: *RESOURCE_PATH
      action: setup
      setup:
      - name: string
        method: get_string
        phase: module
      phase_: module
    checks:
    - method: check_type
      << : *CHECKS
      expected: SimpleNamespace
- function: get_flags
  description: Format or update data before processing setup/teardown actions
  tests:
  - description: Undefined arguments
    arguments: {}
    checks:
    - method: check_sns
      << : *CHECKS
      expected:
        flags: false
  - description: Phases do not match. Action is valid.
    arguments:
      phase: function
      phase_: module
      action: setup
    checks:
    - method: check_sns
      << : *CHECKS
      expected:
        flags: false
  - description: Phases are invalid and match. Action is valid.
    arguments:
      phase: phase
      phase_: phase
      action: setup
    checks:
    - method: check_sns
      << : *CHECKS
      expected:
        flags: false
  - description: Phases match. Action is invalid.
    arguments:
      phase_: function
      phase: function
      action: action
    checks:
    - method: check_sns
      << : *CHECKS
      expected:
        flags: false
  - description: Phases match and action is valid
    arguments:
      phase_: module
      phase: module
      action: setup
    checks:
    - method: check_sns
      << : *CHECKS
      expected:
        flags: True
- function: perform_action
  description: >
    Handles performing a setup or teardown by calling the methods associated
    with each action
  cast_arguments:
  - field: method
    method: get_method
    << : *RESOURCE
  tests:
  - description: Undefined arguments
    arguments: {}
    checks:
    - method: check_error
      << : *CHECKS
      expected: AttributeError
  - description: Setup action
    arguments:
      method: get_string
      action: setup
      arguments: {}
      name: setup
      timeout: 1
      flags: true
    checks:
    - method: check_sns
      << : *CHECKS
      expected:
        value: value
  - description: Teardown action
    arguments:
      action: teardown
      name: teardown
      flags: True
      arguments: {}
    checks:
    - method: check_sns
      << : *CHECKS
      expected:
        value: null
- function: do_nothing
  description: Method that is called when no setup method is defined.
  tests:
  - description: Key in dictionary
    arguments: {}
    checks:
    - method: check_equals
      << : *CHECKS
      expected: null
  - description: Key not in dictionary
    arguments:
      a: a
      b: b
    checks:
    - method: check_equals
      << : *CHECKS
      expected: null
- function: get_method
  description: Returns a method from a module
  cast_arguments:
  - field: module
    method: wrapper_get_module
    << : *GLOBAL_RESOURCE
  tests:
  - description: Undefined arguments or method does not exist
    arguments: {}
    checks:
    - method: check_function
      << : *CHECKS
      field: method
      expected:
        name: do_nothing
        location: ${YAML_TESTING_FRAMEWORK_ROOT_DIR}/main/process/setup/app.py
  - description: Method exists in module
    arguments:
      module: *RESOURCE_PATH
      method: do_nothing
    checks:
    - method: check_function
      << : *CHECKS
      field: method
      expected:
        name: do_nothing
        location: *RESOURCE_PATH
- function: get_future
  description: >
    Creates a task from a method and arguments and executes the task in a
    separate thread
  cast_arguments:
  - method: get_method
    << : *RESOURCE
    field: method
  tests:
  - description: Undefined arguments
    arguments: {}
    checks:
    - method: check_type
      << : *CHECKS
      expected: ProcessFuture
    - method: check_error
      << : *CHECKS
      cast_output:
      - method: get_future_result
        << : *RESOURCE
      expected: TypeError
  - description: Defined arguments
    arguments:
      method: do_nothing
      arguments: {}
    checks:
    - method: check_type
      << : *CHECKS
      expected: ProcessFuture
    - method: check_equals
      << : *CHECKS
      cast_output:
      - method: get_future_result
        << : *RESOURCE
      expected: null
- function: run_process_in_separate_thread
  description: Creates a separate thread to run a setup method in
  cast_arguments:
  - field: method
    method: get_method
    << : *RESOURCE
  tests:
  - description: Undefined arguments
    arguments: {}
    checks:
    - method: check_error
      << : *CHECKS
      expected: TypeError
  - description: >
      Return a future for running process that should be kept alive until
      it returns a result
    arguments:
      method: living
      arguments: {}
      timeout: -1
    checks:
    - method: check_type
      << : *CHECKS
      expected: ProcessFuture
    - method: check_equals
      << : *CHECKS
      cast_output:
      - method: get_future_result
        << : *RESOURCE
      expected: timed_out
  - description: Timeout
    arguments:
      timeout: 2
      method: keep_running
      arguments: {}
    checks:
    - method: check_equals
      << : *CHECKS
      expected: dead
- function: setup_object
  description: Calls a method to create an object or start a process
  cast_arguments:
  # - module: *RESOURCE_PATH
  #   method: get_method
  #   field: method
  - method: get_method
    << : *RESOURCE
    field: method
    unpack: true
  tests:
  - description: Undefined arguments
    arguments: {}
    checks:
    - method: check_error
      << : *CHECKS
      field: value
      expected: TypeError
  - description: Defined arguments
    arguments:
      method: get_string
      arguments: {}
      timeout: 3
    checks:
    - method: check_sns
      << : *CHECKS
      expected:
        value: value
  - description: Timeout
    arguments:
      method: living
      arguments: {}
      timeout: 2
    checks:
    - method: check_sns
      << : *CHECKS
      expected:
        value: timed_out
- function: teardown_object
  description: >
    Tear down a setup object. If the object is a `Future` then terminate
    the thread
  tests:
  - description: Undefined arguments
    arguments: {}
    checks:
    - method: check_sns
      << : *CHECKS
      expected:
        value: null
  - description: Object is a dict
    patches:
    - route: SETUP
      method: value
      value:
        setup: setup
    arguments:
      name: add
    checks:
    - method: check_sns
      << : *CHECKS
      expected:
        value: null
  # # TODO: Add casting functionality to patches
  # - description: Object is a future
  #   patches:
  #   - route: SETUP
  #     method: value
  #     value:
  #       setup: setup
  #     cast:
  #     - field: value
  #       method: get_future
  #       << : *RESOURCE
  #   arguments:
  #     name: add
  #   checks:
  #   - method: check_sns
  #     << : *CHECKS
  #     expected:
  #       value: null
- function: update_store
  description: Stores the value or process associated with a setup object
  spies:
  - set_object.main
  checks:
  - method: check_equals
    << : *CHECKS
    expected: {}
  tests:
  - description: Undefined arguments
    arguments: {}
  - description: Defined arguments
    arguments:
      name: name
      value: value
- function: teardown_all
  description: >
    Tear down all objects that have been setup in case the app exits prematurely
  tests:
  - description: Undefined arguments
    arguments: {}
    checks:
    - method: check_equals
      << : *CHECKS
      expected: {}
  - patches:
    - route: STORE
      method: value
      value:
        a: A
        b: B
        c: C
    description: Defined arguments
    arguments: null
    checks:
    - method: check_equals
      << : *CHECKS
      expected:
        a: null
        b: null
        c: null
- function: get_store
  description: >
    Returns a simple name space object containing a dictionary that store
    setup or torn down objects
  tests:
  - description: Undefined arguments
    arguments: {}
    checks:
    - method: check_type
      << : *CHECKS
      expected: SimpleNamespace
    - method: check_type
      << : *CHECKS
      field: setup_
      expected: dict