import os
import difflib 
from simple_term_menu import TerminalMenu 

from bs4 import BeautifulSoup
from .cucumber_text import create_cucumber_text
from .cache_file import feature_cache_file, changes_cache_file
from .bdd_generator import generator

# —Å–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª .feature –∏ cache.txt
def create_cucumber_file(**params):

    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–∫–∏ –ø–æ–¥ __featurecache__
    if os.path.isdir("__featurecache__") != True:
        os.mkdir("__featurecache__")
        os.mkdir("__featurecache__/feature_cache")
        os.mkdir("__featurecache__/feature_cache_changes")

    # –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–∏–µ –≤ –µ—Ä—ñ—Å
    options = [
        f'üî¥ –æ–±–Ω–æ–≤–∏—Ç—å  ü•í {params["name_file"]}.feature',
        f'üîµ –Ω–µ –º–µ–Ω—è—Ç—å ü•í {params["name_file"]}.feature',
    ]
    soup = BeautifulSoup(str(params["description"]), 'html.parser')

    if params["all_epic"] == True:
        description_html = params["description"]
    else:
        description_html = soup.find(params["scenario_number"])

    # –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω –ª–∏ —Ñ–∞–π–ª
    if os.path.isfile(f'{params["name_file"]}.feature'):
        print('\n‚õî –¢–∞–∫–æ–π ü•í —É–∂–µ –µ—Å—Ç—å üëâ', f'{params["name_file"]}.feature')
        file = open(f'{params["name_file"]}.feature')
    
        # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞—Ç—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        file_date = file.readlines()[2].replace("# ", "").replace("\n", "")
        updated_at = params["updated_at"]

        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º txt –∏ epic gitlab
        if file_date == updated_at:
            print(f'üîµ –¢–µ–∫—Å—Ç –ù–ï –º–µ–Ω—è–ª—Å—è')
        else:
            print(f'üî¥ –¢–µ–∫—Å—Ç –º–µ–Ω—è–ª—Å—è\n')

            # —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª (txt) —Å –µ—Ä—ñ—Å
            cache_file_read = open(f'__featurecache__/feature_cache/{params["name_file"]}.txt', 'r')
            cache_text = f"""{cache_file_read.read()}"""
            epic_text = f"""{description_html}"""

            diff = difflib.ndiff(cache_text.splitlines(), epic_text.splitlines())
            
            # –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ epic
            print(f'‚ûñ‚ûñ‚ûñ‚ûñ –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç–µ ‚ûñ‚ûñ‚ûñ‚ûñ')
            changes_diff = '\n'.join(line for line in diff if not line.startswith('  '))
            print(changes_diff)
            print(f'‚ûñ‚ûñ‚ûñ‚ûñ        END       ‚ûñ‚ûñ‚ûñ‚ûñ\n')

            # –≤—ã–≤–æ–¥ —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
            terminal_menu = TerminalMenu(options)
            menu_entry_index = terminal_menu.show()
     
            # –µ—Å–ª–∏ —Å–æ–≥–ª–∞—Å–∏–ª–∏—Å—å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è => –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º .feature –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ cache txt
            if menu_entry_index == 0:
                # cache –µ—Ä—ñ—Å –¥–ª—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
                feature_cache_file(**params, description_html=description_html)
                # —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
                create_cucumber_text(**params)
                print(f'‚õî –§–∞–π–ª {params["name_file"]}.feature –∏–∑–º–µ–Ω–µ–Ω ‚õî')
                # —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ .txt —Å –¥–∞—Ç–æ–∞–π
                changes_cache_file(**params, changes_diff=changes_diff)
            else:                
                print(f'üîµ –û—Ç–º–µ–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Ñ–∞–π–ª–∞ {params["name_file"]}.feature üîµ')
    else:
        # —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
        create_cucumber_text(**params)
        
        # –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω –ª–∏ —Ñ–∞–π–ª cache_changes
        if os.path.isfile(f'__featurecache__/feature_cache/{params["name_file"]}.txt'):
            print('\n‚õî –¢–∞–∫–æ–π üìÅ —É–∂–µ –µ—Å—Ç—å üëâ', f'__featurecache__/feature_cache/{params["name_file"]}.txt')
        else:
            # —Ñ–∞–π–ª–∞ .feature –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º
            feature_cache_file(**params, description_html=description_html)

        if params['generator'] == True:
            generator(**params)
