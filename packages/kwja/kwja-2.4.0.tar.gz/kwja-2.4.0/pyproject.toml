[tool.poetry]
name = "kwja"
version = "2.4.0"
description = "A unified Japanese analyzer based on foundation models"
authors = [
    "Hirokazu Kiyomaru <kiyomaru@i.kyoto-u.ac.jp>",
    "Nobuhiro Ueda <ueda@nlp.i.kyoto-u.ac.jp>",
    "Kazumasa Omura <omura@nlp.i.kyoto-u.ac.jp>",
    "Takashi Kodama <kodama@nlp.i.kyoto-u.ac.jp>",
    "Yugo Murawaki <murawaki@i.kyoto-u.ac.jp>",
    "Daisuke Kawahara <dkw@waseda.jp>",
    "Sadao Kurohashi <kuro@i.kyoto-u.ac.jp>"
]
maintainers = [
    "Hirokazu Kiyomaru <kiyomaru@i.kyoto-u.ac.jp>",
    "Nobuhiro Ueda <ueda@nlp.i.kyoto-u.ac.jp>",
    "Kazumasa Omura <omura@nlp.i.kyoto-u.ac.jp>",
    "Takashi Kodama <kodama@nlp.i.kyoto-u.ac.jp>",
    "Yugo Murawaki <murawaki@i.kyoto-u.ac.jp>"
]
license = "MIT"
readme = "README.md"
repository = "https://github.com/ku-nlp/kwja"
keywords = ["NLP", "japanese"]
classifiers = [
    "Environment :: GPU",
    "Environment :: MacOS X",
    "Natural Language :: Japanese",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Text Processing",
]

packages = [
    { include = "kwja", from = "src" }
]
include = [
    "kwja/resource/**/*"
]
exclude = [
    "src/kwja/metrics/**/*"
]

[tool.poetry.dependencies]
python = ">=3.8,<3.13"
torch = ">=1.11,!=2.0.1,!=2.1.0"  # https://github.com/pytorch/pytorch/issues/100974ypmun
numpy = [
    { version = "~1.24.4", python = "<3.9" },
    { version = ">=1.26,<2.0", python = ">=3.9" },
]
transformers = { version = "~4.42.2", extras = ["sentencepiece"] }
tokenizers = "^0.19.1"
pytorch-lightning = "~2.3.3"  # As "lightning" comes with many extra dependencies, we stay with "pytorch-lightning"
omegaconf = "^2.1"
hydra-core = "^1.2"
rhoknp = "^1.6.0"
typer-slim = "^0.12.3"
jinf = "^1.0.4"
pure-cdb = "^4.0"
rich = ">=12.4"
pyyaml = "^6.0"
regex = ">=2024.7.24"
cohesion-tools = "^0.5.7"
importlib-resources = { version = "^6.0", python = "<3.9" }

[tool.poetry.group.dev.dependencies]
torchmetrics = "^1.0"
seqeval = "^1.2"
scikit-learn = [
    { version = "^1.3", python = "<3.9" },
    { version = "^1.4", python = ">=3.9" },
]
Levenshtein = ">=0.21.0"
cohesion-tools = { version = "^0.5.7", extras = ["eval"] }
python-dotenv = "^1.0"
jaconv = "^0.3.4"
ipython = [
    { version = "~8.12.1", python = "<3.9" },
    { version = "^8.13", python = ">=3.9" },
]
ipdb = "^0.13.13"
types-attrs = "^19.1"
types-pyyaml = "^6.0.12.9"
wandb = "^0.17.5"

[tool.poetry.group.test.dependencies]
torchmetrics = "^1.0"
seqeval = "^1.2"
Levenshtein = ">=0.21.0"
pandas = "^2.0"
jaconv = "^0.3.4"
pytest = "^8.0"
pytest-cov = "^5.0"
pytest-profiling = "^1.7"

[tool.poetry.scripts]
kwja = "kwja.cli.cli:app"

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311"]

[tool.isort]
line_length = 120
py_version = 39
profile = "black"
src_paths = ["src"]

[tool.flake8]
# E203 is not PEP8 compliant and black insert space around slice (https://black.readthedocs.io/en/stable/faq.html#why-are-flake8-s-e203-and-w503-violated)
# E501: Line too long. Disable it to allow long lines of comments and print lines which black allows.
# W503: line break before binary operator (https://www.flake8rules.com/rules/W503.html)
ignore = ["E203", "E501", "W503"]
max-line-length = 120

[tool.mypy]
python_version = 3.8

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = [
    # note the use of single quote below to denote "raw" strings in TOML
    'ignore::UserWarning',
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
