# generated by datamodel-codegen:
#   filename:  dataInsight/custom/lineChart.json
#   timestamp: 2024-08-05T15:12:43+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import ConfigDict, Field
from typing_extensions import Annotated

from metadata.ingestion.models.custom_pydantic import BaseModel

from . import dataInsightCustomChart


class Type(Enum):
    LineChart = 'LineChart'


class LineChart(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    type: Annotated[
        Optional[Type],
        Field(Type.LineChart, description='Type of the data insight chart.'),
    ]
    function: Optional[dataInsightCustomChart.Function] = None
    field: Annotated[
        Optional[str],
        Field(None, description='Filter field for the data insight chart.'),
    ]
    filter: Annotated[
        Optional[str],
        Field(None, description='Filter value for the data insight chart.'),
    ]
    formula: Annotated[
        Optional[str],
        Field(None, description='Formula for the data insight chart calculation.'),
    ]
    groupBy: Annotated[
        Optional[str],
        Field(None, description='Breakdown field for the data insight chart.'),
    ]
    xAxisLabel: Annotated[
        Optional[str],
        Field(None, description='X-axis label for the data insight chart.'),
    ]
    yAxisLabel: Annotated[
        Optional[str],
        Field(None, description='Y-axis label for the data insight chart.'),
    ]
    kpiDetails: Optional[dataInsightCustomChart.KpiDetails] = None
