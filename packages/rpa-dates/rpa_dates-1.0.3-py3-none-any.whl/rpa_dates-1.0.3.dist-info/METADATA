Metadata-Version: 2.1
Name: rpa-dates
Version: 1.0.3
Summary: Dates actions for RPA
Author-email: Grzegorz Ziolo <grzegorz.ziolo@gmail.com>
License: The MIT License (MIT)
        
        Copyright © 2022 Ziolo, Grzegorz
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
        
        Fork this project to create your own MIT license that you can always link to.
        
Project-URL: Homepage, https://github.com/21010/rpa-dates
Keywords: rpa,dates,holidays
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: dev
Requires-Dist: black ; extra == 'dev'
Requires-Dist: bumpver ; extra == 'dev'
Requires-Dist: isort ; extra == 'dev'
Requires-Dist: pip-tools ; extra == 'dev'
Requires-Dist: unitest ; extra == 'dev'

# RPA_DATES
Python module delivers some actions to manipulate with dates and detect holidays.
The module is compatibile with the Robocorp.

## Installation
To install the package run:

```
pip install rpa_dates
```

## Example
### Fetching today's date
```
from rpa_dates import Dates
dates = Dates()
dates.today()
```
### Checking if today is a public holiday in Poland
```
from rpa_dates import Dates
dates = Dates()
dates.is_public_holiday('PL', )
```
### Get next business day from today's date including holidays for Peru
```
from rpa_dates import Dates
dates = Dates()
dates.next_working_day(include_holidays=True, country_code='PE')
```
### Dependencies
Python packages: calendar, typing, datetime, dateutil, requests
External: https://date.nager.at API
