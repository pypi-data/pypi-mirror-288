Metadata-Version: 2.1
Name: bssd-core
Version: 0.1.2
Summary: The core of the BSSD project
Author-email: Eric Krämer <eric.kraemer@stud.tu-darmstadt.de>
Maintainer-email: Moritz Berghöfer <moritz.berghoefer@web.de>
License: Copyright 2024 Institute of Automotive Engineering (FZD), Technical University of Darmstadt
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
        
Keywords: bssd,osm
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: osmium
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"

# BSSD Core

# Install
## Using pip
```bash
pip install bssd-core
```
This will install the latest version of the bssd core library available in [PyPI](https://pypi.org/project/bssd/) to your environment.

## Manual installation from source

Install the package into your local python3 virtual environment:
- Clone the source code to a directory of your choice  
```bash
git clone https://gitlab.com/tuda-fzd/scenery-representations-and-maps/bssd-core.git path/to/bssd-core-src/
```
If you are using virtual environments, make sure to activate the correct environment to install the library into e.g:
```bash
source /<path-to-my-project>/.venv/bin/activate
```

Install the library:
```bash
pip install -e path/to/bssd-core-src/
```

# Usage
The package is build as an extension of [pyosmium](https://docs.osmcode.org/pyosmium/latest/intro.html).
Following is a simple example on how to use the library. The referenced objects from the
handler are only temporary. If data is wished to be stored it must be copied out.

```python
import osmium
from bssd.core import BSSDHandler, Reservation
from bssd.core import mutable


class Handler(BSSDHandler):
    def __init__(self):
        super().__init__()
        self.writer = osmium.SimpleWriter("out.osm")

    # callback function for reservations
    def reservation(self, r: Reservation):
        # r is readonly, to change r it must be converted
        r: mutable.Reservation = r.make_mutable()
        r.bicycle = True
        # write the changed reservation to the output file
        self.writer.add_relation(r.get_osmium())


if __name__ == "__main__":
    h = Handler()
    h.apply_file("in.osm")
```

# BSSDHandler callback functions
These callback functions need to be implemented in the inheriting class to be used.
The function will receive the specified objects after calling apply_file().
The relation callback can be used to read non BSSD elements.
- behavior_space(core.BehaviorSpace)
- behavior(core.Behavior)
- boundary_lat(core.BoundaryLat)
- boundary_long(core.BoundaryLong)
- reservation(core.Reservation)
- relation(osm.Relation)
